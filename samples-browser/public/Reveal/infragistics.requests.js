/*!@license
* Infragistics.Web.ClientUI ..\..\..\JSNative\infragistics.requests.js <build_number>
*
* Copyright (c) 2011-<year> Infragistics Inc.
*
* http://www.infragistics.com/
*
* Depends:
*     jquery-1.4.4.js
*     jquery.ui.core.js
*     jquery.ui.widget.js
*     infragistics.util.js
*/
(function ($) {
$.ig = $.ig || {};
var $$t = {}
$.ig.$currDefinitions = $$t;
$.ig.util.bulkDefine([
"WebRequest:a",
"Object:b",
"Type:c",
"Boolean:d",
"ValueType:e",
"Void:f",
"IConvertible:g",
"IFormatProvider:h",
"Number:i",
"String:j",
"IComparable:k",
"Number:l",
"IComparable$1:m",
"IEquatable$1:n",
"Number:o",
"Number:p",
"Number:q",
"Number:r",
"NumberStyles:s",
"Enum:t",
"Array:u",
"IList:v",
"ICollection:w",
"IEnumerable:x",
"IEnumerator:y",
"NotSupportedException:z",
"Error:aa",
"Number:ab",
"String:ac",
"StringComparison:ad",
"RegExp:ae",
"CultureInfo:af",
"DateTimeFormatInfo:ag",
"Calendar:ah",
"Date:ai",
"Number:aj",
"DayOfWeek:ak",
"DateTimeKind:al",
"CalendarWeekRule:am",
"NumberFormatInfo:an",
"CompareInfo:ao",
"CompareOptions:ap",
"IEnumerable$1:aq",
"IEnumerator$1:ar",
"IDisposable:as",
"StringSplitOptions:at",
"Number:au",
"Number:av",
"Number:aw",
"Number:ax",
"Number:ay",
"Number:az",
"Assembly:a0",
"Stream:a1",
"SeekOrigin:a2",
"RuntimeTypeHandle:a3",
"MethodInfo:a4",
"MethodBase:a5",
"MemberInfo:a6",
"ParameterInfo:a7",
"TypeCode:a8",
"ConstructorInfo:a9",
"PropertyInfo:ba",
"Dictionary:bb",
"Dictionary:bc",
"SessionResponseType:bd",
"Script:be",
"WebCoreUtils:bf",
"NativeDictionaryUtility:bg",
"Array:bh",
"Array:bi",
"CompareCallback:bj",
"MulticastDelegate:bk",
"IntPtr:bl",
"JSDictionary:bm",
"JSAjaxBeforeSendRequestBlock:bn",
"SessionTask:bo",
"SessionDelegate:bp",
"CloudError:bq",
"CloudErrorType:br",
"NativeStringUtility:bs",
"CPStringUtility:bt",
"JsonPushEventHandler:bu",
"ExecutionBlock:bv",
"URLRequest:bw",
"RQHTTPUtils:bx",
"CookieStorageMode:by",
"SessionHTTPMethod:bz",
"SessionContentType:b0",
"Nullable$1:b1",
"SessionTaskType:b2",
"SessionType:b3",
"CPJSONObject:b4",
"NativeJSONUtility:b5",
"FileReader:b6",
"ObjectBlock:b7",
"FileLoader:b8",
"JSAjaxSuccessReponseBlock:b9",
"JSAjaxErrorReponseBlock:ca",
"RequestSuccessBlock:cb",
"RequestBase:cc",
"IRequest:cd",
"RequestErrorBlock:ce",
"SessionRequestProgressUpdateBlock:cf",
"SessionRequestFileDownloadedBlock:cg",
"CloudFilesBlock:ch",
"CloudFileBlock:ci",
"CloudFile:cj",
"LinkedDocument:ck",
"ActivityTrackingBackingStore:cl",
"BackingStoreObjectBase:cm",
"BackingStoreActivity:cn",
"GoogleAnalyticsActivity:co",
"ArrayUtility:cp",
"CPMathUtility:cq",
"CPRect:cr",
"Math:cs",
"CPPoint:ct",
"CPSize:cu",
"NativeNullableUtility:cv",
"BoolForObjectBlock:cw",
"ObjectForObjectBlock:cx",
"SimpleIDItemBackingStore:cy",
"DocumentLink:cz",
"LinkedDocumentChildPagingInfo:c0",
"GenericCloudFile:c1",
"CPDateTime:c2",
"NativeDateUtility:c3",
"JSDate:c4",
"DateUtility:c5",
"CPMonthInfo:c6",
"CPDateTimeFormatProvider:c7",
"CloudProviderType:c8",
"MicrosoftFile:c9",
"ContentProperties:da",
"NativeRequestUtility:db",
"Request:dc",
"ReadFileRequest:dd",
"RequestsLocalizationKeys:de",
"NativeRequestLocalizeUtil:df",
"SharePointFile:dg",
"SharePointFileBase:dh",
"SharePointCloudFileBase:di",
"GoogleFile:dj",
"CloudProviderTypeUtility:dk",
"CloudAccountUserInfo:dl",
"BoxAccountUserInfo:dm",
"GoogleAccountUserInfo:dn",
"MicrosoftAccountUserInfo:dp",
"SharePointAccountUserInfo:dq",
"SharePointUser:dr",
"DropboxAccountUserInfo:ds",
"InfragisticsAccountUserInfo:dt",
"SalesForceAccountUserInfo:du",
"DataDotWorldUserInfo:dv",
"JWTDecoder:dw",
"TokenState:dx",
"OAuthTokenStateCallback:dy",
"IRequestFactory:dz",
"OAuthProvider:d0",
"OAuthKeys:d1",
"Token:d2",
"OAuthRequestBase:d3",
"SessionRequestBase:d4",
"NativeXmlProxy:d5",
"IOAuthRequest:d6",
"NativeThreadUtility:d7",
"DataSourceAssignment:d8",
"CloudAccountUserInfoFromJWT:d9",
"HubspotAccountUserInfo:ea",
"QuickBooksUserInfo:eb",
"SearchCapabilities:ec",
"DropboxFileManager:ed",
"CloudFileManager:ee",
"ProvideCredentialsBlock:ef",
"RQCredentials:eg",
"CloudErrorBlock:eh",
"ProgressFileBlock:ei",
"FileDownloadedBlock:ej",
"FileDownloadedIfModifiedBlock:ek",
"SearchQuery:el",
"CloudAccountUserInfoBlock:em",
"CloudFilePermissionsBlock:en",
"CloudFilePermissions:eo",
"CloudFileMemberPermissions:ep",
"DoubleStringBlock:eq",
"SimpleRequestManager:er",
"StringBlock:es",
"DropboxGetFilesRequest:et",
"DropboxRequestBase:eu",
"DropboxOAuthProvider:ev",
"DropboxFile:ew",
"DropboxSearchFilesRequest:ex",
"DropboxDownloadFileRequest:ey",
"DropboxGetMetadataRequest:ez",
"DropboxGetSharedLinksRequest:e0",
"DropboxCreateSharedLinkRequest:e1",
"RequestWrapper:e2",
"DropboxCreateFolderRequest:e3",
"DropboxDeleteRequest:e4",
"DropboxGetAccountInfo:e5",
"DropboxDownloadLinkRequest:e6",
"DropboxCopyFileRequest:e7",
"DropboxFileRequest:e8",
"DropboxMoveFileRequest:e9",
"DropboxSharingGetFileMetadataRequest:fa",
"DropboxFileAction:fb",
"DropboxFileActionString:fc",
"DropboxFilePermissions:fd",
"DropboxSharingListFilePermissionsRequest:fe",
"DropboxSharingRemoveFileMemberRequest:ff",
"DropboxExplicitSharePermissions:fg",
"DropboxSharingGetFolderMetadataRequest:fh",
"DropboxFolderAction:fi",
"DropboxFolderActionString:fj",
"DropboxSharingAddFileMemberRequest:fk",
"DropboxAccessLevel:fl",
"DropboxAccessLevelString:fm",
"DropboxSharingShareFolderRequest:fn",
"DropboxSharingAddFolderMemberRequest:fo",
"DropboxSharingMountFolderRequest:fp",
"DropboxDownloadFileFromLinkRequest:fq",
"MicrosoftRequestBase:fr",
"MicrosoftOAuthProvider:fs",
"HttpRequestBuilder:ft",
"RequestErrorInterceptorBlock:fu",
"GenericRequest:fv",
"ProcessHeadersBlock:fw",
"RequestPreExecuteBlock:fx",
"ProcessResponseStreamBlock:fy",
"ProcessObjectBlock:fz",
"DropboxWriteMode:f0",
"NativeFileUtility:f1",
"DropboxStartUploadSessionRequest:f2",
"DropboxAppendV2UploadSessionRequest:f3",
"DropboxFinishUploadSessionRequest:f4",
"GoogleFileManager:f5",
"GoogleGetFilesRequest:f6",
"GoogleRequestBase:f7",
"GoogleOAuthProvider:f8",
"GoogleGetSharedDrivesRequest:f9",
"GoogleSearchFilesRequest:ga",
"GoogleDownloadFileRequest:gb",
"GoogleGetMetadataRequest:gc",
"GoogleUploadDataChunkRequest:gd",
"GoogleCreateFolderRequest:ge",
"GoogleCreateSharedLinkRequest:gf",
"GoogleTrashFileRequest:gg",
"GoogleDeleteFileRequest:gh",
"GoogleGetAccountInfo:gi",
"GoogleGetFileRequest:gj",
"GoogleDownloadLinkRequest:gk",
"GoogleFileRequest:gl",
"GoogleCopyFileRequest:gm",
"GoogleMoveFileRequest:gn",
"GoogleGetFilePermissionsRequest:go",
"GoogleFilePermissions:gp",
"GoogleListFilePermissionsRequest:gq",
"GoogleDeleteFilePermissionsRequest:gr",
"GoogleShareObjectRequest:gs",
"GoogleDownloadFileFromLinkRequest:gt",
"GoogleDeleteSharedLinkRequest:gu",
"GoogleCreateOverwriteSessionRequest:gv",
"GoogleCreateUploadSessionRequest:gw",
"BoxFileManager:gx",
"BoxGetFilesRequest:gy",
"BoxRequestBase:gz",
"BoxOAuthProvider:g0",
"BoxFile:g1",
"BoxSearchFilesRequest:g2",
"BoxDownloadFileRequest:g3",
"BoxGetMetadataRequest:g4",
"NotImplementedException:g5",
"BoxCreateFolderRequest:g6",
"BoxGetSharedLinkRequest:g7",
"BoxCreateSharedLinkRequest:g8",
"BoxDeleteFolderRequest:g9",
"BoxDeleteFileRequest:ha",
"BoxGetAccountInfo:hb",
"BoxGetFolderInfoRequest:hc",
"BoxDownloadLinkRequest:hd",
"BoxFileRequest:he",
"BoxCopyFileRequest:hf",
"BoxMoveFileRequest:hg",
"BoxFilePermissions:hh",
"BoxFileCollaborationPermissions:hi",
"BoxGetUserCollaborationRequest:hj",
"BoxDeleteUserCollaborationRequest:hk",
"BoxCreateCollaborationRequest:hl",
"BoxDownloadFileFromLinkRequest:hm",
"SharePointFileManager:hn",
"SharePointOnPremSessionInfo:ho",
"SharePointLibrary:hp",
"SharePointListBase:hq",
"SharePointFolder:hr",
"ItemsBlock:hs",
"SharePointField:ht",
"SharePointView:hu",
"SharePointGetPeopleRequest:hv",
"SharePointRequestBase:hw",
"SharePointOAuthProvider:hx",
"SharePointSite:hy",
"SharePointList:hz",
"SharePointListItem:h0",
"SharePointFileRequest:h1",
"SharePointCopyFileRequest:h2",
"SharePointMoveFileRequest:h3",
"SharePointSearchFilesRequest:h4",
"SharePointSearchQuery:h5",
"SharePointProviderUtility:h6",
"SharePointDeleteRequest:h7",
"SharePointDownloadLinkRequest:h8",
"SharePointGetFilePermissions:h9",
"SPPermissions:ia",
"PermissionKind:ib",
"SPSharingInfoPermissions:ic",
"SPCloudFileMemberPermissions:id",
"SharePointGetSharingInformation:ie",
"SharePointRemoveShareLinkObject:ig",
"SharePointRemoveShareObject:ih",
"SharePointShareObject:ii",
"SharePointCreateSharedLinkRequest:ij",
"SharePointDownloadFileFromLinkRequest:ik",
"SharePointCreateFileRequest:il",
"MicrosoftFileManager:im",
"MicrosoftGetFilesRequest:io",
"MicrosoftDownloadFileRequest:ip",
"MicrosoftCreateUploadSessionRequest:iq",
"MicrosoftUploadDataChunkRequest:ir",
"MicrosoftGetMetadataRequest:is",
"MicrosoftSearchFilesRequest:it",
"MicrosoftCreateFolderRequest:iu",
"MicrosoftDeleteDriveItemRequest:iv",
"MicrosoftGetAccountInfo:iw",
"MicrosoftDownloadLinkRequest:ix",
"MicrosoftFileRequest:iy",
"MicrosoftCopyFileRequest:iz",
"MicrosoftMoveFileRequest:i0",
"MicrosoftItemPermissionsRequest:i1",
"MicrosoftItemPermissions:i2",
"MicrosoftDeleteItemPermissionsRequest:i3",
"MicrosoftItemAddPermissionsRequest:i4",
"MicrosoftRole:i5",
"MicrosoftRoleUtility:i6",
"MicrosoftGetSharedLinkRequest:i7",
"MicrosoftDownloadFileFromLinkRequest:i8",
"MicrosoftFileSimpleUploadRequest:i9",
"ProviderBase:ja",
"SharePointSubsite:jb",
"ProviderTokenState:jc",
"ProviderInfragisticsWebProxy:jd",
"InfragisticsWebCloudFileManager:je",
"InfragisticsGetFilesInFolder:jf",
"InfragisticsAPIRequestBase:jg",
"InfragisticsRequestsConfiguration:jh",
"CloudTeamManager:ji",
"CloudTeam:jj",
"CloudTeamMember:jk",
"GoogleTeamManager:jl",
"GoogleGroupsUserBelongsToRequest:jm",
"GoogleTeam:jn",
"GoogleGroupMembersRequest:jo",
"GoogleTeamMember:jp",
"GoogleOrganizationRequest:jq",
"GoogleOrganization:jr",
"CloudOrganization:js",
"GoogleGetPersonDetailsRequest:jt",
"MicrosoftTeamManager:ju",
"MicrosoftGroupsUserBelongsToRequest:jv",
"MicrosoftTeam:jw",
"MicrosoftGroupMembersRequest:jx",
"MicrosoftTeamMember:jy",
"MicrosoftOrganizationRequest:jz",
"MicrosoftOrganization:j0",
"CloudFileBoolBlock:j1",
"DictionaryBlock:j2",
"JSONObjectBlock:j3",
"NativeXmlElementProxy:j4",
"AzureAnalysisServicesOAuthProvider:j5",
"BoxCreateUploadSessionRequest:j6",
"BoxPartUploadSessionRequest:j7",
"BoxCommitUploadSessionRequest:j8",
"UploadedPart:j9",
"CredentialsRequestBase:ka",
"CredentialsOAuthURLRequest:kb",
"CredentialsGetAccountsRequest:kc",
"GenericAccountMetadata:kd",
"AccountMetadata:ke",
"AccountType:kf",
"CredentialsSaveAccountRequest:kg",
"CredentialsDeleteAccountRequest:kh",
"CredentialsDeleteAssociationRequest:ki",
"EditorVerifyAccountRequest:kj",
"VerifyCredentialsResponse:kk",
"VerifyConnectionByDataSourceRequest:kl",
"GetAccountMetadataForDataSourceRequest:km",
"CredentialsAssociateRequest:kn",
"GoogleAdsRequestBase:ko",
"GoogleAdsCustomersRequest:kp",
"GoogleAdsCustomerInfoRequest:kq",
"GoogleAdsMetadataSearchRequest:kr",
"GoogleAdsSearchRequest:ks",
"GoogleAnalyticsSortDirection:kt",
"GoogleAnalyticsResourceType:ku",
"GoogleAnalyticsMetadataColumnObject:kv",
"GoogleAnalyticsMetadataSegmentObject:kw",
"GoogleAnalyticsFilterObjectBase:kx",
"GoogleAnalyticsDimensionFilterObject:ky",
"GoogleAnalyticsMetricFilterObject:kz",
"GoogleAnalyticsSortingObject:k0",
"GoogleAnalyticsDataObject:k1",
"GoogleAnalyticsRequestBase:k2",
"GoogleAnalyticsColumnsRequest:k3",
"GoogleAnalyticsCustomDimensionsRequest:k4",
"GoogleAnalyticsCustomMetricsRequest:k5",
"GoogleAnalyticsSegmentsRequest:k6",
"GoogleAnalyticsAccountsRequest:k7",
"GoogleAnalyticsProfilesRequest:k8",
"GoogleAnalyticsViewsRequest:k9",
"GoogleAnalyticsGoalsRequest:la",
"GoogleAnalyticsDataRequest:lb",
"GoogleGetEventsRequest:lc",
"GoogleListDirectoryRequest:ld",
"GoogleListRoomsRequest:le",
"GoogleGetUserAvailabilityRequest:lf",
"GoogleGetEmailAddressesRequest:lg",
"GoogleGetPersonalPhotoRequest:lh",
"HubspotGetAccountInfo:li",
"HubspotOAuthProvider:lj",
"InfragisticsAPIIncrementScopes:lk",
"InfragisticsRefreshTokenRequest:ll",
"MicrosoftGetUserAvailabilityRequest:lm",
"MicrosoftListDirectoryRequest:ln",
"MicrosoftListRoomsRequest:lo",
"MicrosoftGetAppointmentsRequest:lp",
"MicrosoftGetUserPhoto:lq",
"MicrosoftSendEmailRequest:lr",
"MicrosoftGetEmailAddressesRequest:ls",
"MicrosoftGetRootSiteRequest:lt",
"SharePointSiteGraphObject:lu",
"ContentPropertyData:lv",
"ContentPropertyType:lw",
"EMTokenState:lx",
"EMTokenStateRefreshFactory:ly",
"RequestDelegateManager:lz",
"OAuthDelegate:l0",
"InfragisticsFile:l1",
"ProviderLocal:l2",
"ProviderReportPlus:l3",
"ProviderGenericOAuth:l4",
"GenericOAuthTokenState:l5",
"SharePointFieldCalculated:l6",
"SharePointListMetadata:l7",
"WindowsAuthProvider:l8",
"WindowsAuthAccount:l9",
"WindowsAuthAssignment:ma",
"GenericOAuthProvider:mb",
"IOAuthAccountStorage:mc",
"JWTDecoderAsRequest:md",
"OAuthGetTokenRequest:me",
"OAuthLoginRequest:mf",
"OAuthLoginWebRequestDelegate:mg",
"ExecutionBoolBlock:mh",
"QuickBooksOAuthProvider:mi",
"ReportPlusFileLocation:mj",
"ReportPlusLocationType:mk",
"ReportPlusShareUserType:ml",
"ReportPlusSharePermission:mm",
"ReportPlusResponse:mn",
"ReportPlusRequestBase:mo",
"ReportPlusUpsertDashboardRequest:mp",
"ReportPlusUpsertFolderRequest:mq",
"ReportPlusFile:mr",
"ReportPlusGetFriendlyNamesRequest:ms",
"ReportPlusDeleteFileRequest:mt",
"ReportPlusGetFileLocationRequest:mu",
"ReportPlusApproveShareRequest:mv",
"ReportPlusCreateWidgetRequest:mw",
"ReportPlusCloudFileMetadataRequest:mx",
"ReportPlusGetAdditionalMetadataRequest:my",
"ReportPlusGetChildrenMetadataRequest:mz",
"ReportPlusGetRootMetadataRequest:m0",
"ReportPlusGetEditorExpressionInfoRequest:m1",
"ReportPlusValidateExpressionRequest:m2",
"ReportPlusGetExpressionFunctionsRequest:m3",
"ReportPlusGetParameterValuesRequest:m4",
"ReportPlusGetParametersMetadataRequest:m5",
"ReportPlusGetProviderMetadataRequest:m6",
"ReportPlusUploadFileRequest:m7",
"ReportPlusGetJSONDashboardZipRequest:m8",
"ReportPlusGetLicenseRequest:m9",
"SharePointGetSiteInfoRequest:na",
"DiscoveryServices:nb",
"SharePointUpdateFileRequest:nc",
"SharePointGetListPermissions:nd",
"SharePointGetCurrentUser:ne",
"PendingRequestsManager:nf",
"Monitor:ng",
"AbstractEnumerable:nh",
"Func$1:ni",
"AbstractEnumerator:nj",
"GenericEnumerable$1:nk",
"GenericEnumerator$1:nl"]);
/*<BeginType Name="Infragistics.PermissionKind" />*/

$.ig.util.defType('PermissionKind', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "EmptyMask";
			case 1: return "ViewListItems";
			case 2: return "AddListItems";
			case 3: return "EditListItems";
			case 4: return "DeleteListItems";
			case 5: return "ApproveItems";
			case 6: return "OpenItems";
			case 7: return "ViewVersions";
			case 8: return "DeleteVersions";
			case 9: return "CancelCheckout";
			case 10: return "ManagePersonalViews";
			case 12: return "ManageLists";
			case 13: return "ViewFormPages";
			case 14: return "AnonymousSearchAccessList";
			case 17: return "Open";
			case 18: return "ViewPages";
			case 19: return "AddAndCustomizePages";
			case 20: return "ApplyThemeAndBorder";
			case 21: return "ApplyStyleSheets";
			case 22: return "ViewUsageData";
			case 23: return "CreateSSCSite";
			case 24: return "ManageSubwebs";
			case 25: return "CreateGroups";
			case 26: return "ManagePermissions";
			case 27: return "BrowseDirectories";
			case 28: return "BrowseUserInfo";
			case 29: return "AddDelPrivateWebParts";
			case 30: return "UpdatePersonalWebParts";
			case 31: return "ManageWeb";
			case 32: return "AnonymousSearchAccessWebLists";
			case 37: return "UseClientIntegration";
			case 38: return "UseRemoteAPIs";
			case 39: return "ManageAlerts";
			case 40: return "CreateAlerts";
			case 41: return "EditMyUserInfo";
			case 63: return "EnumeratePermissions";
			case 65: return "FullMask";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('PermissionKind', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.PermissionKind" />*/

/*<BeginType Name="Infragistics.ReportPlusSharePermission" />*/

$.ig.util.defType('ReportPlusSharePermission', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "View";
			case 1: return "ViewShare";
			case 2: return "EditShare";
			case 3: return "Forbidden";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('ReportPlusSharePermission', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusSharePermission" />*/

/*<BeginType Name="Infragistics.ReportPlusShareUserType" />*/

$.ig.util.defType('ReportPlusShareUserType', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "User";
			case 1: return "Team";
			case 2: return "Organization";
			case 3: return "Email";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('ReportPlusShareUserType', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusShareUserType" />*/

/*<BeginType Name="Infragistics.ReportPlusLocationType" />*/

$.ig.util.defType('ReportPlusLocationType', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "Direct";
			case 1: return "Shared";
			case 2: return "Forbidden";
			case 3: return "NotFound";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('ReportPlusLocationType', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusLocationType" />*/

/*<BeginType Name="Infragistics.ContentPropertyType" />*/

$.ig.util.defType('ContentPropertyType', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "Owner";
			case 1: return "FileType";
			case 2: return "FolderType";
			case 3: return "ContentLocation";
			case 4: return "LocationPath";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('ContentPropertyType', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ContentPropertyType" />*/

/*<BeginType Name="Infragistics.CloudProviderType" />*/

$.ig.util.defType('CloudProviderType', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "NotSet";
			case 1: return "Microsoft";
			case 2: return "Google";
			case 3: return "Box";
			case 4: return "Dropbox";
			case 5: return "SharePoint";
			case 6: return "Infragistics";
			case 7: return "GoogleAnalytics";
			case 8: return "MicrosoftProvider";
			case 9: return "GoogleProvider";
			case 10: return "Facebook";
			case 11: return "ReportPlus";
			case 12: return "Windows";
			case 13: return "SalesForce";
			case 14: return "Local";
			case 15: return "AppFigures";
			case 16: return "RestApi";
			case 17: return "Demo";
			case 18: return "BigQuery";
			case 19: return "DataDotWorld";
			case 20: return "Test";
			case 21: return "AzureAnalysisServices";
			case 22: return "Apple";
			case 23: return "HubSpot";
			case 24: return "QuickBooks";
			case 25: return "Marketo";
			case 26: return "S3";
			case 27: return "GoogleAds";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('CloudProviderType', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CloudProviderType" />*/

/*<BeginType Name="Infragistics.CloudErrorType" />*/

$.ig.util.defType('CloudErrorType', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "NoType";
			case 1: return "IGRefreshToken";
			case 2: return "NeedsOAuthorize";
			case 3: return "NeedsPermission";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('CloudErrorType', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CloudErrorType" />*/

/*<BeginType Name="Infragistics.MicrosoftRole" />*/

$.ig.util.defType('MicrosoftRole', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "Read";
			case 1: return "Write";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('MicrosoftRole', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftRole" />*/

/*<BeginType Name="Infragistics.GoogleAnalyticsResourceType" />*/

$.ig.util.defType('GoogleAnalyticsResourceType', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "PROFILES";
			case 1: return "REPORT";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('GoogleAnalyticsResourceType', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAnalyticsResourceType" />*/

/*<BeginType Name="Infragistics.GoogleAnalyticsSortDirection" />*/

$.ig.util.defType('GoogleAnalyticsSortDirection', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "ASCENDING";
			case 1: return "DESCENDING";
			case 2: return "NONE";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('GoogleAnalyticsSortDirection', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAnalyticsSortDirection" />*/

/*<BeginType Name="Infragistics.DropboxFolderAction" />*/

$.ig.util.defType('DropboxFolderAction', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "ChangeOptions";
			case 1: return "DisableViewerInfo";
			case 2: return "EditContents";
			case 3: return "EnableViewerInfo";
			case 4: return "InviteEditor";
			case 5: return "InviteViewer";
			case 6: return "InviteViewerNoComment";
			case 7: return "RelinquishMembership";
			case 8: return "Unmount";
			case 9: return "Unshare";
			case 10: return "LeaveACopy";
			case 11: return "CreateLink";
			case 12: return "SetAccessInheritance";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('DropboxFolderAction', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxFolderAction" />*/

/*<BeginType Name="Infragistics.DropboxAccessLevel" />*/

$.ig.util.defType('DropboxAccessLevel', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "Owner";
			case 1: return "Editor";
			case 2: return "Viewer";
			case 3: return "ViewerNoComment";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('DropboxAccessLevel', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxAccessLevel" />*/

/*<BeginType Name="Infragistics.DropboxFileAction" />*/

$.ig.util.defType('DropboxFileAction', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "DisableViewerInfo";
			case 1: return "EditContents";
			case 2: return "EnableViewerInfo";
			case 3: return "InviteViewer";
			case 4: return "InviteViewerNoComment";
			case 5: return "Unshare";
			case 6: return "RelinquishMembership";
			case 7: return "CreateLink";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('DropboxFileAction', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxFileAction" />*/

/*<BeginType Name="Infragistics.DropboxWriteMode" />*/

$.ig.util.defType('DropboxWriteMode', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "Add";
			case 1: return "Overwrite";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('DropboxWriteMode', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxWriteMode" />*/

/*<BeginType Name="Infragistics.AccountType" />*/

$.ig.util.defType('AccountType', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "Generic";
			case 1: return "OAuth";
			case 2: return "Empty";
			case 3: return "Aws";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('AccountType', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.AccountType" />*/

/*<BeginType Name="Infragistics.CookieStorageMode" />*/

$.ig.util.defType('CookieStorageMode', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "Undefined";
			case 1: return "Request";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('CookieStorageMode', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CookieStorageMode" />*/

/*<BeginType Name="Infragistics.SessionType" />*/

$.ig.util.defType('SessionType', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "Normal";
			case 1: return "Background";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('SessionType', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SessionType" />*/

/*<BeginType Name="Infragistics.SessionTaskType" />*/

$.ig.util.defType('SessionTaskType', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "Data";
			case 1: return "Download";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('SessionTaskType', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SessionTaskType" />*/

/*<BeginType Name="Infragistics.SessionContentType" />*/

$.ig.util.defType('SessionContentType', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "JSON";
			case 1: return "XML";
			case 2: return "SoapXML";
			case 3: return "URLEncodeForm";
			case 4: return "AmazonJSON";
			case 5: return "MultipartFormData";
			case 6: return "None";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('SessionContentType', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SessionContentType" />*/

/*<BeginType Name="Infragistics.SessionHTTPMethod" />*/

$.ig.util.defType('SessionHTTPMethod', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "GET";
			case 1: return "POST";
			case 2: return "DELETE";
			case 3: return "PUT";
			case 4: return "PATCH";
			case 5: return "HEAD";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('SessionHTTPMethod', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SessionHTTPMethod" />*/

/*<BeginType Name="Infragistics.SessionResponseType" />*/

$.ig.util.defType('SessionResponseType', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "STRING";
			case 1: return "XML";
			case 2: return "JSON";
			case 3: return "DATA";
			case 4: return "JSON_STREAMING";
			case 5: return "STREAM";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('SessionResponseType', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SessionResponseType" />*/

/*<BeginType Name="Infragistics.SearchCapabilities" />*/

$.ig.util.defType('SearchCapabilities', 'Enum', {
	init: function (v) {
		this._v = v;
	},
	$getName: function (v) {
		switch (v) {
			case 0: return "SearchUnsupported";
			case 1: return "SearchByText";
			case 2: return "SearchByFileExtensions";
			case 4: return "SearchByMimeTypes";
			case 8: return "SearchByModifiedDateTime";
			case 16: return "SearchByAuthor";
			case 32: return "SearchByEmptyText";
			default: return v.toString();
		}
	},
	$value: function () {
		return this._v;
	},
	$type: new $.ig.Type('SearchCapabilities', $.ig.Enum.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SearchCapabilities" />*/

/*<BeginType Name="System.Net.WebRequest" />*/

$.ig.util.defType('WebRequest', 'Object', {
	__store: null,
	__ajaxObj: null,
	init: function (url, content, method, contentType, authorization, additionalHeaderFields, timeout, responseType) {
		$.ig.Object.prototype.init.call(this);
		this.__store = {};
		this.__store["url"] = url;
		this.__store["type"] = method;
		this.__store["timeout"] = timeout;
		if (contentType != null) {
			this.__store["contentType"] = contentType;
		} else {
			this.__store["contentType"] = false;
		}
		this.__store["data"] = content;
		this.__store["cache"] = false;
		this.__store["processData"] = false;
		var xhrFields = {};
		this.__store["xhrFields"] = xhrFields;
		if (responseType == $.ig.SessionResponseType.prototype.dATA) {
			xhrFields["responseType"] = "blob";
		}
		var extraHeaders = $.ig.WebCoreUtils.prototype.getExtraHeaders(url);
		if (authorization != null || additionalHeaderFields != null || extraHeaders != null) {
			this.__store["beforeSend"] = function (xhr) {
				if (authorization != null) {
					xhr.setRequestHeader('Authorization', authorization);
				}
				if (extraHeaders != null) {
					$.ig.WebCoreUtils.prototype.addHeaders(xhr, extraHeaders);
				}
				if (additionalHeaderFields != null) {
					$.ig.WebCoreUtils.prototype.addHeaders(xhr, additionalHeaderFields);
				}
			};
		}
	},
	/*<BeginMethod Name="System.Void System.Net.WebRequest::Execute(Infragistics.SessionTask)" />*/
	execute: function (task) {
		this.__store["success"] = function (data, textStatus, jqXHR) {
			var headersData = jqXHR.getAllResponseHeaders();
			var headers = new $.ig.Dictionary(0);
			headersData.split('\n').forEach(function(header) { headers.item(header.split(': ')[0], header.split(': ')[1]); });
			var statusCode = jqXHR.status;
			if (task._sessionDelegate.processHeaders($.ig.util.getValue(statusCode), headers)) {
				return;
			}
			var responseObject = null;
			if (task._request._responseType == $.ig.SessionResponseType.prototype.jSON) {
				responseObject = $.ig.CPJSONObject.prototype.createFromJSONObject(data);
			} else if (task._request._responseType == $.ig.SessionResponseType.prototype.sTRING) {
				responseObject = data;
			} else if (task._request._responseType == $.ig.SessionResponseType.prototype.dATA) {
				responseObject = data;
				if (responseObject != null) {
					var reader = new $.ig.FileReader();
					var result = null;
					reader.onLoad(function (obj) {
						result = new Uint8Array(obj);
						task._sessionDelegate.sessionComplete(task, result);
					});
					reader.read(responseObject);
					return;
				}
			} else if (task._request._responseType == $.ig.SessionResponseType.prototype.xML) {
				throw 'Not Implemented';
			}
			task._sessionDelegate.sessionComplete(task, responseObject);
		};
		this.__store["error"] = function (jqXHR, textStatus, errorThrown) {
			var errorCode = jqXHR.status;
			if (errorCode == 308) {
				task._sessionDelegate.sessionComplete(task, null);
			} else {
				$.ig.WebRequest.prototype.createCloudError(jqXHR, textStatus, errorThrown, task);
			}
		};
		this.__ajaxObj =  $.ajax(this.__store);
	}
	/*<EndMethod Name="System.Void System.Net.WebRequest::Execute(Infragistics.SessionTask)" />*/
	,
	/*<BeginMethod Name="System.Void System.Net.WebRequest::Abort(Infragistics.SessionTask)" />*/
	abort: function (task) {
		if (this.__ajaxObj != null) {
			this.__ajaxObj.abort();
		}
	}
	/*<EndMethod Name="System.Void System.Net.WebRequest::Abort(Infragistics.SessionTask)" />*/
	,
	/*<BeginMethod Name="Infragistics.CloudError System.Net.WebRequest::CreateCloudError(System.Object, System.String, System.Object, Infragistics.SessionTask)" />*/
	createCloudError: function (jqXHR, textStatus, errorThrown, task) {
		var error = new $.ig.CloudError(0);
		error.errorCode(jqXHR.status);
		error.errorMessage(jqXHR.responseText);
		if ($.ig.CPStringUtility.prototype.isNullOrEmpty(error.errorMessage())) {
			error.errorMessage(textStatus);
		}
		var nativeError = new $.ig.Dictionary(0);
		nativeError.item("errorThrown", errorThrown);
		nativeError.item("locationHeader", jqXHR.getResponseHeader('Location'));
		error.nativeError(nativeError);
		task._sessionDelegate.sessionFailedWithError(task, error);
		return error;
	}
	/*<EndMethod Name="Infragistics.CloudError System.Net.WebRequest::CreateCloudError(System.Object, System.String, System.Object, Infragistics.SessionTask)" />*/
	,
	$type: new $.ig.Type('WebRequest', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="System.Net.WebRequest" />*/

/*<BeginType Name="Infragistics.IRequest" />*/

$.ig.util.defType('IRequest', 'Object', {
	$type: new $.ig.Type('IRequest', null)
}, true);

/*<EndType Name="Infragistics.IRequest" />*/

/*<BeginType Name="Infragistics.RequestBase" />*/

$.ig.util.defType('RequestBase', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Void Infragistics.RequestBase::Execute()" />*/
	execute: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.RequestBase::Execute()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.RequestBase::Cancel()" />*/
	cancel: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.RequestBase::Cancel()" />*/
	,
	_isCanceled: false,
	/*<BeginProperty Name="System.Boolean Infragistics.RequestBase::IsCanceled()" />*/
	isCanceled: function (value) {
		if (arguments.length === 1) {
			this._isCanceled = value;
			return value;
		} else {
			return this._isCanceled;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.RequestBase::IsCanceled()" />*/
	,
	$type: new $.ig.Type('RequestBase', $.ig.Object.prototype.$type, [$.ig.IRequest.prototype.$type])
}, true);

/*<EndType Name="Infragistics.RequestBase" />*/

/*<BeginType Name="Infragistics.Request" />*/

$.ig.util.defType('Request', 'RequestBase', {
	__successHandler: null,
	__errorHandler: null,
	__progressBlock: null,
	__downloaded: null,
	__retries: 0,
	_identifier: null,
	_uniqueKey: null,
	_executeCallbacksOnMainThread: false,
	/*<BeginProperty Name="System.Boolean Infragistics.Request::ExecuteCallbacksOnMainThread()" />*/
	executeCallbacksOnMainThread: function (value) {
		if (arguments.length === 1) {
			this._executeCallbacksOnMainThread = value;
			return value;
		} else {
			return this._executeCallbacksOnMainThread;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.Request::ExecuteCallbacksOnMainThread()" />*/
	,
	init: function (initNumber, success, error) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
				case 2:
					this.init2.apply(this, arguments);
					break;
			}
			return;
		}
		this.__retries = 0;
		$.ig.RequestBase.prototype.init.call(this);
		this.__successHandler = success;
		this.__errorHandler = error;
		this.executeCallbacksOnMainThread(true);
	},
	init1: function (initNumber, requestKey, success, error) {
		this.__retries = 0;
		$.ig.RequestBase.prototype.init.call(this);
		this._uniqueKey = requestKey;
		this.__successHandler = success;
		this.__errorHandler = error;
		this.executeCallbacksOnMainThread(true);
	},
	init2: function (initNumber, requestKey, success, error, progress, downloaded) {
		this.__retries = 0;
		$.ig.RequestBase.prototype.init.call(this);
		this._uniqueKey = requestKey;
		this.__successHandler = success;
		this.__errorHandler = error;
		this.executeCallbacksOnMainThread(true);
		this.__progressBlock = progress;
		this.__downloaded = downloaded;
	},
	/*<BeginProperty Name="System.Int32 Infragistics.Request::Retries()" />*/
	retries: function () {
		return this.__retries;
	}
	/*<EndProperty Name="System.Int32 Infragistics.Request::Retries()" />*/
	,
	_maxDownloadSize: $.ig.util.toNullable($.ig.Number.prototype.$type, null),
	/*<BeginProperty Name="System.Nullable Infragistics.Request::MaxDownloadSize()" />*/
	maxDownloadSize: function (value) {
		if (arguments.length === 1) {
			this._maxDownloadSize = value;
			return value;
		} else {
			return this._maxDownloadSize;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.Request::MaxDownloadSize()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Request::Success(System.Object)" />*/
	success: function (obj) {
		if (this.isCanceled()) {
			return;
		}
		if (this.__successHandler != null) {
			this.__successHandler(this, obj);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Request::Success(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Request::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		if (this.isCanceled()) {
			return;
		}
		if (this.__errorHandler != null) {
			this.__errorHandler(this, error);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Request::Error(Infragistics.CloudError)" />*/
	,
	/*<BeginProperty Name="Infragistics.RequestSuccessBlock Infragistics.Request::SuccessBlock()" />*/
	successBlock: function () {
		return this.__successHandler;
	}
	/*<EndProperty Name="Infragistics.RequestSuccessBlock Infragistics.Request::SuccessBlock()" />*/
	,
	/*<BeginProperty Name="Infragistics.RequestErrorBlock Infragistics.Request::ErrorBlock()" />*/
	errorBlock: function () {
		return this.__errorHandler;
	}
	/*<EndProperty Name="Infragistics.RequestErrorBlock Infragistics.Request::ErrorBlock()" />*/
	,
	/*<BeginProperty Name="Infragistics.SessionRequestProgressUpdateBlock Infragistics.Request::ProgressBlock()" />*/
	progressBlock: function () {
		return this.__progressBlock;
	}
	/*<EndProperty Name="Infragistics.SessionRequestProgressUpdateBlock Infragistics.Request::ProgressBlock()" />*/
	,
	/*<BeginProperty Name="Infragistics.SessionRequestFileDownloadedBlock Infragistics.Request::DownloadBlock()" />*/
	downloadBlock: function () {
		return this.__downloaded;
	}
	/*<EndProperty Name="Infragistics.SessionRequestFileDownloadedBlock Infragistics.Request::DownloadBlock()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Request::SetBlocks(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock, Infragistics.SessionRequestFileDownloadedBlock)" />*/
	setBlocks: function (success, error, downloaded) {
		this.__successHandler = success;
		this.__errorHandler = error;
		this.__downloaded = downloaded;
	}
	/*<EndMethod Name="System.Void Infragistics.Request::SetBlocks(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock, Infragistics.SessionRequestFileDownloadedBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Request::Cancel()" />*/
	cancel: function () {
		this.isCanceled(true);
	}
	/*<EndMethod Name="System.Void Infragistics.Request::Cancel()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Request::Retry()" />*/
	retry: function () {
		this.__retries++;
		this.execute();
	}
	/*<EndMethod Name="System.Void Infragistics.Request::Retry()" />*/
	,
	$type: new $.ig.Type('Request', $.ig.RequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Request" />*/

/*<BeginType Name="Infragistics.ReadFileRequest" />*/

$.ig.util.defType('ReadFileRequest', 'Request', {
	__file: null,
	__startPosition: 0,
	__chunkSize: 0,
	__returnBlob: false,
	init: function (file, startPosition, chunkSize, returnBlob, success, error) {
		$.ig.Request.prototype.init.call(this, 0, success, error);
		this.__file = file;
		this.__startPosition = startPosition;
		this.__chunkSize = chunkSize;
		this.__returnBlob = returnBlob;
	},
	/*<BeginMethod Name="System.Void Infragistics.ReadFileRequest::Execute()" />*/
	execute: function () {
		var $self = this;
		var blob = this.__file.slice(this.__startPosition, this.__startPosition + this.__chunkSize);
		var fileType = this.__file.type;
		var fileReader = new $.ig.FileReader();
		fileReader.onLoad(function (result) {
			if ($self.__returnBlob) {
				var loadedBlob = new Blob([result], { type: fileType });
				$self.success(loadedBlob);
			} else {
				var bytes = Array.from(new Uint8Array(result));;
				$self.success(bytes);
			}
		});
		fileReader.read(blob);
	}
	/*<EndMethod Name="System.Void Infragistics.ReadFileRequest::Execute()" />*/
	,
	$type: new $.ig.Type('ReadFileRequest', $.ig.Request.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReadFileRequest" />*/

/*<BeginType Name="Infragistics.NativeRequestLocalizeUtil" />*/

$.ig.util.defType('NativeRequestLocalizeUtil', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.String Infragistics.NativeRequestLocalizeUtil::Localize(System.String)" />*/
	localize: function (val) {
		return $.ig.NativeStringUtility.prototype.localize("requests", val);
	}
	/*<EndMethod Name="System.String Infragistics.NativeRequestLocalizeUtil::Localize(System.String)" />*/
	,
	$type: new $.ig.Type('NativeRequestLocalizeUtil', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.NativeRequestLocalizeUtil" />*/

/*<BeginType Name="Infragistics.NativeRequestUtility" />*/

$.ig.util.defType('NativeRequestUtility', 'Object', {
	/*<BeginMethod Name="Infragistics.NativeRequestUtility Infragistics.NativeRequestUtility::Utility()" />*/
	utility: function () {
		if ($.ig.NativeRequestUtility.prototype.__utility == null) {
			$.ig.NativeRequestUtility.prototype.__utility = new $.ig.NativeRequestUtility();
		}
		return $.ig.NativeRequestUtility.prototype.__utility;
	}
	/*<EndMethod Name="Infragistics.NativeRequestUtility Infragistics.NativeRequestUtility::Utility()" />*/
	,
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.String Infragistics.NativeRequestUtility::Base64Decode(System.String)" />*/
	base64Decode: function (val) {
		return atob(val);
	}
	/*<EndMethod Name="System.String Infragistics.NativeRequestUtility::Base64Decode(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.NativeRequestUtility::Base64Encode(System.String)" />*/
	base64Encode: function (val) {
		return btoa(val);
	}
	/*<EndMethod Name="System.String Infragistics.NativeRequestUtility::Base64Encode(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.NativeRequestUtility::Base64EncodeByteArray(System.Array)" />*/
	base64EncodeByteArray: function (val) {
		if (Array.isArray(val)) {
			if (val.length > 64000) {
				return btoa((new Uint8Array(val)).reduce(function(data, byte) { return data + String.fromCharCode(byte); }, ''));
			}
			return btoa(String.fromCharCode.apply(null, new Uint8Array(val)));
		} else if (val.constructor === Uint8Array) {
			return btoa(val.reduce(function(data, byte) { return data + String.fromCharCode(byte); }, ''));
		} else {
			return btoa(val);
		}
	}
	/*<EndMethod Name="System.String Infragistics.NativeRequestUtility::Base64EncodeByteArray(System.Array)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.NativeRequestUtility::HTMLEncodeString(System.String)" />*/
	hTMLEncodeString: function (val) {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.NativeRequestUtility::HTMLEncodeString(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.NativeRequestUtility::HTMLDecodeString(System.String)" />*/
	hTMLDecodeString: function (val) {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.NativeRequestUtility::HTMLDecodeString(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.NativeRequestUtility::URLEncodeString(System.String)" />*/
	uRLEncodeString: function (val) {
		return encodeURIComponent(val);
	}
	/*<EndMethod Name="System.String Infragistics.NativeRequestUtility::URLEncodeString(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.NativeRequestUtility::URLDecodeString(System.String)" />*/
	uRLDecodeString: function (val) {
		return decodeURIComponent(val);
	}
	/*<EndMethod Name="System.String Infragistics.NativeRequestUtility::URLDecodeString(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.NativeRequestUtility::URLStringByAddingPercentEncoding(System.String)" />*/
	uRLStringByAddingPercentEncoding: function (val) {
		return val;
	}
	/*<EndMethod Name="System.String Infragistics.NativeRequestUtility::URLStringByAddingPercentEncoding(System.String)" />*/
	,
	/*<BeginMethod Name="System.Net.WebRequest Infragistics.NativeRequestUtility::CreateRequest(System.String, Infragistics.URLRequest, System.String, System.String, Infragistics.SessionType, Infragistics.SessionDelegate)" />*/
	createRequest: function (url, urlRequest, method, contentType, type, del) {
		var content = urlRequest._content;
		if (content == null) {
			content = urlRequest._contentObject;
		}
		if (content == null) {
			content = urlRequest._contentData;
		}
		return new $.ig.WebRequest(url, content, method, contentType, urlRequest._authorization, urlRequest._additionalHeaders, urlRequest._timeout, urlRequest._responseType);
	}
	/*<EndMethod Name="System.Net.WebRequest Infragistics.NativeRequestUtility::CreateRequest(System.String, Infragistics.URLRequest, System.String, System.String, Infragistics.SessionType, Infragistics.SessionDelegate)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.NativeRequestUtility::ExecuteTask(Infragistics.SessionTask)" />*/
	executeTask: function (task) {
		task._request._webRequest.execute(task);
	}
	/*<EndMethod Name="System.Void Infragistics.NativeRequestUtility::ExecuteTask(Infragistics.SessionTask)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.NativeRequestUtility::CancelTask(Infragistics.SessionTask)" />*/
	cancelTask: function (task) {
		task._request._webRequest.abort(task);
	}
	/*<EndMethod Name="System.Void Infragistics.NativeRequestUtility::CancelTask(Infragistics.SessionTask)" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionTask Infragistics.NativeRequestUtility::CreateSession(Infragistics.SessionTaskType, Infragistics.SessionType, Infragistics.URLRequest, Infragistics.SessionDelegate)" />*/
	createSession: function (taskType, type, request, del) {
		var task = new $.ig.SessionTask();
		task._type = type;
		task._request = request;
		task._sessionDelegate = del;
		task._taskType = taskType;
		return task;
	}
	/*<EndMethod Name="Infragistics.SessionTask Infragistics.NativeRequestUtility::CreateSession(Infragistics.SessionTaskType, Infragistics.SessionType, Infragistics.URLRequest, Infragistics.SessionDelegate)" />*/
	,
	/*<BeginMethod Name="System.Int64 Infragistics.NativeRequestUtility::GetCurrentTimeInSeconds()" />*/
	getCurrentTimeInSeconds: function () {
		var seconds = new Date().getTime() / 1000;
		return seconds;
	}
	/*<EndMethod Name="System.Int64 Infragistics.NativeRequestUtility::GetCurrentTimeInSeconds()" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.NativeRequestUtility::ReadFile(System.Object, System.Int64, System.Int64, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	readFile: function (file, startPosition, count, success, error) {
		var readFileRequest = new $.ig.ReadFileRequest(file, startPosition, count, true, success, error);
		return readFileRequest;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.NativeRequestUtility::ReadFile(System.Object, System.Int64, System.Int64, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.NativeRequestUtility::ReadFileAsByteArray(System.Object, System.Int64, System.Int64, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	readFileAsByteArray: function (file, startPosition, count, success, error) {
		var readFileRequest = new $.ig.ReadFileRequest(file, startPosition, count, false, success, error);
		return readFileRequest;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.NativeRequestUtility::ReadFileAsByteArray(System.Object, System.Int64, System.Int64, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.NativeRequestUtility::GetNativeDataSize(System.Object)" />*/
	getNativeDataSize: function (data) {
		return data.size;
	}
	/*<EndMethod Name="System.Int32 Infragistics.NativeRequestUtility::GetNativeDataSize(System.Object)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.NativeRequestUtility::ExtractFileName(System.String)" />*/
	extractFileName: function (localFilePath) {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.NativeRequestUtility::ExtractFileName(System.String)" />*/
	,
	/*<BeginMethod Name="System.Array Infragistics.NativeRequestUtility::HashSHA1(System.Array)" />*/
	hashSHA1: function (data) {
		return null;
	}
	/*<EndMethod Name="System.Array Infragistics.NativeRequestUtility::HashSHA1(System.Array)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.NativeRequestUtility::ToBase64String(System.Array)" />*/
	toBase64String: function (hashData) {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.NativeRequestUtility::ToBase64String(System.Array)" />*/
	,
	/*<BeginMethod Name="System.Int64 Infragistics.NativeRequestUtility::TryParseLong(System.String)" />*/
	tryParseLong: function (str) {
		return 0;
	}
	/*<EndMethod Name="System.Int64 Infragistics.NativeRequestUtility::TryParseLong(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.NativeRequestUtility::GetDownloadsPath(System.String)" />*/
	getDownloadsPath: function (fileName) {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.NativeRequestUtility::GetDownloadsPath(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPJSONObject Infragistics.NativeRequestUtility::ConvertPayloadToJSON(System.String)" />*/
	convertPayloadToJSON: function (token) {
		var jwt = $.ig.NativeStringUtility.prototype.split(token, ".");
		if (jwt.length == 1) {
			return new $.ig.CPJSONObject(1);
		}
		var payload = jwt[1];
		var mod4 = payload.length % 4;
		while (mod4 > 0) {
			payload = payload + "=";
			mod4 = payload.length % 4;
		}
		var decodedString = this.base64Decode(payload);
		var json = $.ig.CPJSONObject.prototype.createFromString(decodedString);
		return json;
	}
	/*<EndMethod Name="Infragistics.CPJSONObject Infragistics.NativeRequestUtility::ConvertPayloadToJSON(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.NativeRequestUtility::AskIfCanSendNotificationsToUser()" />*/
	askIfCanSendNotificationsToUser: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.NativeRequestUtility::AskIfCanSendNotificationsToUser()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.NativeRequestUtility::RequiresPermissionForNotifications()" />*/
	requiresPermissionForNotifications: function () {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.NativeRequestUtility::RequiresPermissionForNotifications()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.NativeRequestUtility::EncodeMSOfficeNativeAppUrl(System.String, System.String)" />*/
	encodeMSOfficeNativeAppUrl: function (commands, url) {
		return this.uRLEncodeString(commands) + url;
	}
	/*<EndMethod Name="System.String Infragistics.NativeRequestUtility::EncodeMSOfficeNativeAppUrl(System.String, System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.NativeRequestUtility::OnMobileDevice()" />*/
	onMobileDevice: function () {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.NativeRequestUtility::OnMobileDevice()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.NativeRequestUtility::DecodeEncodeOpenFileUrl(System.String)" />*/
	decodeEncodeOpenFileUrl: function (url) {
		return url;
	}
	/*<EndMethod Name="System.String Infragistics.NativeRequestUtility::DecodeEncodeOpenFileUrl(System.String)" />*/
	,
	$type: new $.ig.Type('NativeRequestUtility', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.NativeRequestUtility" />*/

/*<BeginType Name="Infragistics.NativeXmlElementProxy" />*/

$.ig.util.defType('NativeXmlElementProxy', 'Object', {
	init: function (element) {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.String Infragistics.NativeXmlElementProxy::GetElementText()" />*/
	getElementText: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.NativeXmlElementProxy::GetElementText()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.NativeXmlElementProxy::FindElementsByName(System.String)" />*/
	findElementsByName: function (name) {
		return null;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.NativeXmlElementProxy::FindElementsByName(System.String)" />*/
	,
	$type: new $.ig.Type('NativeXmlElementProxy', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.NativeXmlElementProxy" />*/

/*<BeginType Name="Infragistics.NativeXmlProxy" />*/

$.ig.util.defType('NativeXmlProxy', 'Object', {
	init: function (xml) {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="Infragistics.CPList Infragistics.NativeXmlProxy::FindElementTextByName(System.String)" />*/
	findElementTextByName: function (name) {
		return null;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.NativeXmlProxy::FindElementTextByName(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.NativeXmlProxy::GetValueForAttributeName(Infragistics.CPList, System.String)" />*/
	getValueForAttributeName: function (elements, name) {
		return null;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.NativeXmlProxy::GetValueForAttributeName(Infragistics.CPList, System.String)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.NativeXmlProxy::GetXmlRoot()" />*/
	getXmlRoot: function () {
		return null;
	}
	/*<EndMethod Name="System.Object Infragistics.NativeXmlProxy::GetXmlRoot()" />*/
	,
	$type: new $.ig.Type('NativeXmlProxy', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.NativeXmlProxy" />*/

/*<BeginType Name="Infragistics.OAuthProvider" />*/

$.ig.util.defType('OAuthProvider', 'Object', {
	__keys: null,
	init: function (keys) {
		$.ig.Object.prototype.init.call(this);
		this.__keys = keys;
	},
	/*<BeginProperty Name="Infragistics.OAuthKeys Infragistics.OAuthProvider::Keys()" />*/
	keys: function () {
		return this.__keys;
	}
	/*<EndProperty Name="Infragistics.OAuthKeys Infragistics.OAuthProvider::Keys()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthProvider::GetLogoutUrl(Infragistics.Token)" />*/
	getLogoutUrl1: function (token) {
		return this.getLogoutUrl();
	}
	/*<EndMethod Name="System.String Infragistics.OAuthProvider::GetLogoutUrl(Infragistics.Token)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthProvider::GetLogoutUrl()" />*/
	getLogoutUrl: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.OAuthProvider::GetLogoutUrl()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthProvider::GetClientID()" />*/
	getClientID: function () {
		return this.keys().__clientID;
	}
	/*<EndMethod Name="System.String Infragistics.OAuthProvider::GetClientID()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthProvider::GetClientSecret()" />*/
	getClientSecret: function () {
		return this.keys().__clientSecret;
	}
	/*<EndMethod Name="System.String Infragistics.OAuthProvider::GetClientSecret()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthProvider::GetRedirectURI()" />*/
	getRedirectURI: function () {
		return this.keys().__redirectURL;
	}
	/*<EndMethod Name="System.String Infragistics.OAuthProvider::GetRedirectURI()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthProvider::GetScope()" />*/
	getScope: function () {
		return this.keys().__scope;
	}
	/*<EndMethod Name="System.String Infragistics.OAuthProvider::GetScope()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthProvider::GetState()" />*/
	getState: function () {
		return this.keys().__state;
	}
	/*<EndMethod Name="System.String Infragistics.OAuthProvider::GetState()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.OAuthProvider::AddAdditionalAccessCodeParams(Infragistics.CPDictionary)" />*/
	addAdditionalAccessCodeParams: function (json) {
	}
	/*<EndMethod Name="System.Void Infragistics.OAuthProvider::AddAdditionalAccessCodeParams(Infragistics.CPDictionary)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthProvider::GetTokenAction()" />*/
	getTokenAction: function () {
		return $.ig.OAuthProvider.prototype.tokenAction;
	}
	/*<EndMethod Name="System.String Infragistics.OAuthProvider::GetTokenAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthProvider::GetAuthAction()" />*/
	getAuthAction: function () {
		return "authorize";
	}
	/*<EndMethod Name="System.String Infragistics.OAuthProvider::GetAuthAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthProvider::GetResource()" />*/
	getResource: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.OAuthProvider::GetResource()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthProvider::GetResponseMode()" />*/
	getResponseMode: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.OAuthProvider::GetResponseMode()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.OAuthProvider::ShouldIncludeScopeInGetTokenRequest()" />*/
	shouldIncludeScopeInGetTokenRequest: function () {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.OAuthProvider::ShouldIncludeScopeInGetTokenRequest()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthProvider::GetAuthURL()" />*/
	getAuthURL: function () {
	}
	/*<EndMethod Name="System.String Infragistics.OAuthProvider::GetAuthURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthProvider::GetTokenURL()" />*/
	getTokenURL: function () {
		return this.getAuthURL();
	}
	/*<EndMethod Name="System.String Infragistics.OAuthProvider::GetTokenURL()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.OAuthProvider::CloudProvider()" />*/
	cloudProvider: function () {
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.OAuthProvider::CloudProvider()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.OAuthProvider::ShouldURLEncodeParams()" />*/
	shouldURLEncodeParams: function () {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.OAuthProvider::ShouldURLEncodeParams()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.OAuthProvider::IsTwoLegged()" />*/
	isTwoLegged: function () {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.OAuthProvider::IsTwoLegged()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.OAuthProvider::IsLoopbackRedirectRequired()" />*/
	isLoopbackRedirectRequired: function () {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.OAuthProvider::IsLoopbackRedirectRequired()" />*/
	,
	$type: new $.ig.Type('OAuthProvider', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.OAuthProvider" />*/

/*<BeginType Name="Infragistics.AzureAnalysisServicesOAuthProvider" />*/

$.ig.util.defType('AzureAnalysisServicesOAuthProvider', 'OAuthProvider', {
	init: function (keys) {
		$.ig.OAuthProvider.prototype.init.call(this, keys);
	},
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.AzureAnalysisServicesOAuthProvider::CloudProvider()" />*/
	cloudProvider: function () {
		return $.ig.CloudProviderType.prototype.azureAnalysisServices;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.AzureAnalysisServicesOAuthProvider::CloudProvider()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.AzureAnalysisServicesOAuthProvider::GetAuthURL()" />*/
	getAuthURL: function () {
		return "https://login.windows.net/5467154b-1b75-4824-9369-916e4fb500db/oauth2/";
	}
	/*<EndMethod Name="System.String Infragistics.AzureAnalysisServicesOAuthProvider::GetAuthURL()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.AzureAnalysisServicesOAuthProvider::AddAdditionalAccessCodeParams(Infragistics.CPDictionary)" />*/
	addAdditionalAccessCodeParams: function (json) {
		json.item("resource", $.ig.AzureAnalysisServicesOAuthProvider.prototype.authorizeResource());
		json.item("prompt", "refresh_session");
	}
	/*<EndMethod Name="System.Void Infragistics.AzureAnalysisServicesOAuthProvider::AddAdditionalAccessCodeParams(Infragistics.CPDictionary)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.AzureAnalysisServicesOAuthProvider::AccountId(System.String)" />*/
	accountId: function (providerJson) {
		var cpjson = $.ig.CPJSONObject.prototype.createFromString(providerJson);
		if (cpjson == null) {
			return null;
		}
		var ts = $.ig.TokenState.prototype.loadFromJSON(cpjson);
		if (ts.userInfo() == null) {
			return null;
		}
		return ts.userInfo().getUserId();
	}
	/*<EndMethod Name="System.String Infragistics.AzureAnalysisServicesOAuthProvider::AccountId(System.String)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.AzureAnalysisServicesOAuthProvider::AuthorizeResource()" />*/
	authorizeResource: function () {
		return "https://*.asazure.windows.net";
	}
	/*<EndProperty Name="System.String Infragistics.AzureAnalysisServicesOAuthProvider::AuthorizeResource()" />*/
	,
	$type: new $.ig.Type('AzureAnalysisServicesOAuthProvider', $.ig.OAuthProvider.prototype.$type)
}, true);

/*<EndType Name="Infragistics.AzureAnalysisServicesOAuthProvider" />*/

/*<BeginType Name="Infragistics.SearchQuery" />*/

$.ig.util.defType('SearchQuery', 'Object', {
	init: function () {
		this._modifiedSince = $.ig.util.toNullable($.ig.Date.prototype.$type, null);
		this._modifiedBefore = $.ig.util.toNullable($.ig.Date.prototype.$type, null);
		$.ig.Object.prototype.init.call(this);
	},
	_initialPath: null,
	_text: null,
	_fileExtensions: null,
	_fileMimeTypes: null,
	_modifiedSince: $.ig.util.toNullable($.ig.Date.prototype.$type, null),
	_modifiedBefore: $.ig.util.toNullable($.ig.Date.prototype.$type, null),
	_author: null,
	_startAt: 0,
	_itemsPerPage: 0,
	$type: new $.ig.Type('SearchQuery', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SearchQuery" />*/

/*<BeginType Name="Infragistics.SharePointSearchQuery" />*/

$.ig.util.defType('SharePointSearchQuery', 'SearchQuery', {
	init: function () {
		$.ig.SearchQuery.prototype.init.call(this);
	},
	_searchSites: false,
	$type: new $.ig.Type('SharePointSearchQuery', $.ig.SearchQuery.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointSearchQuery" />*/

/*<BeginType Name="Infragistics.RQCredentials" />*/

$.ig.util.defType('RQCredentials', 'Object', {
	init: function (username, password, domain) {
		$.ig.Object.prototype.init.call(this);
		this.username(username);
		this.password(password);
		this.domain(domain);
	},
	_username: null,
	/*<BeginProperty Name="System.String Infragistics.RQCredentials::Username()" />*/
	username: function (value) {
		if (arguments.length === 1) {
			this._username = value;
			return value;
		} else {
			return this._username;
		}
	}
	/*<EndProperty Name="System.String Infragistics.RQCredentials::Username()" />*/
	,
	_password: null,
	/*<BeginProperty Name="System.String Infragistics.RQCredentials::Password()" />*/
	password: function (value) {
		if (arguments.length === 1) {
			this._password = value;
			return value;
		} else {
			return this._password;
		}
	}
	/*<EndProperty Name="System.String Infragistics.RQCredentials::Password()" />*/
	,
	_domain: null,
	/*<BeginProperty Name="System.String Infragistics.RQCredentials::Domain()" />*/
	domain: function (value) {
		if (arguments.length === 1) {
			this._domain = value;
			return value;
		} else {
			return this._domain;
		}
	}
	/*<EndProperty Name="System.String Infragistics.RQCredentials::Domain()" />*/
	,
	$type: new $.ig.Type('RQCredentials', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.RQCredentials" />*/

/*<BeginType Name="Infragistics.CloudFileManager" />*/

$.ig.util.defType('CloudFileManager', 'Object', {
	__state: null,
	__credentialsProvider: null,
	init: function (initNumber, state) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.Object.prototype.init.call(this);
		this.__state = state;
	},
	init1: function (initNumber, state, credentialsProvider) {
		$.ig.CloudFileManager.prototype.init.call(this, 0, state);
		this.__credentialsProvider = credentialsProvider;
	},
	/*<BeginProperty Name="Infragistics.TokenState Infragistics.CloudFileManager::TokenState()" />*/
	tokenState: function () {
		return this.__state;
	}
	/*<EndProperty Name="Infragistics.TokenState Infragistics.CloudFileManager::TokenState()" />*/
	,
	/*<BeginProperty Name="Infragistics.ProvideCredentialsBlock Infragistics.CloudFileManager::CredentialsProvider()" />*/
	credentialsProvider: function () {
		return this.__credentialsProvider;
	}
	/*<EndProperty Name="Infragistics.ProvideCredentialsBlock Infragistics.CloudFileManager::CredentialsProvider()" />*/
	,
	_identifier: null,
	/*<BeginProperty Name="System.String Infragistics.CloudFileManager::Identifier()" />*/
	identifier: function (value) {
		if (arguments.length === 1) {
			this._identifier = value;
			return value;
		} else {
			return this._identifier;
		}
	}
	/*<EndProperty Name="System.String Infragistics.CloudFileManager::Identifier()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudFileManager::RootPath()" />*/
	rootPath: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.CloudFileManager::RootPath()" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetFilesInFolder(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesInFolder1: function (folder, handler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetFilesInFolder(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetFilesInFolder(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesInFolder: function (foldersOnly, folder, handler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetFilesInFolder(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetFilesFromCloudFolder(Infragistics.CloudFile, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesFromCloudFolder: function (file, handler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetFilesFromCloudFolder(Infragistics.CloudFile, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetMetadata(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	getMetadata: function (path, handler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetMetadata(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetFileMetaData(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	getFileMetaData: function (path, handler, errorHandler) {
		return this.getMetadata(path, handler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetFileMetaData(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::DownloadFile(System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	downloadFile: function (file, handler, downloadHandler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::DownloadFile(System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::DownloadFile(System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	downloadFile1: function (file, mimeType, handler, downloadHandler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::DownloadFile(System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::DownloadFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedIfModifiedBlock, Infragistics.CloudErrorBlock)" />*/
	downloadFile2: function (file, lastVersion, exportType, progress, success, errorHandler) {
		var $self = this;
		var strongMe = this;
		var request = this.getMetadata(file, function (m) {
			var currentVersion = m.resourceVersionIdentifier();
			if (lastVersion != null && lastVersion.equals(currentVersion)) {
				success(false, null, currentVersion);
			} else {
				var downloadRequest = null;
				downloadRequest = strongMe.downloadFile1(file, exportType, progress, function (f) {
					success(true, f, currentVersion);
				}, errorHandler);
				$self.executeAndManage(downloadRequest);
			}
		}, errorHandler);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::DownloadFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedIfModifiedBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.CloudProviderType Infragistics.CloudFileManager::GetProviderType()" />*/
	getProviderType: function () {
	}
	/*<EndMethod Name="Infragistics.CloudProviderType Infragistics.CloudFileManager::GetProviderType()" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::SearchFiles(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	searchFiles: function (searchText, handler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::SearchFiles(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::SearchFilesWithQuery(Infragistics.SearchQuery, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	searchFilesWithQuery: function (searchQuery, handler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::SearchFilesWithQuery(Infragistics.SearchQuery, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::UploadFile(System.String, System.Object, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadFile: function (fileName, file, remoteFolderId, progress, success, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::UploadFile(System.String, System.Object, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::OverwriteFile(System.String, System.Object, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	overwriteFile: function (fileName, file, remoteFolderId, remoteFileId, progress, success, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::OverwriteFile(System.String, System.Object, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::CopyFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	copyFile: function (fileId, filePath, destinationPath, progress, success, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::CopyFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::MoveFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	moveFile: function (fileId, filePath, destinationPath, progress, success, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::MoveFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::CreateFolder(System.String, System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	createFolder: function (newFolderName, remoteParentFolderId, successHandler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::CreateFolder(System.String, System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::GenerateSharedLink(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	generateSharedLink: function (cloudFile, successHandler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::GenerateSharedLink(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::DeleteFile(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	deleteFile: function (fileId, successHandler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::DeleteFile(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::DeleteFilePermanent(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	deleteFilePermanent: function (fileId, successHandler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::DeleteFilePermanent(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetAccountInfo(Infragistics.CloudAccountUserInfoBlock, Infragistics.CloudErrorBlock)" />*/
	getAccountInfo: function (successHandler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetAccountInfo(Infragistics.CloudAccountUserInfoBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.CloudFileManager::CanAddFileInFolder(System.String)" />*/
	canAddFileInFolder: function (fileId) {
	}
	/*<EndMethod Name="System.Boolean Infragistics.CloudFileManager::CanAddFileInFolder(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.CloudFileManager::CanDeleteFile(System.String)" />*/
	canDeleteFile: function (fileId) {
	}
	/*<EndMethod Name="System.Boolean Infragistics.CloudFileManager::CanDeleteFile(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetParentForFile(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	getParentForFile: function (fileId, successHandler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetParentForFile(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetFileByName(System.String, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFileByName: function (fileName, remoteFolderId, handler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetFileByName(System.String, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetDownloadLink(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	getDownloadLink: function (fileId, successHandler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetDownloadLink(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetFilePermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	getFilePermissions: function (fileId, successHandler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetFilePermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetFileMembersPermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	getFileMembersPermissions: function (fileId, successHandler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetFileMembersPermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::DeleteFilePermissions(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	deleteFilePermissions: function (fileId, successHandler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::DeleteFilePermissions(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::DeleteFileMemberPermissions(System.String, Infragistics.CloudFileMemberPermissions, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	deleteFileMemberPermissions: function (fileId, memberPermission, successHandler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::DeleteFileMemberPermissions(System.String, Infragistics.CloudFileMemberPermissions, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::GrantPermissionsForFile(System.String, Infragistics.TokenState, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	grantPermissionsForFile: function (fileId, granteeTokenState, successHandler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::GrantPermissionsForFile(System.String, Infragistics.TokenState, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.GenericCloudFile Infragistics.CloudFileManager::ConvertToGenericCloudFile(Infragistics.CloudFile, System.String)" />*/
	convertToGenericCloudFile: function (file, teamId) {
		return $.ig.GenericCloudFile.prototype.createFromCloudFile(file, teamId, this.identifier(), this.getProviderType());
	}
	/*<EndMethod Name="Infragistics.GenericCloudFile Infragistics.CloudFileManager::ConvertToGenericCloudFile(Infragistics.CloudFile, System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudFileManager::GetEndpoint()" />*/
	getEndpoint: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.CloudFileManager::GetEndpoint()" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetFilePath(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	getFilePath: function (cloudFile, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetFilePath(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPReadOnlyList Infragistics.CloudFileManager::GetReadFilesScope()" />*/
	getReadFilesScope: function () {
		return new $.ig.Array();
	}
	/*<EndMethod Name="Infragistics.CPReadOnlyList Infragistics.CloudFileManager::GetReadFilesScope()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPReadOnlyList Infragistics.CloudFileManager::GetShareLinkScope()" />*/
	getShareLinkScope: function () {
		return new $.ig.Array();
	}
	/*<EndMethod Name="Infragistics.CPReadOnlyList Infragistics.CloudFileManager::GetShareLinkScope()" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::ValidateUrl(System.String, System.String, Infragistics.DoubleStringBlock, Infragistics.CloudErrorBlock)" />*/
	validateUrl: function (siteUrl, fullPath, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::ValidateUrl(System.String, System.String, Infragistics.DoubleStringBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFileManager::SupportsFileUpload()" />*/
	supportsFileUpload: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFileManager::SupportsFileUpload()" />*/
	,
	__reqManager: null,
	/*<BeginMethod Name="System.Void Infragistics.CloudFileManager::ExecuteAndManage(Infragistics.Request)" />*/
	executeAndManage: function (req) {
		if (this.__reqManager == null) {
			this.__reqManager = new $.ig.SimpleRequestManager();
		}
		this.__reqManager.executeAndManage(req);
	}
	/*<EndMethod Name="System.Void Infragistics.CloudFileManager::ExecuteAndManage(Infragistics.Request)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.CloudFileManager::HasExpiredToken(Infragistics.CloudError)" />*/
	hasExpiredToken: function (error) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.CloudFileManager::HasExpiredToken(Infragistics.CloudError)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetFilePathName(System.String, Infragistics.StringBlock, Infragistics.CloudErrorBlock)" />*/
	getFilePathName: function (path, handler, errorHandler) {
		return this.getFileMetaData(path, function (file) {
			if (handler != null) {
				handler(file.name());
			}
		}, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::GetFilePathName(System.String, Infragistics.StringBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::DownloadFileFromLink(System.String, System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	downloadFileFromLink: function (fileId, downloadLink, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::DownloadFileFromLink(System.String, System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudFileManager::DeleteSharedLink(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	deleteSharedLink: function (fileId, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudFileManager::DeleteSharedLink(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	$type: new $.ig.Type('CloudFileManager', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CloudFileManager" />*/

/*<BeginType Name="Infragistics.CloudTeamManager" />*/

$.ig.util.defType('CloudTeamManager', 'Object', {
	__state: null,
	init: function (state) {
		$.ig.Object.prototype.init.call(this);
		this.__state = state;
	},
	/*<BeginProperty Name="Infragistics.TokenState Infragistics.CloudTeamManager::TokenState()" />*/
	tokenState: function () {
		return this.__state;
	}
	/*<EndProperty Name="Infragistics.TokenState Infragistics.CloudTeamManager::TokenState()" />*/
	,
	/*<BeginMethod Name="Infragistics.OAuthRequestBase Infragistics.CloudTeamManager::GetTeamsImMemberOf(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	getTeamsImMemberOf: function (successHandler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.OAuthRequestBase Infragistics.CloudTeamManager::GetTeamsImMemberOf(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudTeamManager::GetMembers(Infragistics.CloudTeam, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	getMembers: function (team, successHandler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudTeamManager::GetMembers(Infragistics.CloudTeam, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudTeamManager::GetOrganization(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	getOrganization: function (successHandler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudTeamManager::GetOrganization(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.CloudTeamManager::LoadTeamMember(Infragistics.CloudTeamMember, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	loadTeamMember: function (teamMember, successHandler, errorHandler) {
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.CloudTeamManager::LoadTeamMember(Infragistics.CloudTeamMember, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	$type: new $.ig.Type('CloudTeamManager', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CloudTeamManager" />*/

/*<BeginType Name="Infragistics.SessionDelegate" />*/

$.ig.util.defType('SessionDelegate', 'Object', {
	$type: new $.ig.Type('SessionDelegate', null)
}, true);

/*<EndType Name="Infragistics.SessionDelegate" />*/

/*<BeginType Name="Infragistics.SessionRequestBase" />*/

$.ig.util.defType('SessionRequestBase', 'Request', {
	__session: null,
	__errorOccurred: false,
	__multipartFormDataBoundary: null,
	init: function (initNumber, success, error) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
				case 2:
					this.init2.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.Request.prototype.init.call(this, 0, success, error);
	},
	init1: function (initNumber, key, success, error) {
		$.ig.Request.prototype.init1.call(this, 1, key, success, error);
	},
	init2: function (initNumber, key, success, error, progress, downloaded) {
		$.ig.Request.prototype.init2.call(this, 2, key, success, error, progress, downloaded);
	},
	/*<BeginMethod Name="System.Void Infragistics.SessionRequestBase::Execute()" />*/
	execute: function () {
		this.__session = this.createSession();
		if (this.__session == null) {
			return;
		}
		$.ig.NativeRequestUtility.prototype.utility().executeTask(this.__session);
	}
	/*<EndMethod Name="System.Void Infragistics.SessionRequestBase::Execute()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SessionRequestBase::Cancel()" />*/
	cancel: function () {
		$.ig.Request.prototype.cancel.call(this);
		if (this.__session != null) {
			$.ig.NativeRequestUtility.prototype.utility().cancelTask(this.__session);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.SessionRequestBase::Cancel()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.SessionRequestBase::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.SessionRequestBase::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.SessionRequestBase::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.SessionRequestBase::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.SessionRequestBase::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.SessionRequestBase::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="Infragistics.JsonPushEventHandler Infragistics.SessionRequestBase::ResolveJsonPushEventHandler()" />*/
	resolveJsonPushEventHandler: function () {
		return null;
	}
	/*<EndMethod Name="Infragistics.JsonPushEventHandler Infragistics.SessionRequestBase::ResolveJsonPushEventHandler()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionType Infragistics.SessionRequestBase::ResolveSessionType()" />*/
	resolveSessionType: function () {
		return $.ig.SessionType.prototype.normal;
	}
	/*<EndMethod Name="Infragistics.SessionType Infragistics.SessionRequestBase::ResolveSessionType()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionTaskType Infragistics.SessionRequestBase::ResolveTaskType()" />*/
	resolveTaskType: function () {
		return $.ig.SessionTaskType.prototype.data;
	}
	/*<EndMethod Name="Infragistics.SessionTaskType Infragistics.SessionRequestBase::ResolveTaskType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SessionRequestBase::ResolveURL()" />*/
	resolveURL: function () {
		var url = this.resolveBaseURL();
		var action = this.resolveAction();
		if (action != null) {
			url = url + action;
			if (this.paramsInRequestURL()) {
				var paramsValue = $.ig.RQHTTPUtils.prototype.buildQueryString(this.resolveParams(), this.uRLEncodeParams());
				if (paramsValue != null && paramsValue.length > 0) {
					url = url + ($.ig.CPStringUtility.prototype.getQueryString(url) == null ? "?" : "&");
					url = url + paramsValue;
				}
			}
		}
		return url;
	}
	/*<EndMethod Name="System.String Infragistics.SessionRequestBase::ResolveURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SessionRequestBase::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
	}
	/*<EndMethod Name="System.String Infragistics.SessionRequestBase::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SessionRequestBase::ResolveAction()" />*/
	resolveAction: function () {
	}
	/*<EndMethod Name="System.String Infragistics.SessionRequestBase::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SessionRequestBase::URLEncodeParams()" />*/
	uRLEncodeParams: function () {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.SessionRequestBase::URLEncodeParams()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SessionRequestBase::ParamsInRequestURL()" />*/
	paramsInRequestURL: function () {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.SessionRequestBase::ParamsInRequestURL()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.SessionRequestBase::ResolveParams()" />*/
	resolveParams: function () {
		return new $.ig.Dictionary(0);
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.SessionRequestBase::ResolveParams()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SessionRequestBase::ResolvePostContent()" />*/
	resolvePostContent: function () {
		if (this.paramsInRequestURL()) {
			return null;
		}
		return $.ig.RQHTTPUtils.prototype.buildQueryString(this.resolveParams(), this.uRLEncodeParams());
	}
	/*<EndMethod Name="System.String Infragistics.SessionRequestBase::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SessionRequestBase::ResolvePostContentAsObject()" />*/
	resolvePostContentAsObject: function () {
		return null;
	}
	/*<EndMethod Name="System.Object Infragistics.SessionRequestBase::ResolvePostContentAsObject()" />*/
	,
	/*<BeginMethod Name="System.Array Infragistics.SessionRequestBase::ResolvePostContentData()" />*/
	resolvePostContentData: function () {
		return null;
	}
	/*<EndMethod Name="System.Array Infragistics.SessionRequestBase::ResolvePostContentData()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SessionRequestBase::ResolvePostContentDataStream()" />*/
	resolvePostContentDataStream: function () {
		return null;
	}
	/*<EndMethod Name="System.Object Infragistics.SessionRequestBase::ResolvePostContentDataStream()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SessionRequestBase::ResolvePostContentFilePath()" />*/
	resolvePostContentFilePath: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.SessionRequestBase::ResolvePostContentFilePath()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SessionRequestBase::ResolveAuthorization()" />*/
	resolveAuthorization: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.SessionRequestBase::ResolveAuthorization()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SessionRequestBase::ResolveDomain()" />*/
	resolveDomain: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.SessionRequestBase::ResolveDomain()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SessionRequestBase::ResolveUserName()" />*/
	resolveUserName: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.SessionRequestBase::ResolveUserName()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SessionRequestBase::ResolvePassword()" />*/
	resolvePassword: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.SessionRequestBase::ResolvePassword()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SessionRequestBase::ResolveChallengeDomain()" />*/
	resolveChallengeDomain: function () {
		return this.resolveDomain();
	}
	/*<EndMethod Name="System.String Infragistics.SessionRequestBase::ResolveChallengeDomain()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SessionRequestBase::ResolveChallengeUsername()" />*/
	resolveChallengeUsername: function () {
		return this.resolveUserName();
	}
	/*<EndMethod Name="System.String Infragistics.SessionRequestBase::ResolveChallengeUsername()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SessionRequestBase::ResolveChallengePassword()" />*/
	resolveChallengePassword: function () {
		return this.resolvePassword();
	}
	/*<EndMethod Name="System.String Infragistics.SessionRequestBase::ResolveChallengePassword()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.SessionRequestBase::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		return null;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.SessionRequestBase::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SessionRequestBase::ResolveAllowAutoRedirect()" />*/
	resolveAllowAutoRedirect: function () {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.SessionRequestBase::ResolveAllowAutoRedirect()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SessionRequestBase::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return null;
	}
	/*<EndMethod Name="System.Object Infragistics.SessionRequestBase::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SessionRequestBase::ProcessDataResponse(System.Array)" />*/
	processDataResponse: function (response) {
		return null;
	}
	/*<EndMethod Name="System.Object Infragistics.SessionRequestBase::ProcessDataResponse(System.Array)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SessionRequestBase::ProcessStringResponse(System.String)" />*/
	processStringResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.SessionRequestBase::ProcessStringResponse(System.String)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SessionRequestBase::ProcessXMLResponse(Infragistics.NativeXmlProxy)" />*/
	processXMLResponse: function (response) {
		return null;
	}
	/*<EndMethod Name="System.Object Infragistics.SessionRequestBase::ProcessXMLResponse(Infragistics.NativeXmlProxy)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SessionRequestBase::GetHTTPMethodString()" />*/
	getHTTPMethodString: function () {
		var method = this.resolveHTTPMethod();
		switch (method) {
			case $.ig.SessionHTTPMethod.prototype.gET: return "GET";
			case $.ig.SessionHTTPMethod.prototype.pOST: return "POST";
			case $.ig.SessionHTTPMethod.prototype.dELETE: return "DELETE";
			case $.ig.SessionHTTPMethod.prototype.pUT: return "PUT";
			case $.ig.SessionHTTPMethod.prototype.pATCH: return "PATCH";
			case $.ig.SessionHTTPMethod.prototype.hEAD: return "HEAD";
			default: return null;
		}
	}
	/*<EndMethod Name="System.String Infragistics.SessionRequestBase::GetHTTPMethodString()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SessionRequestBase::GetContentTypeString()" />*/
	getContentTypeString: function () {
		var contentType = this.resolveContentType();
		if (contentType == $.ig.SessionContentType.prototype.xML) {
			return "text/xml; charset=utf-8";
		} else if (contentType == $.ig.SessionContentType.prototype.uRLEncodeForm) {
			return "application/x-www-form-urlencoded";
		} else if (contentType == $.ig.SessionContentType.prototype.soapXML) {
			return "application/soap+xml; charset=utf-8";
		} else if (contentType == $.ig.SessionContentType.prototype.jSON) {
			return "application/json";
		} else if (contentType == $.ig.SessionContentType.prototype.amazonJSON) {
			return "application/x-amz-json-1.1";
		} else if (contentType == $.ig.SessionContentType.prototype.multipartFormData) {
			return "multipart/form-data; boundary=" + this.getMultipartFormDataBoundary();
		} else if (contentType == $.ig.SessionContentType.prototype.none) {
			return null;
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.SessionRequestBase::GetContentTypeString()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SessionRequestBase::GetMultipartFormDataBoundary()" />*/
	getMultipartFormDataBoundary: function () {
		if (this.__multipartFormDataBoundary == null) {
			this.__multipartFormDataBoundary = $.ig.CPStringUtility.prototype.generateUniquieID();
		}
		return this.__multipartFormDataBoundary;
	}
	/*<EndMethod Name="System.String Infragistics.SessionRequestBase::GetMultipartFormDataBoundary()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionTask Infragistics.SessionRequestBase::CreateSession()" />*/
	createSession: function () {
		var r = new $.ig.URLRequest();
		r._content = this.resolvePostContent();
		r._contentObject = this.resolvePostContentAsObject();
		r._contentType = this.resolveContentType();
		r._contentData = this.resolvePostContentData();
		r._contentDataStream = this.resolvePostContentDataStream();
		r._contentFilePath = this.resolvePostContentFilePath();
		r._method = this.resolveHTTPMethod();
		r._additionalHeaders = this.resolveAdditionalHeaderFields();
		r._responseType = this.resolveResponseType();
		r._authorization = this.resolveAuthorization();
		r._allowAutoRedirect = this.resolveAllowAutoRedirect();
		r._executeCallbacksOnMainThread = this.executeCallbacksOnMainThread();
		r._timeout = this.resolveTimeout();
		r._cookieStorageMode = this.resolveCookieStorageMode();
		r._maxDownloadSize = this.maxDownloadSize();
		var httpMethod = this.getHTTPMethodString();
		var contentTypeValue = r.getContentTypeHeaderValue();
		if (contentTypeValue == null) {
			contentTypeValue = this.getContentTypeString();
		}
		var st = this.resolveSessionType();
		var request = this.resolveURL();
		var auth = r._authorization;
		r._webRequest = $.ig.NativeRequestUtility.prototype.utility().createRequest(request, r, httpMethod, contentTypeValue, st, this);
		if (r._webRequest == null) {
			return null;
		}
		return $.ig.NativeRequestUtility.prototype.utility().createSession(this.resolveTaskType(), st, r, this);
	}
	/*<EndMethod Name="Infragistics.SessionTask Infragistics.SessionRequestBase::CreateSession()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.SessionRequestBase::ResolveTimeout()" />*/
	resolveTimeout: function () {
		return $.ig.SessionRequestBase.prototype.dEFAULT_TIMEOUT;
	}
	/*<EndMethod Name="System.Int32 Infragistics.SessionRequestBase::ResolveTimeout()" />*/
	,
	/*<BeginMethod Name="Infragistics.CookieStorageMode Infragistics.SessionRequestBase::ResolveCookieStorageMode()" />*/
	resolveCookieStorageMode: function () {
		return $.ig.CookieStorageMode.prototype.undefined;
	}
	/*<EndMethod Name="Infragistics.CookieStorageMode Infragistics.SessionRequestBase::ResolveCookieStorageMode()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SessionRequestBase::SessionFailedWithError(Infragistics.SessionTask, Infragistics.CloudError)" />*/
	sessionFailedWithError: function (task, error) {
		this.error(error);
	}
	/*<EndMethod Name="System.Void Infragistics.SessionRequestBase::SessionFailedWithError(Infragistics.SessionTask, Infragistics.CloudError)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SessionRequestBase::ReceivedResponse(System.Int32, Infragistics.CPDictionary)" />*/
	receivedResponse: function (statusCode, headers) {
	}
	/*<EndMethod Name="System.Void Infragistics.SessionRequestBase::ReceivedResponse(System.Int32, Infragistics.CPDictionary)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SessionRequestBase::ProcessHeaders(System.Int32, Infragistics.CPDictionary)" />*/
	processHeaders: function (statusCode, response) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.SessionRequestBase::ProcessHeaders(System.Int32, Infragistics.CPDictionary)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SessionRequestBase::ProcessResponseStream(System.Object, Infragistics.ExecutionBlock)" />*/
	processResponseStream: function (stream, block) {
		block();
	}
	/*<EndMethod Name="System.Void Infragistics.SessionRequestBase::ProcessResponseStream(System.Object, Infragistics.ExecutionBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SessionRequestBase::SessionComplete(Infragistics.SessionTask, System.Object)" />*/
	sessionComplete: function (task, response) {
		var obj = null;
		if (task._request._responseType == $.ig.SessionResponseType.prototype.jSON) {
			obj = this.processJSONResponse(response);
		} else if (task._request._responseType == $.ig.SessionResponseType.prototype.dATA) {
			obj = this.processDataResponse(response);
		} else if (task._request._responseType == $.ig.SessionResponseType.prototype.xML) {
			obj = this.processXMLResponse(response);
		} else if (task._request._responseType == $.ig.SessionResponseType.prototype.sTRING) {
			obj = this.processStringResponse(response);
		}
		if (!this.__errorOccurred) {
			this.success(obj);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.SessionRequestBase::SessionComplete(Infragistics.SessionTask, System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SessionRequestBase::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		this.__errorOccurred = true;
		$.ig.Request.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.SessionRequestBase::Error(Infragistics.CloudError)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SessionRequestBase::SessionDownloadUpdate(Infragistics.SessionTask, System.Int64, System.Int64)" />*/
	sessionDownloadUpdate: function (task, bytes, totalBytes) {
		this.progressUpdate(task, bytes, totalBytes);
	}
	/*<EndMethod Name="System.Void Infragistics.SessionRequestBase::SessionDownloadUpdate(Infragistics.SessionTask, System.Int64, System.Int64)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SessionRequestBase::SessionUploadUpdate(Infragistics.SessionTask, System.Int64, System.Int64)" />*/
	sessionUploadUpdate: function (task, bytes, totalBytes) {
		this.progressUpdate(task, bytes, totalBytes);
	}
	/*<EndMethod Name="System.Void Infragistics.SessionRequestBase::SessionUploadUpdate(Infragistics.SessionTask, System.Int64, System.Int64)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SessionRequestBase::SessionFileDownloaded(Infragistics.SessionTask, System.String)" />*/
	sessionFileDownloaded: function (task, location) {
		if (this.downloadBlock() != null) {
			this.downloadBlock()(this, location);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.SessionRequestBase::SessionFileDownloaded(Infragistics.SessionTask, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SessionRequestBase::ProgressUpdate(Infragistics.SessionTask, System.Int64, System.Int64)" />*/
	progressUpdate: function (task, bytes, totalBytes) {
		if (this.progressBlock() != null) {
			this.progressBlock()(this, bytes, totalBytes);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.SessionRequestBase::ProgressUpdate(Infragistics.SessionTask, System.Int64, System.Int64)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SessionRequestBase::Retry()" />*/
	retry: function () {
		this.__errorOccurred = false;
		$.ig.Request.prototype.retry.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.SessionRequestBase::Retry()" />*/
	,
	$type: new $.ig.Type('SessionRequestBase', $.ig.Request.prototype.$type, [$.ig.SessionDelegate.prototype.$type])
}, true);

/*<EndType Name="Infragistics.SessionRequestBase" />*/

/*<BeginType Name="Infragistics.SessionTask" />*/

$.ig.util.defType('SessionTask', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	_sessionDelegate: null,
	_request: null,
	_taskType: 0,
	_type: 0,
	_userName: null,
	_password: null,
	_domain: null,
	$type: new $.ig.Type('SessionTask', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SessionTask" />*/

/*<BeginType Name="Infragistics.URLRequest" />*/

$.ig.util.defType('URLRequest', 'Object', {
	init: function () {
		this._cookieStorageMode = $.ig.CookieStorageMode.prototype.undefined;
		$.ig.Object.prototype.init.call(this);
	},
	_content: null,
	_contentObject: null,
	_contentData: null,
	_contentDataStream: null,
	_contentFilePath: null,
	_authorization: null,
	_method: 0,
	_contentType: 0,
	_responseType: 0,
	_additionalHeaders: null,
	_webRequest: null,
	_allowAutoRedirect: false,
	_executeCallbacksOnMainThread: false,
	_timeout: 0,
	_cookieStorageMode: 0,
	_maxDownloadSize: $.ig.util.toNullable($.ig.Number.prototype.$type, null),
	/*<BeginMethod Name="System.String Infragistics.URLRequest::GetContentTypeHeaderValue()" />*/
	getContentTypeHeaderValue: function () {
		if (this._additionalHeaders == null) {
			return null;
		}
		return $.ig.RQHTTPUtils.prototype.getHeaderValue(this._additionalHeaders, "content-type");
	}
	/*<EndMethod Name="System.String Infragistics.URLRequest::GetContentTypeHeaderValue()" />*/
	,
	$type: new $.ig.Type('URLRequest', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.URLRequest" />*/

/*<BeginType Name="Infragistics.RQHTTPUtils" />*/

$.ig.util.defType('RQHTTPUtils', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.String Infragistics.RQHTTPUtils::GetHeaderValue(Infragistics.CPDictionary, System.String)" />*/
	getHeaderValue: function (headers, headerName) {
		var keys = $.ig.NativeDictionaryUtility.prototype.getKeys(headers);
		for (var i = 0; i < headers.count(); i++) {
			var key = keys[i];
			if (key == null) {
				continue;
			}
			if (key.toLowerCase().equals(headerName.toLowerCase())) {
				return headers.item(key);
			}
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.RQHTTPUtils::GetHeaderValue(Infragistics.CPDictionary, System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.RQHTTPUtils::BuildQueryString(Infragistics.CPDictionary, System.Boolean)" />*/
	buildQueryString: function (p, urlEncode) {
		if (p != null) {
			var keys = $.ig.NativeDictionaryUtility.prototype.getKeys(p);
			var count = keys.length;
			if (count > 0) {
				var url = "";
				for (var i = 0; i < count; i++) {
					var name = keys[i];
					var parameterValue = p.item(name);
					var nameEncoded = urlEncode ? $.ig.NativeStringUtility.prototype.encodeURIQueryParam(name) : name;
					if ($.ig.util.cast($.ig.Array.prototype.$type, parameterValue) !== null) {
						var valueList = parameterValue;
						var valueCount = valueList.length;
						var value = "";
						for (var v = 0; v < valueCount; v++) {
							if (v > 0) {
								value = value + "&";
							}
							var pValue = $.ig.NativeStringUtility.prototype.toString1(valueList[v]);
							var pStrValue = urlEncode ? $.ig.NativeStringUtility.prototype.encodeURIQueryParam(pValue) : pValue;
							value = value + nameEncoded + "=" + pStrValue;
						}
						url = url + value;
					} else {
						var parameterStrValue = $.ig.NativeStringUtility.prototype.toString1(parameterValue);
						var value1 = urlEncode ? $.ig.NativeStringUtility.prototype.encodeURIQueryParam(parameterStrValue) : parameterStrValue;
						url = url + nameEncoded + "=" + value1;
					}
					if (i != count - 1) {
						url = url + "&";
					}
				}
				return url;
			}
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.RQHTTPUtils::BuildQueryString(Infragistics.CPDictionary, System.Boolean)" />*/
	,
	$type: new $.ig.Type('RQHTTPUtils', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.RQHTTPUtils" />*/

/*<BeginType Name="Infragistics.BoxOAuthProvider" />*/

$.ig.util.defType('BoxOAuthProvider', 'OAuthProvider', {
	init: function (keys) {
		$.ig.OAuthProvider.prototype.init.call(this, keys);
	},
	/*<BeginMethod Name="System.String Infragistics.BoxOAuthProvider::GetAuthURL()" />*/
	getAuthURL: function () {
		return "https://account.box.com/api/oauth2/";
	}
	/*<EndMethod Name="System.String Infragistics.BoxOAuthProvider::GetAuthURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxOAuthProvider::GetTokenURL()" />*/
	getTokenURL: function () {
		return "https://api.box.com/oauth2/";
	}
	/*<EndMethod Name="System.String Infragistics.BoxOAuthProvider::GetTokenURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxOAuthProvider::GetLogoutUrl()" />*/
	getLogoutUrl: function () {
		return $.ig.BoxOAuthProvider.prototype.providerLogoutUrl();
	}
	/*<EndMethod Name="System.String Infragistics.BoxOAuthProvider::GetLogoutUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.BoxOAuthProvider::ProviderLogoutUrl()" />*/
	providerLogoutUrl: function () {
		return "https://accounts.box.com/logout";
	}
	/*<EndProperty Name="System.String Infragistics.BoxOAuthProvider::ProviderLogoutUrl()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.BoxOAuthProvider::CloudProvider()" />*/
	cloudProvider: function () {
		return $.ig.CloudProviderType.prototype.box;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.BoxOAuthProvider::CloudProvider()" />*/
	,
	$type: new $.ig.Type('BoxOAuthProvider', $.ig.OAuthProvider.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxOAuthProvider" />*/

/*<BeginType Name="Infragistics.IOAuthRequest" />*/

$.ig.util.defType('IOAuthRequest', 'Object', {
	$type: new $.ig.Type('IOAuthRequest', null, [$.ig.IRequest.prototype.$type])
}, true);

/*<EndType Name="Infragistics.IOAuthRequest" />*/

/*<BeginType Name="Infragistics.OAuthRequestBase" />*/

$.ig.util.defType('OAuthRequestBase', 'SessionRequestBase', {
	__provider: null,
	__tokenState: null,
	init: function (initNumber, key, token, success, error) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.SessionRequestBase.prototype.init1.call(this, 1, key, success, error);
		this.__tokenState = token;
	},
	init1: function (initNumber, key, token, success, error, progress, downloaded) {
		$.ig.SessionRequestBase.prototype.init2.call(this, 2, key, success, error, progress, downloaded);
		this.__tokenState = token;
	},
	/*<BeginProperty Name="Infragistics.OAuthProvider Infragistics.OAuthRequestBase::Provider()" />*/
	provider: function () {
		if (this.__provider == null) {
			this.__provider = this.resolveProvider(this.__tokenState);
		}
		return this.__provider;
	}
	/*<EndProperty Name="Infragistics.OAuthProvider Infragistics.OAuthRequestBase::Provider()" />*/
	,
	/*<BeginMethod Name="Infragistics.OAuthProvider Infragistics.OAuthRequestBase::ResolveProvider(Infragistics.TokenState)" />*/
	resolveProvider: function (token) {
	}
	/*<EndMethod Name="Infragistics.OAuthProvider Infragistics.OAuthRequestBase::ResolveProvider(Infragistics.TokenState)" />*/
	,
	/*<BeginProperty Name="Infragistics.TokenState Infragistics.OAuthRequestBase::TokenState()" />*/
	tokenState: function (value) {
		if (arguments.length === 1) {
			this.__tokenState = value;
			return value;
		} else {
			return this.__tokenState;
		}
	}
	/*<EndProperty Name="Infragistics.TokenState Infragistics.OAuthRequestBase::TokenState()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthRequestBase::ResolveAuthorization()" />*/
	resolveAuthorization: function () {
		if (this.__tokenState == null) {
			return null;
		}
		return "Bearer " + this.__tokenState.token().getAccessToken();
	}
	/*<EndMethod Name="System.String Infragistics.OAuthRequestBase::ResolveAuthorization()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.OAuthRequestBase::Execute()" />*/
	execute: function () {
		if (!this.requireElevatedPermissions() || this.hasAdminConsent()) {
			if (this.__tokenState != null && this.__tokenState.token().isExpired()) {
				this.__tokenState.refreshToken(this, this.hasAdminConsent());
			} else {
				$.ig.SessionRequestBase.prototype.execute.call(this);
			}
		} else {
			this.tokenState().refreshToken(this, true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.OAuthRequestBase::Execute()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.OAuthRequestBase::HasAdminConsent()" />*/
	hasAdminConsent: function () {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.OAuthRequestBase::HasAdminConsent()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.OAuthRequestBase::RequireElevatedPermissions()" />*/
	requireElevatedPermissions: function () {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.OAuthRequestBase::RequireElevatedPermissions()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.OAuthRequestBase::URLEncodeParams()" />*/
	uRLEncodeParams: function () {
		return this.provider().shouldURLEncodeParams();
	}
	/*<EndMethod Name="System.Boolean Infragistics.OAuthRequestBase::URLEncodeParams()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.OAuthRequestBase::ProcessStringResponse(System.String)" />*/
	processStringResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.OAuthRequestBase::ProcessStringResponse(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.OAuthRequestBase::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		if (error.errorType() == $.ig.CloudErrorType.prototype.noType) {
			if (error.errorCode() == 401 || error.errorCode() == 403) {
				error.errorType($.ig.CloudErrorType.prototype.needsOAuthorize);
			}
		}
		$.ig.SessionRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.OAuthRequestBase::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('OAuthRequestBase', $.ig.SessionRequestBase.prototype.$type, [$.ig.IOAuthRequest.prototype.$type])
}, true);

/*<EndType Name="Infragistics.OAuthRequestBase" />*/

/*<BeginType Name="Infragistics.BoxRequestBase" />*/

$.ig.util.defType('BoxRequestBase', 'OAuthRequestBase', {
	init: function (initNumber, key, token, success, error) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.BoxRequestBase.prototype.init1.call(this, 1, key, token, success, error, null, null);
	},
	init1: function (initNumber, key, token, success, error, progress, downloaded) {
		$.ig.OAuthRequestBase.prototype.init1.call(this, 1, key, token, success, error, progress, downloaded);
		this.fields("path_collection,name,parent,owned_by,modified_at,size,shared_link");
	},
	/*<BeginMethod Name="System.String Infragistics.BoxRequestBase::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://api.box.com/2.0/";
	}
	/*<EndMethod Name="System.String Infragistics.BoxRequestBase::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.BoxRequestBase::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.BoxRequestBase::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="Infragistics.OAuthProvider Infragistics.BoxRequestBase::ResolveProvider(Infragistics.TokenState)" />*/
	resolveProvider: function (token) {
		return new $.ig.BoxOAuthProvider(token.providerKeys());
	}
	/*<EndMethod Name="Infragistics.OAuthProvider Infragistics.BoxRequestBase::ResolveProvider(Infragistics.TokenState)" />*/
	,
	_fields: null,
	/*<BeginProperty Name="System.String Infragistics.BoxRequestBase::Fields()" />*/
	fields: function (value) {
		if (arguments.length === 1) {
			this._fields = value;
			return value;
		} else {
			return this._fields;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxRequestBase::Fields()" />*/
	,
	$type: new $.ig.Type('BoxRequestBase', $.ig.OAuthRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxRequestBase" />*/

/*<BeginType Name="Infragistics.BoxGetFilesRequest" />*/

$.ig.util.defType('BoxGetFilesRequest', 'BoxRequestBase', {
	init: function (token, success, error) {
		$.ig.BoxRequestBase.prototype.init.call(this, 0, "Box_GetFiles", token, success, error);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.BoxGetFilesRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxGetFilesRequest::Path()" />*/
	,
	_limit: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.BoxGetFilesRequest::Limit()" />*/
	limit: function (value) {
		if (arguments.length === 1) {
			this._limit = value;
			return value;
		} else {
			return this._limit;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.BoxGetFilesRequest::Limit()" />*/
	,
	_marker: null,
	/*<BeginProperty Name="System.String Infragistics.BoxGetFilesRequest::Marker()" />*/
	marker: function (value) {
		if (arguments.length === 1) {
			this._marker = value;
			return value;
		} else {
			return this._marker;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxGetFilesRequest::Marker()" />*/
	,
	_responseMarker: null,
	/*<BeginProperty Name="System.String Infragistics.BoxGetFilesRequest::ResponseMarker()" />*/
	responseMarker: function (value) {
		if (arguments.length === 1) {
			this._responseMarker = value;
			return value;
		} else {
			return this._responseMarker;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxGetFilesRequest::ResponseMarker()" />*/
	,
	_foldersOnly: false,
	/*<BeginProperty Name="System.Boolean Infragistics.BoxGetFilesRequest::FoldersOnly()" />*/
	foldersOnly: function (value) {
		if (arguments.length === 1) {
			this._foldersOnly = value;
			return value;
		} else {
			return this._foldersOnly;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.BoxGetFilesRequest::FoldersOnly()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxGetFilesRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxGetFilesRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxGetFilesRequest::ResolveAction()" />*/
	resolveAction: function () {
		if (this.path() == null || this.path().length == 0) {
			return "folders/0/items";
		}
		return "folders/" + this.path() + "/items";
	}
	/*<EndMethod Name="System.String Infragistics.BoxGetFilesRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.BoxGetFilesRequest::ResolveParams()" />*/
	resolveParams: function () {
		var p = new $.ig.Dictionary(0);
		p.item("fields", this.fields());
		p.item("usemarker", "true");
		if (this.limit() > 0) {
			p.item("limit", this.limit());
		}
		if (this.marker() != null) {
			p.item("marker", this.marker());
		}
		return p;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.BoxGetFilesRequest::ResolveParams()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.BoxGetFilesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var files = new $.ig.Array();
		var entries = response.resolveListForKey("entries");
		var count = entries.length;
		for (var i = 0; i < count; i++) {
			var fileJson = $.ig.CPJSONObject.prototype.createFromJSONObject(entries[i]);
			var file = new $.ig.BoxFile(1, fileJson, this.tokenState().additionalIdentifier());
			if (this.foldersOnly() && file.isFolder() || !this.foldersOnly()) {
				files.add(file);
			}
		}
		this.responseMarker(response.resolveStringForKey("next_marker"));
		return files;
	}
	/*<EndMethod Name="System.Object Infragistics.BoxGetFilesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('BoxGetFilesRequest', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxGetFilesRequest" />*/

/*<BeginType Name="Infragistics.BoxFileManager" />*/

$.ig.util.defType('BoxFileManager', 'CloudFileManager', {
	init: function (token) {
		$.ig.CloudFileManager.prototype.init.call(this, 0, token);
	},
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetFilesFromCloudFolder(Infragistics.CloudFile, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesFromCloudFolder: function (file, handler, errorHandler) {
		return this.getFilesInFolder1((file == null ? null : file.pathIdentifier()), handler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetFilesFromCloudFolder(Infragistics.CloudFile, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetFilesInFolder(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesInFolder1: function (folder, handler, errorHandler) {
		return this.getFilesInFolder(false, folder, handler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetFilesInFolder(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetFilesInFolder(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesInFolder: function (foldersOnly, folder, handler, errorHandler) {
		return this.getFiles(foldersOnly, folder, handler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetFilesInFolder(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetFiles(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFiles: function (getFoldersOnly, folder, handler, errorHandler) {
		var request = new $.ig.BoxGetFilesRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.path($.ig.BoxFile.prototype.extractItemId(folder));
		request.foldersOnly(getFoldersOnly);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetFiles(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name=" Infragistics.BoxFileManager::GetSearchCapabilities()" />*/
	getSearchCapabilities: function () {
		return [ $.ig.SearchCapabilities.prototype.searchByModifiedDateTime, $.ig.SearchCapabilities.prototype.searchByText, $.ig.SearchCapabilities.prototype.searchByFileExtensions ];
	}
	/*<EndMethod Name=" Infragistics.BoxFileManager::GetSearchCapabilities()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.BoxFileManager::HasDropCapability()" />*/
	hasDropCapability: function () {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.BoxFileManager::HasDropCapability()" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::SearchFilesWithQuery(Infragistics.SearchQuery, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	searchFilesWithQuery: function (searchQuery, handler, errorHandler) {
		if (searchQuery._text == null || searchQuery._text.equals("")) {
			if (handler != null) {
				var error = new $.ig.CloudError(0);
				error.errorCode($.ig.CloudError.prototype.errorCannotSearchByEmptyText);
				errorHandler(error);
			}
			return null;
		}
		var request = new $.ig.BoxSearchFilesRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.query(searchQuery._text);
		request.ancestorFolderIds(searchQuery._initialPath);
		request.fileExtensions($.ig.ArrayUtility.prototype.join(searchQuery._fileExtensions, ","));
		request.updatedAtFromDate(searchQuery._modifiedSince);
		request.updatedAtToDate(searchQuery._modifiedBefore);
		request.limit(1000);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::SearchFilesWithQuery(Infragistics.SearchQuery, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::SearchFiles(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	searchFiles: function (searchText, handler, errorHandler) {
		var request = new $.ig.BoxSearchFilesRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.query(searchText);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::SearchFiles(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::DownloadFile(System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	downloadFile1: function (file, mimeType, handler, downloadHandler, errorHandler) {
		return this.downloadFile(file, handler, downloadHandler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::DownloadFile(System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::DownloadFile(System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	downloadFile: function (file, handler, downloaded, errorHandler) {
		var request = new $.ig.BoxDownloadFileRequest(this.tokenState(), null, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		}, function (r, bytes, total) {
			if (handler != null) {
				handler(bytes, total);
			}
		}, function (r, f) {
			if (downloaded != null) {
				downloaded(f);
			}
		});
		request.path($.ig.BoxFile.prototype.extractItemId(file));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::DownloadFile(System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.CloudProviderType Infragistics.BoxFileManager::GetProviderType()" />*/
	getProviderType: function () {
		return $.ig.CloudProviderType.prototype.box;
	}
	/*<EndMethod Name="Infragistics.CloudProviderType Infragistics.BoxFileManager::GetProviderType()" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetMetadata(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	getMetadata: function (path, handler, errorHandler) {
		var request = new $.ig.BoxGetMetadataRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.fileId($.ig.BoxFile.prototype.extractItemId(path));
		request.fileType($.ig.BoxFile.prototype.extractType(path));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetMetadata(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::UploadFile(System.String, System.Object, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadFile: function (fileName, file, remoteFolderId, progress, success, errorHandler) {
		throw new $.ig.NotImplementedException(0);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::UploadFile(System.String, System.Object, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::OverwriteFile(System.String, System.Object, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	overwriteFile: function (fileName, file, remoteFolderId, remoteFileId, progress, success, errorHandler) {
		throw new $.ig.NotImplementedException(0);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::OverwriteFile(System.String, System.Object, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::CreateFolder(System.String, System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	createFolder: function (newFolderName, remoteParentFolderId, successHandler, errorHandler) {
		var request = new $.ig.BoxCreateFolderRequest(this.tokenState(), function (r, o) {
			if (successHandler != null) {
				successHandler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.name(newFolderName);
		if (remoteParentFolderId == null) {
			request.parentId("0");
		} else {
			request.parentId($.ig.BoxFile.prototype.extractItemId(remoteParentFolderId));
		}
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::CreateFolder(System.String, System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::GenerateSharedLink(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	generateSharedLink: function (cloudFile, successHandler, errorHandler) {
		var $self = this;
		var request = new $.ig.BoxGetSharedLinkRequest(this.tokenState(), function (r, o) {
			$self.checkSharedLinkExists(o, cloudFile, successHandler, errorHandler);
		}, function (r, e) {
			$self.failedSharedLink(e, errorHandler);
		});
		request.fileId($.ig.BoxFile.prototype.extractItemId(cloudFile.pathIdentifier()));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::GenerateSharedLink(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.BoxFileManager::CheckSharedLinkExists(Infragistics.CPJSONObject, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	checkSharedLinkExists: function (response, cloudFile, successHandler, errorHandler) {
		var $self = this;
		this.checkSharedLinkCreated(response, cloudFile, function (o) {
			if ((o).sharedEditLink() == null || (o).sharedViewLink() == null) {
				var sharedLinkRequest = $self.createSharedLink(response, cloudFile, successHandler, errorHandler);
				$self.executeAndManage(sharedLinkRequest);
			} else {
				successHandler(o);
			}
		}, errorHandler);
	}
	/*<EndMethod Name="System.Void Infragistics.BoxFileManager::CheckSharedLinkExists(Infragistics.CPJSONObject, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::CreateSharedLink(Infragistics.CPJSONObject, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	createSharedLink: function (response, cloudFile, successHandler, errorHandler) {
		var $self = this;
		var request = new $.ig.BoxCreateSharedLinkRequest(this.tokenState(), function (r, o) {
			$self.checkSharedLinkCreated(o, cloudFile, successHandler, errorHandler);
		}, function (r, e) {
			$self.failedSharedLink(e, errorHandler);
		});
		request.fileId($.ig.BoxFile.prototype.extractItemId(cloudFile.pathIdentifier()));
		request.accessType("open");
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::CreateSharedLink(Infragistics.CPJSONObject, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.BoxFileManager::CheckSharedLinkCreated(Infragistics.CPJSONObject, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	checkSharedLinkCreated: function (response, cloudFile, successHandler, errorHandler) {
		var sharedLink = response.resolveJSONForKey("shared_link");
		if (sharedLink != null) {
			var url = sharedLink.resolveStringForKey("url");
			if (!$.ig.CPStringUtility.prototype.isNullOrEmpty(url)) {
				cloudFile.sharedEditLink(url);
			}
		}
		if (successHandler != null) {
			successHandler(cloudFile);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.BoxFileManager::CheckSharedLinkCreated(Infragistics.CPJSONObject, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.BoxFileManager::FailedSharedLink(Infragistics.CloudError, Infragistics.CloudErrorBlock)" />*/
	failedSharedLink: function (error, errorHandler) {
		if (errorHandler != null) {
			errorHandler(error);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.BoxFileManager::FailedSharedLink(Infragistics.CloudError, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::DeleteFile(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	deleteFile: function (path, successHandler, errorHandler) {
		var $self = this;
		return this.getMetadata(path, function (f) {
			$self.performDeleteFile(path, f, successHandler, errorHandler);
		}, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::DeleteFile(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.BoxFileManager::PerformDeleteFile(System.String, Infragistics.CloudFile, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	performDeleteFile: function (path, f, successHandler, errorHandler) {
		var errorBlock = function (r, e) {
			if (errorHandler != null) {
				errorHandler(e);
			}
		};
		if (f.isFolder()) {
			var deleteR = new $.ig.BoxDeleteFolderRequest(this.tokenState(), successHandler, errorBlock);
			deleteR.folderId($.ig.BoxFile.prototype.extractItemId(path));
			deleteR.recursive(true);
			this.executeAndManage(deleteR);
		} else {
			var deleteR1 = new $.ig.BoxDeleteFileRequest(this.tokenState(), successHandler, errorBlock);
			deleteR1.fileId($.ig.BoxFile.prototype.extractItemId(path));
			this.executeAndManage(deleteR1);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.BoxFileManager::PerformDeleteFile(System.String, Infragistics.CloudFile, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::DeleteFilePermanent(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	deleteFilePermanent: function (fileId, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::DeleteFilePermanent(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetAccountInfo(Infragistics.CloudAccountUserInfoBlock, Infragistics.CloudErrorBlock)" />*/
	getAccountInfo: function (successHandler, errorHandler) {
		var request = new $.ig.BoxGetAccountInfo(this.tokenState(), function (r, o) {
			if (successHandler != null) {
				successHandler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetAccountInfo(Infragistics.CloudAccountUserInfoBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.BoxFileManager::CanAddFileInFolder(System.String)" />*/
	canAddFileInFolder: function (fileId) {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.BoxFileManager::CanAddFileInFolder(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.BoxFileManager::CanDeleteFile(System.String)" />*/
	canDeleteFile: function (fileId) {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.BoxFileManager::CanDeleteFile(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetParentForFile(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	getParentForFile: function (fileId, successHandler, errorHandler) {
		var $self = this;
		return this.getMetadata(fileId, function (o) {
			$self.performGetParent(o, successHandler, errorHandler);
		}, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetParentForFile(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.BoxFileManager::PerformGetParent(Infragistics.BoxFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	performGetParent: function (file, successHandler, errorHandler) {
		var parentId = file.parentId();
		if (parentId == null) {
			successHandler(null);
		} else {
			var parentRequest = new $.ig.BoxGetFolderInfoRequest(this.tokenState(), function (rp, op) {
				successHandler(op);
			}, function (rp, error) {
				errorHandler(error);
			});
			parentRequest.folderId(parentId);
			this.executeAndManage(parentRequest);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.BoxFileManager::PerformGetParent(Infragistics.BoxFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetFileByName(System.String, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFileByName: function (fileName, remoteFolderId, handler, errorHandler) {
		var requestWrapper = new $.ig.RequestWrapper();
		var remoteParentFolderId = "0";
		if (remoteFolderId != null) {
			remoteParentFolderId = $.ig.BoxFile.prototype.extractItemId(remoteFolderId);
		}
		var request = this.getFileByName1(fileName, remoteParentFolderId, handler, errorHandler, null);
		requestWrapper.request(request);
		return requestWrapper;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetFileByName(System.String, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetFileByName(System.String, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock, System.String)" />*/
	getFileByName1: function (fileName, remoteFolderId, handler, errorHandler, pageMarker) {
		var $self = this;
		var req = new $.ig.BoxGetFilesRequest(this.tokenState(), function (r, o) {
			if (handler == null) {
				return;
			}
			var items = o;
			for (var i = 0; i < items.length; i++) {
				var item = items[i];
				if (item.name().equals(fileName)) {
					var files = new $.ig.Array();
					files.add(item);
					handler(files);
					return;
				}
			}
			var responseMarker = (r).responseMarker();
			if (responseMarker == null || responseMarker.equals("")) {
				handler(new $.ig.Array());
			} else {
				var nextPageRequest = $self.getFileByName1(fileName, remoteFolderId, handler, errorHandler, responseMarker);
				$self.executeAndManage(nextPageRequest);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		req.path(remoteFolderId);
		req.limit(1000);
		req.marker(pageMarker);
		return req;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetFileByName(System.String, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock, System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetDownloadLink(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	getDownloadLink: function (fileId, successHandler, errorHandler) {
		var request = new $.ig.BoxDownloadLinkRequest(this.tokenState(), successHandler, errorHandler);
		request.path($.ig.BoxFile.prototype.extractItemId(fileId));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetDownloadLink(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.BoxFileRequest Infragistics.BoxFileManager::processFile(System.String, System.String, System.Boolean, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock, System.Boolean)" />*/
	processFile: function (fileId, destinationPath, isFolder, successHandler, errorHandler, copyFile) {
		var fileRequest;
		if (destinationPath == null) {
			var error = new $.ig.CloudError(0);
			error.errorMessage("Invalid destination");
			errorHandler(error);
		}
		if (destinationPath == "") {
			destinationPath = "0";
		}
		var internalSuccess = function (rb, o) {
			successHandler(null);
		};
		var internalError = function (r, e) {
			errorHandler(e);
		};
		if (copyFile) {
			fileRequest = new $.ig.BoxCopyFileRequest(this.tokenState(), internalSuccess, internalError);
		} else {
			fileRequest = new $.ig.BoxMoveFileRequest(this.tokenState(), internalSuccess, internalError);
		}
		fileRequest._isFolder = isFolder;
		fileRequest.fileId($.ig.BoxFile.prototype.extractItemId(fileId));
		fileRequest.destinationPath(destinationPath);
		this.executeAndManage(fileRequest);
		return fileRequest;
	}
	/*<EndMethod Name="Infragistics.BoxFileRequest Infragistics.BoxFileManager::processFile(System.String, System.String, System.Boolean, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::CopyFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	copyFile: function (fileId, filePath, destinationPath, progress, successHandler, errorHandler) {
		var request = this.processFile(fileId, destinationPath, filePath == "folder", successHandler, errorHandler, true);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::CopyFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::MoveFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	moveFile: function (fileId, filePath, destinationPath, progress, successHandler, errorHandler) {
		var request = this.processFile(fileId, destinationPath, filePath == "folder", successHandler, errorHandler, false);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::MoveFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetFilePermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	getFilePermissions: function (fileId, successHandler, errorHandler) {
		var $self = this;
		var request = new $.ig.BoxGetMetadataRequest(this.tokenState(), function (r, o) {
			var boxFile = o;
			if (boxFile.ownerId() == $self.tokenState().userInfo().getUserId()) {
				successHandler($.ig.BoxFileManager.prototype.creteBoxPermission(boxFile, $self.tokenState().userInfo().getEmail()));
			} else {
				$self.checkForCollaboration(fileId, successHandler, errorHandler);
			}
		}, function (r, e) {
			errorHandler(r, e);
		});
		request.fileId($.ig.BoxFile.prototype.extractItemId(fileId));
		request.fileType($.ig.BoxFile.prototype.extractType(fileId));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetFilePermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetFileMembersPermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	getFileMembersPermissions: function (fileId, successHandler, errorHandler) {
		var email = this.tokenState().userInfo().getEmail();
		var fileManager = new $.ig.BoxFileManager(this.tokenState());
		var request = new $.ig.BoxGetMetadataRequest(this.tokenState(), function (r, o) {
			fileManager.getMemberCollaborations(o, email, fileId, successHandler, errorHandler);
		}, function (r, e) {
			errorHandler(r, e);
		});
		request.fileId($.ig.BoxFile.prototype.extractItemId(fileId));
		request.fileType($.ig.BoxFile.prototype.extractType(fileId));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::GetFileMembersPermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.BoxFileManager::GetMemberCollaborations(Infragistics.BoxFile, System.String, System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	getMemberCollaborations: function (file, email, fileId, successHandler, errorHandler) {
		var $self = this;
		var collaborationRequest = new $.ig.BoxGetUserCollaborationRequest($.ig.BoxFile.prototype.extractItemId(fileId), $.ig.BoxFile.prototype.extractType(fileId), this.tokenState(), function (r1, o1) {
			$self.getMemberCollaborationsSuccess(o1, $.ig.BoxFileManager.prototype.creteBoxPermission(file, email), successHandler);
		}, function (r1, e1) {
			errorHandler(r1, e1);
		});
		this.executeAndManage(collaborationRequest);
	}
	/*<EndMethod Name="System.Void Infragistics.BoxFileManager::GetMemberCollaborations(Infragistics.BoxFile, System.String, System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.BoxFileManager::GetMemberCollaborationsSuccess(Infragistics.CPList, Infragistics.BoxFilePermissions, Infragistics.CloudFilePermissionsBlock)" />*/
	getMemberCollaborationsSuccess: function (collaborations, permissions, successHandler) {
		for (var i = 0; i < collaborations.length; i++) {
			permissions.setCollaborationMember(collaborations[i]);
		}
		successHandler(permissions);
	}
	/*<EndMethod Name="System.Void Infragistics.BoxFileManager::GetMemberCollaborationsSuccess(Infragistics.CPList, Infragistics.BoxFilePermissions, Infragistics.CloudFilePermissionsBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.BoxFileManager::CheckForCollaboration(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	checkForCollaboration: function (fileId, successHandler, errorHandler) {
		var $self = this;
		var collaborationRequest = new $.ig.BoxGetUserCollaborationRequest($.ig.BoxFile.prototype.extractItemId(fileId), $.ig.BoxFile.prototype.extractType(fileId), this.tokenState(), function (r1, o1) {
			var collaborations = o1;
			successHandler($self.createBoxCollaborationPermission(collaborations));
		}, function (r1, e1) {
			errorHandler(r1, e1);
		});
		this.executeAndManage(collaborationRequest);
	}
	/*<EndMethod Name="System.Void Infragistics.BoxFileManager::CheckForCollaboration(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.BoxFileCollaborationPermissions Infragistics.BoxFileManager::CreateBoxCollaborationPermission(Infragistics.CPList)" />*/
	createBoxCollaborationPermission: function (collaborations) {
		var userId = this.tokenState().userInfo().getUserId();
		for (var i = 0; i < collaborations.length; i++) {
			var permissions = collaborations[i];
			if (permissions.userId() == userId) {
				return permissions;
			}
		}
		return new $.ig.BoxFileCollaborationPermissions(new $.ig.CPJSONObject(1));
	}
	/*<EndMethod Name="Infragistics.BoxFileCollaborationPermissions Infragistics.BoxFileManager::CreateBoxCollaborationPermission(Infragistics.CPList)" />*/
	,
	/*<BeginMethod Name="Infragistics.BoxFilePermissions Infragistics.BoxFileManager::CreteBoxPermission(Infragistics.BoxFile, System.String)" />*/
	creteBoxPermission: function (boxFile, userEmail) {
		return new $.ig.BoxFilePermissions(boxFile, boxFile.ownerId(), userEmail);
	}
	/*<EndMethod Name="Infragistics.BoxFilePermissions Infragistics.BoxFileManager::CreteBoxPermission(Infragistics.BoxFile, System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::DeleteFileMemberPermissions(System.String, Infragistics.CloudFileMemberPermissions, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	deleteFileMemberPermissions: function (fileId, memberPermission, successHandler, errorHandler) {
		if (memberPermission == null || memberPermission.permissionKey() == null) {
			return null;
		}
		var request = this.deletePermission(memberPermission.permissionKey(), successHandler, errorHandler);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::DeleteFileMemberPermissions(System.String, Infragistics.CloudFileMemberPermissions, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::DeleteFilePermissions(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	deleteFilePermissions: function (fileId, successHandler, errorHandler) {
		var $self = this;
		var request = new $.ig.BoxGetUserCollaborationRequest($.ig.BoxFile.prototype.extractItemId(fileId), $.ig.BoxFile.prototype.extractType(fileId), this.tokenState(), function (r, o) {
			var collaborations = o;
			var userId = $self.tokenState().userInfo().getUserId();
			for (var i = 0; i < collaborations.length; i++) {
				var permissions = collaborations[i];
				if (permissions.userId() != userId) {
					$self.deletePermission1(permissions);
				}
			}
			successHandler(r, o);
		}, function (r1, e1) {
			errorHandler(r1, e1);
		});
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::DeleteFilePermissions(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::DeletePermission(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	deletePermission: function (permissionId, successHandler, errorHandler) {
		return new $.ig.BoxDeleteUserCollaborationRequest(permissionId, this.tokenState(), successHandler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::DeletePermission(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.BoxFileManager::DeletePermission(Infragistics.BoxFileCollaborationPermissions)" />*/
	deletePermission1: function (permissions) {
		var collaborationRequest = this.deletePermission(permissions.resolveStringForKey("id"), function (r1, o1) {
		}, function (r1, e1) {
		});
		this.executeAndManage(collaborationRequest);
	}
	/*<EndMethod Name="System.Void Infragistics.BoxFileManager::DeletePermission(Infragistics.BoxFileCollaborationPermissions)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::GrantPermissionsForFile(System.String, Infragistics.TokenState, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	grantPermissionsForFile: function (fileId, granteeTokenState, successHandler, errorHandler) {
		var request = new $.ig.BoxCreateCollaborationRequest($.ig.BoxFile.prototype.extractItemId(fileId), $.ig.BoxFile.prototype.extractType(fileId), granteeTokenState.userInfo().getUserId(), this.tokenState(), function (r, o) {
			var permissions = new $.ig.BoxFilePermissions(o, granteeTokenState.userInfo().getUserId(), granteeTokenState.userInfo().getEmail());
			successHandler(r, permissions);
		}, errorHandler);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::GrantPermissionsForFile(System.String, Infragistics.TokenState, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.BoxFileManager::SupportsFileUpload()" />*/
	supportsFileUpload: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.BoxFileManager::SupportsFileUpload()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.BoxFileManager::HasExpiredToken(Infragistics.CloudError)" />*/
	hasExpiredToken: function (error) {
		if (error != null && (error.errorType() == $.ig.CloudErrorType.prototype.needsOAuthorize || error.errorCode() == 401)) {
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.BoxFileManager::HasExpiredToken(Infragistics.CloudError)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.BoxFileManager::DownloadFileFromLink(System.String, System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	downloadFileFromLink: function (fileId, downloadLink, successHandler, errorHandler) {
		return new $.ig.BoxDownloadFileFromLinkRequest($.ig.BoxFile.prototype.extractItemId(fileId), downloadLink, this.tokenState(), successHandler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.BoxFileManager::DownloadFileFromLink(System.String, System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	$type: new $.ig.Type('BoxFileManager', $.ig.CloudFileManager.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxFileManager" />*/

/*<BeginType Name="Infragistics.BoxDownloadFileFromLinkRequest" />*/

$.ig.util.defType('BoxDownloadFileFromLinkRequest', 'BoxRequestBase', {
	__path: null,
	__downloadLink: null,
	init: function (path, downloadLink, token, success, error) {
		$.ig.BoxRequestBase.prototype.init.call(this, 0, "Box_DownloadFile", token, success, error);
		this.__path = path;
		this.__downloadLink = downloadLink;
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxDownloadFileFromLinkRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxDownloadFileFromLinkRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionTaskType Infragistics.BoxDownloadFileFromLinkRequest::ResolveTaskType()" />*/
	resolveTaskType: function () {
		return $.ig.SessionTaskType.prototype.data;
	}
	/*<EndMethod Name="Infragistics.SessionTaskType Infragistics.BoxDownloadFileFromLinkRequest::ResolveTaskType()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.BoxDownloadFileFromLinkRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.dATA;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.BoxDownloadFileFromLinkRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxDownloadFileFromLinkRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/" + this.__path + "/content";
	}
	/*<EndMethod Name="System.String Infragistics.BoxDownloadFileFromLinkRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.BoxDownloadFileFromLinkRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var additionalHeaders = new $.ig.Dictionary(0);
		additionalHeaders.item("BoxApi", this.__downloadLink);
		return additionalHeaders;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.BoxDownloadFileFromLinkRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.BoxDownloadFileFromLinkRequest::ProcessDataResponse(System.Array)" />*/
	processDataResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.BoxDownloadFileFromLinkRequest::ProcessDataResponse(System.Array)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.BoxDownloadFileFromLinkRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.BoxRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.BoxDownloadFileFromLinkRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('BoxDownloadFileFromLinkRequest', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxDownloadFileFromLinkRequest" />*/

/*<BeginType Name="Infragistics.BoxDownloadFileRequest" />*/

$.ig.util.defType('BoxDownloadFileRequest', 'BoxRequestBase', {
	init: function (token, success, error, progress, downloaded) {
		$.ig.BoxRequestBase.prototype.init1.call(this, 1, "Box_DownloadFile", token, success, error, progress, downloaded);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.BoxDownloadFileRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxDownloadFileRequest::Path()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxDownloadFileRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxDownloadFileRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionTaskType Infragistics.BoxDownloadFileRequest::ResolveTaskType()" />*/
	resolveTaskType: function () {
		return $.ig.SessionTaskType.prototype.download;
	}
	/*<EndMethod Name="Infragistics.SessionTaskType Infragistics.BoxDownloadFileRequest::ResolveTaskType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxDownloadFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/" + this.path() + "/content";
	}
	/*<EndMethod Name="System.String Infragistics.BoxDownloadFileRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.BoxDownloadFileRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.BoxRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.BoxDownloadFileRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('BoxDownloadFileRequest', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxDownloadFileRequest" />*/

/*<BeginType Name="Infragistics.BoxDownloadLinkRequest" />*/

$.ig.util.defType('BoxDownloadLinkRequest', 'BoxRequestBase', {
	init: function (token, success, error) {
		$.ig.BoxRequestBase.prototype.init.call(this, 0, "Box_DownloadLink", token, success, error);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.BoxDownloadLinkRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxDownloadLinkRequest::Path()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxDownloadLinkRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxDownloadLinkRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxDownloadLinkRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/" + this.path();
	}
	/*<EndMethod Name="System.String Infragistics.BoxDownloadLinkRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.BoxDownloadLinkRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.BoxDownloadLinkRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.BoxDownloadLinkRequest::ResolveAllowAutoRedirect()" />*/
	resolveAllowAutoRedirect: function () {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.BoxDownloadLinkRequest::ResolveAllowAutoRedirect()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.BoxDownloadLinkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var sharedLinkObj = response.resolveJSONForKey("shared_link");
		if (sharedLinkObj != null) {
			return sharedLinkObj.resolveStringForKey("download_url");
		}
		return null;
	}
	/*<EndMethod Name="System.Object Infragistics.BoxDownloadLinkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('BoxDownloadLinkRequest', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxDownloadLinkRequest" />*/

/*<BeginType Name="Infragistics.BoxGetFolderInfoRequest" />*/

$.ig.util.defType('BoxGetFolderInfoRequest', 'BoxRequestBase', {
	init: function (token, success, error) {
		$.ig.BoxRequestBase.prototype.init.call(this, 0, "Box_GetFolderInfo", token, success, error);
	},
	_folderId: null,
	/*<BeginProperty Name="System.String Infragistics.BoxGetFolderInfoRequest::FolderId()" />*/
	folderId: function (value) {
		if (arguments.length === 1) {
			this._folderId = value;
			return value;
		} else {
			return this._folderId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxGetFolderInfoRequest::FolderId()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxGetFolderInfoRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "folders/" + this.folderId();
	}
	/*<EndMethod Name="System.String Infragistics.BoxGetFolderInfoRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxGetFolderInfoRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxGetFolderInfoRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.BoxGetFolderInfoRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return (new $.ig.BoxFile(1, response, this.tokenState().additionalIdentifier()));
	}
	/*<EndMethod Name="System.Object Infragistics.BoxGetFolderInfoRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('BoxGetFolderInfoRequest', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxGetFolderInfoRequest" />*/

/*<BeginType Name="Infragistics.BoxGetMetadataRequest" />*/

$.ig.util.defType('BoxGetMetadataRequest', 'BoxRequestBase', {
	init: function (token, success, error) {
		$.ig.BoxRequestBase.prototype.init.call(this, 0, "Box_GetMetadata", token, success, error);
	},
	_fileId: null,
	/*<BeginProperty Name="System.String Infragistics.BoxGetMetadataRequest::FileId()" />*/
	fileId: function (value) {
		if (arguments.length === 1) {
			this._fileId = value;
			return value;
		} else {
			return this._fileId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxGetMetadataRequest::FileId()" />*/
	,
	_fileType: null,
	/*<BeginProperty Name="System.String Infragistics.BoxGetMetadataRequest::FileType()" />*/
	fileType: function (value) {
		if (arguments.length === 1) {
			this._fileType = value;
			return value;
		} else {
			return this._fileType;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxGetMetadataRequest::FileType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxGetMetadataRequest::ResolveAction()" />*/
	resolveAction: function () {
		if (("folder").equals(this.fileType())) {
			return "folders/" + this.fileId();
		} else {
			return "files/" + this.fileId();
		}
	}
	/*<EndMethod Name="System.String Infragistics.BoxGetMetadataRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxGetMetadataRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxGetMetadataRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.BoxGetMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return (new $.ig.BoxFile(1, response, this.tokenState().additionalIdentifier()));
	}
	/*<EndMethod Name="System.Object Infragistics.BoxGetMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('BoxGetMetadataRequest', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxGetMetadataRequest" />*/

/*<BeginType Name="Infragistics.BoxSearchFilesRequest" />*/

$.ig.util.defType('BoxSearchFilesRequest', 'BoxRequestBase', {
	init: function (token, success, error) {
		$.ig.BoxRequestBase.prototype.init.call(this, 0, "Box_SearchFiles", token, success, error);
	},
	_query: null,
	/*<BeginProperty Name="System.String Infragistics.BoxSearchFilesRequest::Query()" />*/
	query: function (value) {
		if (arguments.length === 1) {
			this._query = value;
			return value;
		} else {
			return this._query;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxSearchFilesRequest::Query()" />*/
	,
	_fileExtensions: null,
	/*<BeginProperty Name="System.String Infragistics.BoxSearchFilesRequest::FileExtensions()" />*/
	fileExtensions: function (value) {
		if (arguments.length === 1) {
			this._fileExtensions = value;
			return value;
		} else {
			return this._fileExtensions;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxSearchFilesRequest::FileExtensions()" />*/
	,
	_updatedAtFromDate: $.ig.util.toNullable($.ig.Date.prototype.$type, null),
	/*<BeginProperty Name="System.Nullable Infragistics.BoxSearchFilesRequest::UpdatedAtFromDate()" />*/
	updatedAtFromDate: function (value) {
		if (arguments.length === 1) {
			this._updatedAtFromDate = value;
			return value;
		} else {
			return this._updatedAtFromDate;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.BoxSearchFilesRequest::UpdatedAtFromDate()" />*/
	,
	_updatedAtToDate: $.ig.util.toNullable($.ig.Date.prototype.$type, null),
	/*<BeginProperty Name="System.Nullable Infragistics.BoxSearchFilesRequest::UpdatedAtToDate()" />*/
	updatedAtToDate: function (value) {
		if (arguments.length === 1) {
			this._updatedAtToDate = value;
			return value;
		} else {
			return this._updatedAtToDate;
		}
	}
	/*<EndProperty Name="System.Nullable Infragistics.BoxSearchFilesRequest::UpdatedAtToDate()" />*/
	,
	_ancestorFolderIds: null,
	/*<BeginProperty Name="System.String Infragistics.BoxSearchFilesRequest::AncestorFolderIds()" />*/
	ancestorFolderIds: function (value) {
		if (arguments.length === 1) {
			this._ancestorFolderIds = value;
			return value;
		} else {
			return this._ancestorFolderIds;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxSearchFilesRequest::AncestorFolderIds()" />*/
	,
	_limit: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.BoxSearchFilesRequest::Limit()" />*/
	limit: function (value) {
		if (arguments.length === 1) {
			this._limit = value;
			return value;
		} else {
			return this._limit;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.BoxSearchFilesRequest::Limit()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxSearchFilesRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxSearchFilesRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxSearchFilesRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "search";
	}
	/*<EndMethod Name="System.String Infragistics.BoxSearchFilesRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.BoxSearchFilesRequest::ResolveParams()" />*/
	resolveParams: function () {
		var p = new $.ig.Dictionary(0);
		p.item("query", this.query());
		if (this.fileExtensions() != null) {
			p.item("file_extensions", this.fileExtensions());
		}
		var updatedAtRange = "";
		if (!$.ig.NativeDateUtility.prototype.dateIsNull(this.updatedAtFromDate())) {
			updatedAtRange = $.ig.DateUtility.prototype.convertDateToRFC3339(this.updatedAtFromDate().value());
		}
		updatedAtRange = updatedAtRange + ",";
		if (!$.ig.NativeDateUtility.prototype.dateIsNull(this.updatedAtToDate())) {
			updatedAtRange = updatedAtRange + $.ig.DateUtility.prototype.convertDateToRFC3339(this.updatedAtToDate().value());
		}
		if (updatedAtRange.length > 1) {
			p.item("updated_at_range", updatedAtRange);
		}
		if (this.ancestorFolderIds() != null) {
			p.item("ancestor_folder_ids", this.ancestorFolderIds());
		}
		if (this.limit() > 0) {
			p.item("limit", this.limit().toString());
		}
		return p;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.BoxSearchFilesRequest::ResolveParams()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.BoxSearchFilesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var files = new $.ig.Array();
		var entries = response.resolveListForKey("entries");
		var count = entries.length;
		for (var i = 0; i < count; i++) {
			files.add(new $.ig.BoxFile(1, $.ig.CPJSONObject.prototype.createFromJSONObject(entries[i]), this.tokenState().additionalIdentifier()));
		}
		return files;
	}
	/*<EndMethod Name="System.Object Infragistics.BoxSearchFilesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.BoxSearchFilesRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		$.ig.BoxRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.BoxSearchFilesRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('BoxSearchFilesRequest', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxSearchFilesRequest" />*/

/*<BeginType Name="Infragistics.BoxGetSharedLinkRequest" />*/

$.ig.util.defType('BoxGetSharedLinkRequest', 'BoxRequestBase', {
	init: function (token, success, error) {
		$.ig.BoxRequestBase.prototype.init.call(this, 0, "Box_GetSharedLink", token, success, error);
	},
	_fileId: null,
	/*<BeginProperty Name="System.String Infragistics.BoxGetSharedLinkRequest::FileId()" />*/
	fileId: function (value) {
		if (arguments.length === 1) {
			this._fileId = value;
			return value;
		} else {
			return this._fileId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxGetSharedLinkRequest::FileId()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxGetSharedLinkRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxGetSharedLinkRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxGetSharedLinkRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/" + this.fileId() + "?fields=shared_link";
	}
	/*<EndMethod Name="System.String Infragistics.BoxGetSharedLinkRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.BoxGetSharedLinkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.BoxGetSharedLinkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('BoxGetSharedLinkRequest', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxGetSharedLinkRequest" />*/

/*<BeginType Name="Infragistics.BoxCreateSharedLinkRequest" />*/

$.ig.util.defType('BoxCreateSharedLinkRequest', 'BoxRequestBase', {
	init: function (token, success, error) {
		$.ig.BoxRequestBase.prototype.init.call(this, 0, "Box_CreateSharedLink", token, success, error);
	},
	_fileId: null,
	/*<BeginProperty Name="System.String Infragistics.BoxCreateSharedLinkRequest::FileId()" />*/
	fileId: function (value) {
		if (arguments.length === 1) {
			this._fileId = value;
			return value;
		} else {
			return this._fileId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxCreateSharedLinkRequest::FileId()" />*/
	,
	_accessType: null,
	/*<BeginProperty Name="System.String Infragistics.BoxCreateSharedLinkRequest::AccessType()" />*/
	accessType: function (value) {
		if (arguments.length === 1) {
			this._accessType = value;
			return value;
		} else {
			return this._accessType;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxCreateSharedLinkRequest::AccessType()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxCreateSharedLinkRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pUT;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxCreateSharedLinkRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxCreateSharedLinkRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/" + this.fileId() + "?fields=shared_link";
	}
	/*<EndMethod Name="System.String Infragistics.BoxCreateSharedLinkRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxCreateSharedLinkRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		return "{\"shared_link\": {\"access\": \"" + this.accessType() + "\"}}";
	}
	/*<EndMethod Name="System.String Infragistics.BoxCreateSharedLinkRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.BoxCreateSharedLinkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.BoxCreateSharedLinkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('BoxCreateSharedLinkRequest', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxCreateSharedLinkRequest" />*/

/*<BeginType Name="Infragistics.BoxGetAccountInfo" />*/

$.ig.util.defType('BoxGetAccountInfo', 'BoxRequestBase', {
	init: function (token, success, error) {
		$.ig.BoxRequestBase.prototype.init.call(this, 0, "Box_GetAccountInfo", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxGetAccountInfo::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxGetAccountInfo::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxGetAccountInfo::ResolveAction()" />*/
	resolveAction: function () {
		return "users/me";
	}
	/*<EndMethod Name="System.String Infragistics.BoxGetAccountInfo::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.BoxGetAccountInfo::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return new $.ig.BoxAccountUserInfo(response);
	}
	/*<EndMethod Name="System.Object Infragistics.BoxGetAccountInfo::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.BoxGetAccountInfo::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.BoxRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.BoxGetAccountInfo::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('BoxGetAccountInfo', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxGetAccountInfo" />*/

/*<BeginType Name="Infragistics.BoxCreateFolderRequest" />*/

$.ig.util.defType('BoxCreateFolderRequest', 'BoxRequestBase', {
	init: function (token, success, error) {
		$.ig.BoxRequestBase.prototype.init.call(this, 0, "Box_CreateFolder", token, success, error);
	},
	_name: null,
	/*<BeginProperty Name="System.String Infragistics.BoxCreateFolderRequest::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			this._name = value;
			return value;
		} else {
			return this._name;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxCreateFolderRequest::Name()" />*/
	,
	_parentId: null,
	/*<BeginProperty Name="System.String Infragistics.BoxCreateFolderRequest::ParentId()" />*/
	parentId: function (value) {
		if (arguments.length === 1) {
			this._parentId = value;
			return value;
		} else {
			return this._parentId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxCreateFolderRequest::ParentId()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxCreateFolderRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "folders";
	}
	/*<EndMethod Name="System.String Infragistics.BoxCreateFolderRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxCreateFolderRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxCreateFolderRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxCreateFolderRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var attributes = new $.ig.CPJSONObject(1);
		var parentAttributes = new $.ig.CPJSONObject(1);
		parentAttributes.setValueForKey("id", this.parentId());
		attributes.setJSONForKey("parent", parentAttributes);
		attributes.setValueForKey("name", this.name());
		return attributes.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.BoxCreateFolderRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.BoxCreateFolderRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return new $.ig.BoxFile(1, response, this.tokenState().additionalIdentifier());
	}
	/*<EndMethod Name="System.Object Infragistics.BoxCreateFolderRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('BoxCreateFolderRequest', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxCreateFolderRequest" />*/

/*<BeginType Name="Infragistics.BoxFileRequest" />*/

$.ig.util.defType('BoxFileRequest', 'BoxRequestBase', {
	init: function (key, token, success, error) {
		$.ig.BoxRequestBase.prototype.init.call(this, 0, key, token, success, error);
		this._isFolder = false;
	},
	_fileId: null,
	/*<BeginProperty Name="System.String Infragistics.BoxFileRequest::FileId()" />*/
	fileId: function (value) {
		if (arguments.length === 1) {
			this._fileId = value;
			return value;
		} else {
			return this._fileId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxFileRequest::FileId()" />*/
	,
	_isFolder: false,
	_destinationPath: null,
	/*<BeginProperty Name="System.String Infragistics.BoxFileRequest::DestinationPath()" />*/
	destinationPath: function (value) {
		if (arguments.length === 1) {
			this._destinationPath = value;
			return value;
		} else {
			return this._destinationPath;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxFileRequest::DestinationPath()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.BoxFileRequest::ParamsInRequestURL()" />*/
	paramsInRequestURL: function () {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.BoxFileRequest::ParamsInRequestURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxFileRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		return "{\"parent\": {\"id\": \"" + this.destinationPath() + "\"}, \"tags\" : []}";
	}
	/*<EndMethod Name="System.String Infragistics.BoxFileRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.BoxFileRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return new $.ig.BoxFile(1, response, this.tokenState().additionalIdentifier());
	}
	/*<EndMethod Name="System.Object Infragistics.BoxFileRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.BoxFileRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.BoxFileRequest::ResolveContentType()" />*/
	,
	$type: new $.ig.Type('BoxFileRequest', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxFileRequest" />*/

/*<BeginType Name="Infragistics.BoxCopyFileRequest" />*/

$.ig.util.defType('BoxCopyFileRequest', 'BoxFileRequest', {
	init: function (token, success, error) {
		$.ig.BoxFileRequest.prototype.init.call(this, "Box_CopyFile", token, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.BoxCopyFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return (this._isFolder ? "folders" : "files") + "/" + this.fileId() + "/copy";
	}
	/*<EndMethod Name="System.String Infragistics.BoxCopyFileRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxCopyFileRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxCopyFileRequest::ResolveHTTPMethod()" />*/
	,
	$type: new $.ig.Type('BoxCopyFileRequest', $.ig.BoxFileRequest.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxCopyFileRequest" />*/

/*<BeginType Name="Infragistics.BoxMoveFileRequest" />*/

$.ig.util.defType('BoxMoveFileRequest', 'BoxFileRequest', {
	init: function (token, success, error) {
		$.ig.BoxFileRequest.prototype.init.call(this, "Box_MoveFile", token, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.BoxMoveFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return (this._isFolder ? "folders" : "files") + "/" + this.fileId();
	}
	/*<EndMethod Name="System.String Infragistics.BoxMoveFileRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxMoveFileRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pUT;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxMoveFileRequest::ResolveHTTPMethod()" />*/
	,
	$type: new $.ig.Type('BoxMoveFileRequest', $.ig.BoxFileRequest.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxMoveFileRequest" />*/

/*<BeginType Name="Infragistics.BoxDeleteFileRequest" />*/

$.ig.util.defType('BoxDeleteFileRequest', 'BoxRequestBase', {
	init: function (token, success, error) {
		$.ig.BoxRequestBase.prototype.init.call(this, 0, "Box_DeleteFile", token, success, error);
	},
	_fileId: null,
	/*<BeginProperty Name="System.String Infragistics.BoxDeleteFileRequest::FileId()" />*/
	fileId: function (value) {
		if (arguments.length === 1) {
			this._fileId = value;
			return value;
		} else {
			return this._fileId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxDeleteFileRequest::FileId()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxDeleteFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/" + this.fileId();
	}
	/*<EndMethod Name="System.String Infragistics.BoxDeleteFileRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxDeleteFileRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.dELETE;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxDeleteFileRequest::ResolveHTTPMethod()" />*/
	,
	$type: new $.ig.Type('BoxDeleteFileRequest', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxDeleteFileRequest" />*/

/*<BeginType Name="Infragistics.BoxDeleteFolderRequest" />*/

$.ig.util.defType('BoxDeleteFolderRequest', 'BoxRequestBase', {
	init: function (token, success, error) {
		$.ig.BoxRequestBase.prototype.init.call(this, 0, "Box_DeleteFolder", token, success, error);
	},
	_folderId: null,
	/*<BeginProperty Name="System.String Infragistics.BoxDeleteFolderRequest::FolderId()" />*/
	folderId: function (value) {
		if (arguments.length === 1) {
			this._folderId = value;
			return value;
		} else {
			return this._folderId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxDeleteFolderRequest::FolderId()" />*/
	,
	_recursive: false,
	/*<BeginProperty Name="System.Boolean Infragistics.BoxDeleteFolderRequest::Recursive()" />*/
	recursive: function (value) {
		if (arguments.length === 1) {
			this._recursive = value;
			return value;
		} else {
			return this._recursive;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.BoxDeleteFolderRequest::Recursive()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxDeleteFolderRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "folders/" + this.folderId();
	}
	/*<EndMethod Name="System.String Infragistics.BoxDeleteFolderRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxDeleteFolderRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.dELETE;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxDeleteFolderRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.BoxDeleteFolderRequest::ResolveParams()" />*/
	resolveParams: function () {
		var p = new $.ig.Dictionary(0);
		p.item("recursive", this.recursive() ? "true" : "false");
		return p;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.BoxDeleteFolderRequest::ResolveParams()" />*/
	,
	$type: new $.ig.Type('BoxDeleteFolderRequest', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxDeleteFolderRequest" />*/

/*<BeginType Name="Infragistics.BoxCreateUploadSessionRequest" />*/

$.ig.util.defType('BoxCreateUploadSessionRequest', 'BoxRequestBase', {
	init: function (token, success, error) {
		$.ig.BoxRequestBase.prototype.init.call(this, 0, "Box_CreateUploadSession", token, success, error);
	},
	_fileName: null,
	/*<BeginProperty Name="System.String Infragistics.BoxCreateUploadSessionRequest::FileName()" />*/
	fileName: function (value) {
		if (arguments.length === 1) {
			this._fileName = value;
			return value;
		} else {
			return this._fileName;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxCreateUploadSessionRequest::FileName()" />*/
	,
	_folderId: null,
	/*<BeginProperty Name="System.String Infragistics.BoxCreateUploadSessionRequest::FolderId()" />*/
	folderId: function (value) {
		if (arguments.length === 1) {
			this._folderId = value;
			return value;
		} else {
			return this._folderId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxCreateUploadSessionRequest::FolderId()" />*/
	,
	_fileId: null,
	/*<BeginProperty Name="System.String Infragistics.BoxCreateUploadSessionRequest::FileId()" />*/
	fileId: function (value) {
		if (arguments.length === 1) {
			this._fileId = value;
			return value;
		} else {
			return this._fileId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxCreateUploadSessionRequest::FileId()" />*/
	,
	_fileSize: 0,
	/*<BeginProperty Name="System.UInt64 Infragistics.BoxCreateUploadSessionRequest::FileSize()" />*/
	fileSize: function (value) {
		if (arguments.length === 1) {
			this._fileSize = value;
			return value;
		} else {
			return this._fileSize;
		}
	}
	/*<EndProperty Name="System.UInt64 Infragistics.BoxCreateUploadSessionRequest::FileSize()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxCreateUploadSessionRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://upload.box.com/api/2.0/";
	}
	/*<EndMethod Name="System.String Infragistics.BoxCreateUploadSessionRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxCreateUploadSessionRequest::ResolveAction()" />*/
	resolveAction: function () {
		if (this.fileId() != null) {
			return "files/" + this.fileId() + "/upload_sessions";
		}
		return "files/upload_sessions";
	}
	/*<EndMethod Name="System.String Infragistics.BoxCreateUploadSessionRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxCreateUploadSessionRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxCreateUploadSessionRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.BoxCreateUploadSessionRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.BoxCreateUploadSessionRequest::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxCreateUploadSessionRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		if (this.folderId() != null) {
			content.setValueForKey("folder_id", this.folderId());
		}
		if (this.fileName() != null) {
			content.setValueForKey("file_name", this.fileName());
		}
		content.setValueForKey("file_size", this.fileSize());
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.BoxCreateUploadSessionRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.BoxCreateUploadSessionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.BoxCreateUploadSessionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('BoxCreateUploadSessionRequest', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxCreateUploadSessionRequest" />*/

/*<BeginType Name="Infragistics.BoxPartUploadSessionRequest" />*/

$.ig.util.defType('BoxPartUploadSessionRequest', 'BoxRequestBase', {
	init: function (token, success, error) {
		$.ig.BoxRequestBase.prototype.init.call(this, 0, "Box_PartUploadSession", token, success, error);
	},
	_sessionId: null,
	/*<BeginProperty Name="System.String Infragistics.BoxPartUploadSessionRequest::SessionId()" />*/
	sessionId: function (value) {
		if (arguments.length === 1) {
			this._sessionId = value;
			return value;
		} else {
			return this._sessionId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxPartUploadSessionRequest::SessionId()" />*/
	,
	_rangeStart: 0,
	/*<BeginProperty Name="System.UInt64 Infragistics.BoxPartUploadSessionRequest::RangeStart()" />*/
	rangeStart: function (value) {
		if (arguments.length === 1) {
			this._rangeStart = value;
			return value;
		} else {
			return this._rangeStart;
		}
	}
	/*<EndProperty Name="System.UInt64 Infragistics.BoxPartUploadSessionRequest::RangeStart()" />*/
	,
	_rangeEnd: 0,
	/*<BeginProperty Name="System.UInt64 Infragistics.BoxPartUploadSessionRequest::RangeEnd()" />*/
	rangeEnd: function (value) {
		if (arguments.length === 1) {
			this._rangeEnd = value;
			return value;
		} else {
			return this._rangeEnd;
		}
	}
	/*<EndProperty Name="System.UInt64 Infragistics.BoxPartUploadSessionRequest::RangeEnd()" />*/
	,
	_totalSize: 0,
	/*<BeginProperty Name="System.UInt64 Infragistics.BoxPartUploadSessionRequest::TotalSize()" />*/
	totalSize: function (value) {
		if (arguments.length === 1) {
			this._totalSize = value;
			return value;
		} else {
			return this._totalSize;
		}
	}
	/*<EndProperty Name="System.UInt64 Infragistics.BoxPartUploadSessionRequest::TotalSize()" />*/
	,
	_data: null,
	/*<BeginProperty Name="System.Array Infragistics.BoxPartUploadSessionRequest::Data()" />*/
	data: function (value) {
		if (arguments.length === 1) {
			this._data = value;
			return value;
		} else {
			return this._data;
		}
	}
	/*<EndProperty Name="System.Array Infragistics.BoxPartUploadSessionRequest::Data()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxPartUploadSessionRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://upload.box.com/api/2.0/";
	}
	/*<EndMethod Name="System.String Infragistics.BoxPartUploadSessionRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxPartUploadSessionRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/upload_sessions/" + this.sessionId();
	}
	/*<EndMethod Name="System.String Infragistics.BoxPartUploadSessionRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxPartUploadSessionRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pUT;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxPartUploadSessionRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.BoxPartUploadSessionRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.none;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.BoxPartUploadSessionRequest::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.BoxPartUploadSessionRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var headers = new $.ig.Dictionary(0);
		var hashData = $.ig.NativeRequestUtility.prototype.utility().hashSHA1(this.data());
		var hashString = $.ig.NativeRequestUtility.prototype.utility().toBase64String(hashData);
		headers.item("Digest", "sha=" + hashString);
		headers.item("Content-Type", "application/octet-stream");
		headers.item("Content-Range", "bytes" + this.rangeStart().toString() + "-" + this.rangeEnd().toString() + "/" + this.totalSize().toString());
		return headers;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.BoxPartUploadSessionRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.Array Infragistics.BoxPartUploadSessionRequest::ResolvePostContentData()" />*/
	resolvePostContentData: function () {
		return this.data();
	}
	/*<EndMethod Name="System.Array Infragistics.BoxPartUploadSessionRequest::ResolvePostContentData()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.BoxPartUploadSessionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.BoxPartUploadSessionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('BoxPartUploadSessionRequest', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxPartUploadSessionRequest" />*/

/*<BeginType Name="Infragistics.BoxCommitUploadSessionRequest" />*/

$.ig.util.defType('BoxCommitUploadSessionRequest', 'BoxRequestBase', {
	init: function (token, success, error) {
		$.ig.BoxRequestBase.prototype.init.call(this, 0, "Box_CommitUploadSession", token, success, error);
	},
	_sessionId: null,
	/*<BeginProperty Name="System.String Infragistics.BoxCommitUploadSessionRequest::SessionId()" />*/
	sessionId: function (value) {
		if (arguments.length === 1) {
			this._sessionId = value;
			return value;
		} else {
			return this._sessionId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxCommitUploadSessionRequest::SessionId()" />*/
	,
	_localFilePath: null,
	/*<BeginProperty Name="System.String Infragistics.BoxCommitUploadSessionRequest::LocalFilePath()" />*/
	localFilePath: function (value) {
		if (arguments.length === 1) {
			this._localFilePath = value;
			return value;
		} else {
			return this._localFilePath;
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxCommitUploadSessionRequest::LocalFilePath()" />*/
	,
	_uploadedParts: null,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.BoxCommitUploadSessionRequest::UploadedParts()" />*/
	uploadedParts: function (value) {
		if (arguments.length === 1) {
			this._uploadedParts = value;
			return value;
		} else {
			return this._uploadedParts;
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.BoxCommitUploadSessionRequest::UploadedParts()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxCommitUploadSessionRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://upload.box.com/api/2.0/";
	}
	/*<EndMethod Name="System.String Infragistics.BoxCommitUploadSessionRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxCommitUploadSessionRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/upload_sessions/" + this.sessionId() + "/commit";
	}
	/*<EndMethod Name="System.String Infragistics.BoxCommitUploadSessionRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxCommitUploadSessionRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxCommitUploadSessionRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.BoxCommitUploadSessionRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.BoxCommitUploadSessionRequest::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.BoxCommitUploadSessionRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var headers = new $.ig.Dictionary(0);
		var fileSize = $.ig.NativeFileUtility.prototype.getFileSize1(this.localFilePath());
		var data = $.ig.NativeFileUtility.prototype.readFile1(this.localFilePath(), 0, fileSize);
		var hashData = $.ig.NativeRequestUtility.prototype.utility().hashSHA1(data);
		var hashString = $.ig.NativeRequestUtility.prototype.utility().toBase64String(hashData);
		headers.item("Digest", "sha=" + hashString);
		return headers;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.BoxCommitUploadSessionRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxCommitUploadSessionRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var uploadedParts = new $.ig.Array();
		for (var i = 0; i < this.uploadedParts().length; i++) {
			uploadedParts.add((this.uploadedParts()[i]).jSONObject());
		}
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("parts", uploadedParts);
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.BoxCommitUploadSessionRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.BoxCommitUploadSessionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var entries = response.resolveListForKey("entries");
		return new $.ig.BoxFile(1, $.ig.CPJSONObject.prototype.createFromJSONObject(entries[0]), this.tokenState().additionalIdentifier());
	}
	/*<EndMethod Name="System.Object Infragistics.BoxCommitUploadSessionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('BoxCommitUploadSessionRequest', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxCommitUploadSessionRequest" />*/

/*<BeginType Name="Infragistics.UploadedPart" />*/

$.ig.util.defType('UploadedPart', 'CPJSONObject', {
	init: function (partId, offset, size, sha1) {
		$.ig.CPJSONObject.prototype.init1.call(this, 1);
		this.setValueForKey("part_id", partId);
		this.setValueForKey("offset", offset);
		this.setValueForKey("size", size);
		this.setValueForKey("sha1", sha1);
	},
	/*<BeginProperty Name="System.String Infragistics.UploadedPart::PartId()" />*/
	partId: function () {
		return this.resolveStringForKey("part_id");
	}
	/*<EndProperty Name="System.String Infragistics.UploadedPart::PartId()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.UploadedPart::Offset()" />*/
	offset: function () {
		return this.resolveStringForKey("offset");
	}
	/*<EndProperty Name="System.String Infragistics.UploadedPart::Offset()" />*/
	,
	/*<BeginProperty Name="System.UInt64 Infragistics.UploadedPart::Size()" />*/
	size: function () {
		return this.resolveULongForKey("size");
	}
	/*<EndProperty Name="System.UInt64 Infragistics.UploadedPart::Size()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.UploadedPart::SHA1()" />*/
	sHA1: function () {
		return this.resolveStringForKey("sha1");
	}
	/*<EndProperty Name="System.String Infragistics.UploadedPart::SHA1()" />*/
	,
	$type: new $.ig.Type('UploadedPart', $.ig.CPJSONObject.prototype.$type)
}, true);

/*<EndType Name="Infragistics.UploadedPart" />*/

/*<BeginType Name="Infragistics.CloudFilePermissions" />*/

$.ig.util.defType('CloudFilePermissions', 'ActivityTrackingBackingStore', {
	__allMembers: null,
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.CloudFilePermissions.prototype.init1.call(this, 1, null);
	},
	init1: function (initNumber, json) {
		$.ig.ActivityTrackingBackingStore.prototype.init1.call(this, 1, json);
		this.__allMembers = new $.ig.Dictionary(0);
	},
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.CloudFilePermissions::CreateNewBackingStoreObject(Infragistics.CPJSONObject)" />*/
	createNewBackingStoreObject: function (json) {
		return new $.ig.CloudFilePermissions(1, json);
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.CloudFilePermissions::CreateNewBackingStoreObject(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.CloudFilePermissions::CreateNewBackingStoreObjectWithId(System.String)" />*/
	createNewBackingStoreObjectWithId: function (identifier) {
		var permissions = new $.ig.CloudFilePermissions(0);
		permissions.identifier(identifier);
		return permissions;
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.CloudFilePermissions::CreateNewBackingStoreObjectWithId(System.String)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFilePermissions::Share()" />*/
	share: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFilePermissions::Share()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFilePermissions::View()" />*/
	view: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFilePermissions::View()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFilePermissions::Edit()" />*/
	edit: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFilePermissions::Edit()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPDictionary Infragistics.CloudFilePermissions::GetMembers()" />*/
	getMembers: function () {
		return this.__allMembers;
	}
	/*<EndProperty Name="Infragistics.CPDictionary Infragistics.CloudFilePermissions::GetMembers()" />*/
	,
	/*<BeginMethod Name="Infragistics.CloudFileMemberPermissions Infragistics.CloudFilePermissions::ResolveMemberForEmail(System.String)" />*/
	resolveMemberForEmail: function (email) {
		if (email != null) {
			if ($.ig.NativeDictionaryUtility.prototype.containsKey(this.__allMembers, email.toLowerCase())) {
				return this.__allMembers.item(email.toLowerCase());
			}
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.CloudFileMemberPermissions Infragistics.CloudFilePermissions::ResolveMemberForEmail(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.CloudFileMemberPermissions Infragistics.CloudFilePermissions::ResolveMemberForUserId(System.String)" />*/
	resolveMemberForUserId: function (userId) {
		if (userId != null) {
			var keys = $.ig.NativeDictionaryUtility.prototype.getKeys(this.__allMembers);
			for (var i = 0; i < keys.length; i++) {
				var key = keys[i];
				if ($.ig.NativeDictionaryUtility.prototype.containsKey(this.__allMembers, key)) {
					var permission = this.__allMembers.item(key);
					if (permission.userId() == userId) {
						return permission;
					}
				}
			}
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.CloudFileMemberPermissions Infragistics.CloudFilePermissions::ResolveMemberForUserId(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.CloudFilePermissions::SetMemberPermissions(Infragistics.CloudFileMemberPermissions)" />*/
	setMemberPermissions: function (permissions) {
		var email = permissions.email().toLowerCase();
		if ($.ig.NativeDictionaryUtility.prototype.containsKey(this.__allMembers, email)) {
			permissions = this.__allMembers.item(email);
			permissions.updatePermissions(permissions.permissionKey(), permissions.isOwner(), permissions.isEditor(), permissions.isViewer());
		}
		this.__allMembers.item(email, permissions);
	}
	/*<EndMethod Name="System.Void Infragistics.CloudFilePermissions::SetMemberPermissions(Infragistics.CloudFileMemberPermissions)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.CloudFilePermissions::RemoveMember(System.String)" />*/
	removeMember: function (email) {
		if ($.ig.NativeDictionaryUtility.prototype.containsKey(this.__allMembers, email.toLowerCase())) {
			$.ig.NativeDictionaryUtility.prototype.removeValue(this.__allMembers, email.toLowerCase());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.CloudFilePermissions::RemoveMember(System.String)" />*/
	,
	_viewAccessLink: null,
	/*<BeginProperty Name="System.String Infragistics.CloudFilePermissions::ViewAccessLink()" />*/
	viewAccessLink: function () {
		return this._viewAccessLink;
	}
	/*<EndProperty Name="System.String Infragistics.CloudFilePermissions::ViewAccessLink()" />*/
	,
	_editAccessLink: null,
	/*<BeginProperty Name="System.String Infragistics.CloudFilePermissions::EditAccessLink()" />*/
	editAccessLink: function () {
		return this._editAccessLink;
	}
	/*<EndProperty Name="System.String Infragistics.CloudFilePermissions::EditAccessLink()" />*/
	,
	$type: new $.ig.Type('CloudFilePermissions', $.ig.ActivityTrackingBackingStore.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CloudFilePermissions" />*/

/*<BeginType Name="Infragistics.BoxFilePermissions" />*/

$.ig.util.defType('BoxFilePermissions', 'CloudFilePermissions', {
	__userId: null,
	__permissions: null,
	__owner: null,
	__email: null,
	__role: null,
	init: function (json, userId, email) {
		$.ig.CloudFilePermissions.prototype.init.call(this, 0);
		if (json != null) {
			var shared_link = json.resolveJSONForKey("shared_link");
			this.__permissions = shared_link.resolveJSONForKey("permissions");
			this.__owner = json.resolveJSONForKey("owned_by");
			this.__role = json.resolveStringForKey("role");
			this.__userId = userId;
			this.__email = email;
			if (this.__owner != null) {
				var login = this.__owner.resolveStringForKey("login");
				var name = this.__owner.resolveStringForKey("name");
				if (login != null && name != null) {
					this.setMemberInfo(login, name, this.__userId, $.ig.BoxFilePermissions.prototype._ownerKey, this.__userId);
				}
			}
		}
	},
	/*<BeginMethod Name="System.Void Infragistics.BoxFilePermissions::SetCollaborationMember(Infragistics.BoxFileCollaborationPermissions)" />*/
	setCollaborationMember: function (collaboration) {
		var collaboratorId = collaboration.resolveStringForKey("id");
		var role = collaboration.resolveStringForKeyPath((function () {
			var $ret = new $.ig.Array();
			$ret.add("role");
			return $ret;
		}()));
		if (role != null && collaboratorId != null) {
			var inviteeEmail = collaboration.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("invite_email");
				return $ret;
			}()));
			if (inviteeEmail != null) {
				this.setMemberInfo(inviteeEmail, inviteeEmail, collaboratorId, role, collaboratorId);
			} else {
				var userId = collaboration.userId();
				var name = collaboration.name();
				var login = collaboration.login();
				if (userId != null && name != null && login != null) {
					this.setMemberInfo(login, name, userId, role, collaboratorId);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.BoxFilePermissions::SetCollaborationMember(Infragistics.BoxFileCollaborationPermissions)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.BoxFilePermissions::SetMemberInfo(System.String, System.String, System.String, System.String, System.String)" />*/
	setMemberInfo: function (email, name, id, role, collaboratorId) {
		if (role == $.ig.BoxFilePermissions.prototype._ownerKey) {
			this.setMemberPermissions(new $.ig.CloudFileMemberPermissions(1, email, name, id, collaboratorId, true, true, true, false));
		} else if (role == $.ig.BoxFilePermissions.prototype._viewerKey) {
			this.setMemberPermissions(new $.ig.CloudFileMemberPermissions(1, email, name, id, collaboratorId, false, false, true, false));
		} else if (role == $.ig.BoxFilePermissions.prototype._editorKey) {
			this.setMemberPermissions(new $.ig.CloudFileMemberPermissions(1, email, name, id, collaboratorId, false, true, false, false));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.BoxFilePermissions::SetMemberInfo(System.String, System.String, System.String, System.String, System.String)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.BoxFilePermissions::View()" />*/
	view: function () {
		return (this.__role != null && this.__role == $.ig.BoxFilePermissions.prototype._viewerKey) || this.share() || (this.__permissions != null && this.__permissions.resolveBoolForKey("can_preview")) || this.hasRole($.ig.BoxFilePermissions.prototype._viewerKey);
	}
	/*<EndProperty Name="System.Boolean Infragistics.BoxFilePermissions::View()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.BoxFilePermissions::Edit()" />*/
	edit: function () {
		return (this.__role != null && this.__role == $.ig.BoxFilePermissions.prototype._editorKey) || this.share() || (this.__permissions != null && this.__permissions.resolveBoolForKey("can_download")) || this.hasRole($.ig.BoxFilePermissions.prototype._editorKey);
	}
	/*<EndProperty Name="System.Boolean Infragistics.BoxFilePermissions::Edit()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.BoxFilePermissions::Share()" />*/
	share: function () {
		return (this.__role != null && this.__role == $.ig.BoxFilePermissions.prototype._ownerKey) || (this.__owner != null && this.__owner.resolveStringForKey("id") == this.__userId) || this.hasRole($.ig.BoxFilePermissions.prototype._ownerKey);
	}
	/*<EndProperty Name="System.Boolean Infragistics.BoxFilePermissions::Share()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.BoxFilePermissions::HasRole(System.String)" />*/
	hasRole: function (role) {
		var permissions = this.resolveMemberForEmail(this.__email);
		if (this.foundRoleForPermission(role, permissions)) {
			return true;
		}
		permissions = this.resolveMemberForUserId(this.__userId);
		return this.foundRoleForPermission(role, permissions);
	}
	/*<EndMethod Name="System.Boolean Infragistics.BoxFilePermissions::HasRole(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.BoxFilePermissions::FoundRoleForPermission(System.String, Infragistics.CloudFileMemberPermissions)" />*/
	foundRoleForPermission: function (role, permissions) {
		if (permissions != null) {
			if (role == $.ig.BoxFilePermissions.prototype._ownerKey) {
				return permissions.isOwner();
			} else if (role == $.ig.BoxFilePermissions.prototype._viewerKey) {
				return permissions.isViewer();
			} else if (role == $.ig.BoxFilePermissions.prototype._editorKey) {
				return permissions.isEditor();
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.BoxFilePermissions::FoundRoleForPermission(System.String, Infragistics.CloudFileMemberPermissions)" />*/
	,
	$type: new $.ig.Type('BoxFilePermissions', $.ig.CloudFilePermissions.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxFilePermissions" />*/

/*<BeginType Name="Infragistics.BoxFileCollaborationPermissions" />*/

$.ig.util.defType('BoxFileCollaborationPermissions', 'CloudFilePermissions', {
	_idPath: null,
	_namePath: null,
	_loginPath: null,
	init: function (json) {
		this._idPath = (function () {
			var $ret = new $.ig.Array();
			$ret.add("accessible_by");
			$ret.add("id");
			return $ret;
		}());
		this._namePath = (function () {
			var $ret = new $.ig.Array();
			$ret.add("accessible_by");
			$ret.add("name");
			return $ret;
		}());
		this._loginPath = (function () {
			var $ret = new $.ig.Array();
			$ret.add("accessible_by");
			$ret.add("login");
			return $ret;
		}());
		$.ig.CloudFilePermissions.prototype.init1.call(this, 1, json);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.BoxFileCollaborationPermissions::Share()" />*/
	share: function () {
		return this.edit();
	}
	/*<EndProperty Name="System.Boolean Infragistics.BoxFileCollaborationPermissions::Share()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.BoxFileCollaborationPermissions::View()" />*/
	view: function () {
		return this.edit() || this.role() == "viewer" || this.role() == "previewer" || this.role() == "previewer uploader";
	}
	/*<EndProperty Name="System.Boolean Infragistics.BoxFileCollaborationPermissions::View()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.BoxFileCollaborationPermissions::Edit()" />*/
	edit: function () {
		return this.role() == "editor" || this.role() == "owner" || this.role() == "co-owner" || this.role() == "viewer uploader";
	}
	/*<EndProperty Name="System.Boolean Infragistics.BoxFileCollaborationPermissions::Edit()" />*/
	,
	__role: null,
	/*<BeginProperty Name="System.String Infragistics.BoxFileCollaborationPermissions::Role()" />*/
	role: function () {
		if (this.__role == null) {
			this.__role = this.resolveStringForKey("role");
		}
		return this.__role;
	}
	/*<EndProperty Name="System.String Infragistics.BoxFileCollaborationPermissions::Role()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.BoxFileCollaborationPermissions::UserId()" />*/
	userId: function () {
		return this.resolveStringForKeyPath(this._idPath);
	}
	/*<EndProperty Name="System.String Infragistics.BoxFileCollaborationPermissions::UserId()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.BoxFileCollaborationPermissions::Name()" />*/
	name: function () {
		return this.resolveStringForKeyPath(this._namePath);
	}
	/*<EndProperty Name="System.String Infragistics.BoxFileCollaborationPermissions::Name()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.BoxFileCollaborationPermissions::Login()" />*/
	login: function () {
		return this.resolveStringForKeyPath(this._loginPath);
	}
	/*<EndProperty Name="System.String Infragistics.BoxFileCollaborationPermissions::Login()" />*/
	,
	$type: new $.ig.Type('BoxFileCollaborationPermissions', $.ig.CloudFilePermissions.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxFileCollaborationPermissions" />*/

/*<BeginType Name="Infragistics.BoxGetUserCollaborationRequest" />*/

$.ig.util.defType('BoxGetUserCollaborationRequest', 'BoxRequestBase', {
	_itemId: null,
	_type: null,
	init: function (itemId, type, token, success, error) {
		$.ig.BoxRequestBase.prototype.init.call(this, 0, "GetUserCollaboration", token, success, error);
		this._itemId = itemId;
		this._type = type;
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxGetUserCollaborationRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxGetUserCollaborationRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxGetUserCollaborationRequest::ResolveAction()" />*/
	resolveAction: function () {
		return this._type + "s/" + this._itemId + "/collaborations";
	}
	/*<EndMethod Name="System.String Infragistics.BoxGetUserCollaborationRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.BoxGetUserCollaborationRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var collaborations = new $.ig.Array();
		var entries = response.resolveListForKey("entries");
		var count = entries.length;
		for (var i = 0; i < count; i++) {
			var collaborationJson = $.ig.CPJSONObject.prototype.createFromJSONObject(entries[i]);
			collaborations.add(new $.ig.BoxFileCollaborationPermissions(collaborationJson));
		}
		return collaborations;
	}
	/*<EndMethod Name="System.Object Infragistics.BoxGetUserCollaborationRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('BoxGetUserCollaborationRequest', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxGetUserCollaborationRequest" />*/

/*<BeginType Name="Infragistics.BoxDeleteUserCollaborationRequest" />*/

$.ig.util.defType('BoxDeleteUserCollaborationRequest', 'BoxRequestBase', {
	_collaborationId: null,
	init: function (collaborationId, token, success, error) {
		$.ig.BoxRequestBase.prototype.init.call(this, 0, "BoxDeleteUserCollaborationRequest", token, success, error);
		this._collaborationId = collaborationId;
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxDeleteUserCollaborationRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.dELETE;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxDeleteUserCollaborationRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxDeleteUserCollaborationRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "collaborations/" + this._collaborationId;
	}
	/*<EndMethod Name="System.String Infragistics.BoxDeleteUserCollaborationRequest::ResolveAction()" />*/
	,
	$type: new $.ig.Type('BoxDeleteUserCollaborationRequest', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxDeleteUserCollaborationRequest" />*/

/*<BeginType Name="Infragistics.BoxCreateCollaborationRequest" />*/

$.ig.util.defType('BoxCreateCollaborationRequest', 'BoxRequestBase', {
	_itemId: null,
	_type: null,
	_userId: null,
	init: function (itemId, type, userId, token, success, error) {
		$.ig.BoxRequestBase.prototype.init.call(this, 0, "CreateCollaboration", token, success, error);
		this._itemId = itemId;
		this._type = type;
		this._userId = userId;
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxCreateCollaborationRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.BoxCreateCollaborationRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxCreateCollaborationRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "collaborations";
	}
	/*<EndMethod Name="System.String Infragistics.BoxCreateCollaborationRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxCreateCollaborationRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		return "{\"accessible_by\": {\"type\": \"user\", \"id\": \"" + this._userId + "\"}, \"role\": \"editor\", \"item\": {\"type\": \"" + this._type + "\", \"id\": \"" + this._itemId + "\"}}";
	}
	/*<EndMethod Name="System.String Infragistics.BoxCreateCollaborationRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.BoxCreateCollaborationRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.BoxCreateCollaborationRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('BoxCreateCollaborationRequest', $.ig.BoxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxCreateCollaborationRequest" />*/

/*<BeginType Name="Infragistics.InfragisticsRequestsConfiguration" />*/

$.ig.util.defType('InfragisticsRequestsConfiguration', 'CPJSONObject', {
	init: function (initNumber, json) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.CPJSONObject.prototype.init.call(this, 0, json.jSONObject());
	},
	init1: function (initNumber) {
		$.ig.CPJSONObject.prototype.init1.call(this, 1);
	},
	/*<BeginProperty Name="System.String Infragistics.InfragisticsRequestsConfiguration::Key()" />*/
	key: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("key", value);
			return value;
		} else {
			return this.resolveStringForKey("key");
		}
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsRequestsConfiguration::Key()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsRequestsConfiguration::Title()" />*/
	title: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("title", value);
			return value;
		} else {
			return this.resolveStringForKey("title");
		}
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsRequestsConfiguration::Title()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsRequestsConfiguration::BaseServiceFabricURL()" />*/
	baseServiceFabricURL: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("baseServiceFabricURL", value);
			return value;
		} else {
			return this.resolveStringForKey("baseServiceFabricURL");
		}
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsRequestsConfiguration::BaseServiceFabricURL()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsRequestsConfiguration::BaseAuthenticationURL()" />*/
	baseAuthenticationURL: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("baseAuthenticationURL", value);
			return value;
		} else {
			return this.resolveStringForKey("baseAuthenticationURL");
		}
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsRequestsConfiguration::BaseAuthenticationURL()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsRequestsConfiguration::BaseAuthenticationAPIURL()" />*/
	baseAuthenticationAPIURL: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("baseAuthenticationAPIURL", value);
			return value;
		} else {
			return this.resolveStringForKey("baseAuthenticationAPIURL");
		}
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsRequestsConfiguration::BaseAuthenticationAPIURL()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsRequestsConfiguration::AuthenticationClientId()" />*/
	authenticationClientId: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("authenticationClientId", value);
			return value;
		} else {
			return this.resolveStringForKey("authenticationClientId");
		}
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsRequestsConfiguration::AuthenticationClientId()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsRequestsConfiguration::AuthenticationClientSecrect()" />*/
	authenticationClientSecrect: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("authenticationClientSecrect", value);
			return value;
		} else {
			return this.resolveStringForKey("authenticationClientSecrect");
		}
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsRequestsConfiguration::AuthenticationClientSecrect()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsRequestsConfiguration::NotificationsURL()" />*/
	notificationsURL: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("notificationsURL", value);
			return value;
		} else {
			return this.resolveStringForKey("notificationsURL");
		}
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsRequestsConfiguration::NotificationsURL()" />*/
	,
	_deprecatedBaseUrls: null,
	$type: new $.ig.Type('InfragisticsRequestsConfiguration', $.ig.CPJSONObject.prototype.$type)
}, true);

/*<EndType Name="Infragistics.InfragisticsRequestsConfiguration" />*/

/*<BeginType Name="Infragistics.InfragisticsAPIRequestBase" />*/

$.ig.util.defType('InfragisticsAPIRequestBase', 'SessionRequestBase', {
	init: function (initNumber, key, success, error) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.SessionRequestBase.prototype.init1.call(this, 1, key, success, error);
	},
	init1: function (initNumber, key, success, error, progress, downloaded) {
		$.ig.SessionRequestBase.prototype.init2.call(this, 2, key, success, error, progress, downloaded);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.InfragisticsAPIRequestBase::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.InfragisticsAPIRequestBase::ResolveHTTPMethod()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsAPIRequestBase::BaseServiceFabricURL()" />*/
	baseServiceFabricURL: function () {
		return window.location.protocol + '//' + window.location.host;
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsAPIRequestBase::BaseServiceFabricURL()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsAPIRequestBase::BaseInfragisticsAPIURL()" />*/
	baseInfragisticsAPIURL: function () {
		return window.IGAppBaseURL == undefined ? (window.location.protocol + '//' + window.location.host + (window.IGAppBase == undefined ? '/' : window.IGAppBase)) : window.IGAppBaseURL;
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsAPIRequestBase::BaseInfragisticsAPIURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.InfragisticsAPIRequestBase::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return $.ig.InfragisticsAPIRequestBase.prototype.baseInfragisticsAPIURL();
	}
	/*<EndMethod Name="System.String Infragistics.InfragisticsAPIRequestBase::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.InfragisticsAPIRequestBase::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		if (error.errorCode() == 401) {
			if (error.nativeError() != null) {
				var nativeError = error.nativeError();
				if (nativeError.item("locationHeader") != null && (nativeError.item("locationHeader")).length > 0) {
					$.ig.EMUtility.prototype.signOut();
					window.location = window.location.protocol + '//' + window.location.host + '/Login?redirect=' + encodeURIComponent(window.location.pathname) ;
					return;
				}
			}
		}
		$.ig.SessionRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.InfragisticsAPIRequestBase::Error(Infragistics.CloudError)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.InfragisticsAPIRequestBase::CreateBuilder()" />*/
	createBuilder: function () {
		return new $.ig.HttpRequestBuilder(1).setURL($.ig.InfragisticsAPIRequestBase.prototype.baseInfragisticsAPIURL());
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.InfragisticsAPIRequestBase::CreateBuilder()" />*/
	,
	$type: new $.ig.Type('InfragisticsAPIRequestBase', $.ig.SessionRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.InfragisticsAPIRequestBase" />*/

/*<BeginType Name="Infragistics.CredentialsRequestBase" />*/

$.ig.util.defType('CredentialsRequestBase', 'InfragisticsAPIRequestBase', {
	init: function (key, success, error) {
		$.ig.InfragisticsAPIRequestBase.prototype.init.call(this, 0, key, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.CredentialsRequestBase::ResolveAction()" />*/
	resolveAction: function () {
		return "Credentials/";
	}
	/*<EndMethod Name="System.String Infragistics.CredentialsRequestBase::ResolveAction()" />*/
	,
	$type: new $.ig.Type('CredentialsRequestBase', $.ig.InfragisticsAPIRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CredentialsRequestBase" />*/

/*<BeginType Name="Infragistics.CredentialsOAuthURLRequest" />*/

$.ig.util.defType('CredentialsOAuthURLRequest', 'CredentialsRequestBase', {
	__teamId: null,
	__datasourceId: null,
	__redirectUrl: null,
	__subsiteUrl: null,
	__providerType: 0,
	init: function (teamId, datasourceId, cloudProviderType, redirectUrl, subsiteUrl, success, error) {
		$.ig.CredentialsRequestBase.prototype.init.call(this, "OAuthUrl", success, error);
		this.__teamId = teamId;
		this.__datasourceId = datasourceId;
		this.__providerType = cloudProviderType;
		this.__redirectUrl = redirectUrl;
		this.__subsiteUrl = subsiteUrl;
	},
	/*<BeginMethod Name="System.String Infragistics.CredentialsOAuthURLRequest::ResolveAction()" />*/
	resolveAction: function () {
		return $.ig.CredentialsRequestBase.prototype.resolveAction.call(this) + "oauth/url/";
	}
	/*<EndMethod Name="System.String Infragistics.CredentialsOAuthURLRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.CredentialsOAuthURLRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.CredentialsOAuthURLRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.CredentialsOAuthURLRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.sTRING;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.CredentialsOAuthURLRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CredentialsOAuthURLRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setValueForKey("teamId", this.__teamId);
		obj.setValueForKey("authCompleteRedirect", this.__redirectUrl);
		obj.setValueForKey("datasourceId", this.__datasourceId);
		obj.setValueForKey("providerType", this.__providerType);
		obj.setValueForKey("subsiteUrl", this.__subsiteUrl);
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.CredentialsOAuthURLRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.CredentialsOAuthURLRequest::ProcessStringResponse(System.String)" />*/
	processStringResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.CredentialsOAuthURLRequest::ProcessStringResponse(System.String)" />*/
	,
	$type: new $.ig.Type('CredentialsOAuthURLRequest', $.ig.CredentialsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CredentialsOAuthURLRequest" />*/

/*<BeginType Name="Infragistics.CredentialsGetAccountsRequest" />*/

$.ig.util.defType('CredentialsGetAccountsRequest', 'CredentialsRequestBase', {
	init: function (success, error) {
		$.ig.CredentialsRequestBase.prototype.init.call(this, "GetAccounts", success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.CredentialsGetAccountsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return $.ig.CredentialsRequestBase.prototype.resolveAction.call(this) + "accounts";
	}
	/*<EndMethod Name="System.String Infragistics.CredentialsGetAccountsRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.CredentialsGetAccountsRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.CredentialsGetAccountsRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.CredentialsGetAccountsRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.CredentialsGetAccountsRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.CredentialsGetAccountsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var files = new $.ig.Array();
		var keys = response.getKeys();
		for (var i = 0; i < keys.length; i++) {
			var key = keys[i];
			files.add(new $.ig.GenericAccountMetadata(1, response.resolveJSONForKey(key)));
		}
		return files;
	}
	/*<EndMethod Name="System.Object Infragistics.CredentialsGetAccountsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('CredentialsGetAccountsRequest', $.ig.CredentialsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CredentialsGetAccountsRequest" />*/

/*<BeginType Name="Infragistics.CredentialsSaveAccountRequest" />*/

$.ig.util.defType('CredentialsSaveAccountRequest', 'CredentialsRequestBase', {
	__accountMetadata: null,
	init: function (accountMetadata, success, error) {
		$.ig.CredentialsRequestBase.prototype.init.call(this, "SaveAccount", success, error);
		this.__accountMetadata = accountMetadata;
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.CredentialsSaveAccountRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pUT;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.CredentialsSaveAccountRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CredentialsSaveAccountRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setValueForKey("accountId", this.__accountMetadata.id());
		obj.setValueForKey("accountName", this.__accountMetadata.name());
		obj.setValueForKey("domain", this.__accountMetadata.domain());
		obj.setValueForKey("userName", this.__accountMetadata.username());
		obj.setValueForKey("password", this.__accountMetadata.password());
		obj.setValueForKey("accountType", $.ig.AccountType.prototype.getBox(this.__accountMetadata.accountType()));
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.CredentialsSaveAccountRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.CredentialsSaveAccountRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var id = response == null ? null : response.resolveStringForKey("accountId");
		if ($.ig.CPStringUtility.prototype.isNullOrEmpty(id)) {
			return this.__accountMetadata.id();
		}
		return id;
	}
	/*<EndMethod Name="System.Object Infragistics.CredentialsSaveAccountRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('CredentialsSaveAccountRequest', $.ig.CredentialsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CredentialsSaveAccountRequest" />*/

/*<BeginType Name="Infragistics.CredentialsDeleteAccountRequest" />*/

$.ig.util.defType('CredentialsDeleteAccountRequest', 'CredentialsRequestBase', {
	__accountMetadata: null,
	init: function (accountMetadata, success, error) {
		$.ig.CredentialsRequestBase.prototype.init.call(this, "DeleteAccount", success, error);
		this.__accountMetadata = accountMetadata;
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.CredentialsDeleteAccountRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.dELETE;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.CredentialsDeleteAccountRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CredentialsDeleteAccountRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setValueForKey("accountId", this.__accountMetadata.id());
		obj.setValueForKey("accountName", this.__accountMetadata.name());
		obj.setValueForKey("domain", this.__accountMetadata.domain());
		obj.setValueForKey("userName", this.__accountMetadata.username());
		obj.setValueForKey("password", this.__accountMetadata.password());
		obj.setValueForKey("accountType", $.ig.AccountType.prototype.getBox(this.__accountMetadata.accountType()));
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.CredentialsDeleteAccountRequest::ResolvePostContent()" />*/
	,
	$type: new $.ig.Type('CredentialsDeleteAccountRequest', $.ig.CredentialsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CredentialsDeleteAccountRequest" />*/

/*<BeginType Name="Infragistics.CredentialsDeleteAssociationRequest" />*/

$.ig.util.defType('CredentialsDeleteAssociationRequest', 'CredentialsRequestBase', {
	__datasourceId: null,
	init: function (datasourceId, success, error) {
		$.ig.CredentialsRequestBase.prototype.init.call(this, "DeleteAssociation", success, error);
		this.__datasourceId = datasourceId;
	},
	/*<BeginMethod Name="System.String Infragistics.CredentialsDeleteAssociationRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "Credentials/deleteassociation";
	}
	/*<EndMethod Name="System.String Infragistics.CredentialsDeleteAssociationRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.CredentialsDeleteAssociationRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.dELETE;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.CredentialsDeleteAssociationRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CredentialsDeleteAssociationRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setValueForKey("resourceId", this.__datasourceId);
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.CredentialsDeleteAssociationRequest::ResolvePostContent()" />*/
	,
	$type: new $.ig.Type('CredentialsDeleteAssociationRequest', $.ig.CredentialsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CredentialsDeleteAssociationRequest" />*/

/*<BeginType Name="Infragistics.EditorVerifyAccountRequest" />*/

$.ig.util.defType('EditorVerifyAccountRequest', 'CredentialsRequestBase', {
	__dataSource: null,
	__accountId: null,
	__accountUsername: null,
	__accountDomain: null,
	__accountPassword: null,
	__accountType: 0,
	__account: null,
	init: function (dataSourceJson, accountId, accountType, accountDomain, accountUsername, accountPassword, account, success, error) {
		$.ig.CredentialsRequestBase.prototype.init.call(this, "EditorVerifyAccount", success, error);
		this.__dataSource = dataSourceJson;
		this.__accountId = accountId;
		this.__accountType = accountType;
		this.__accountUsername = accountUsername;
		this.__accountPassword = accountPassword;
		this.__accountDomain = accountDomain;
		this.__account = account;
	},
	/*<BeginMethod Name="System.String Infragistics.EditorVerifyAccountRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "dashboard/editor/verifycredentials";
	}
	/*<EndMethod Name="System.String Infragistics.EditorVerifyAccountRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.EditorVerifyAccountRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.EditorVerifyAccountRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.EditorVerifyAccountRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setJSONForKey("dataSource", this.__dataSource);
		obj.setValueForKey("accountId", this.__accountId);
		obj.setValueForKey("accountUsername", this.__accountUsername);
		obj.setValueForKey("accountDomain", this.__accountDomain);
		obj.setValueForKey("accountPassword", this.__accountPassword);
		obj.setValueForKey("accountType", this.__accountType);
		if (this.__account != null) {
			obj.setJSONForKey("account", this.__account);
		}
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.EditorVerifyAccountRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.EditorVerifyAccountRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.EditorVerifyAccountRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.EditorVerifyAccountRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return new $.ig.VerifyCredentialsResponse(1, response);
	}
	/*<EndMethod Name="System.Object Infragistics.EditorVerifyAccountRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('EditorVerifyAccountRequest', $.ig.CredentialsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.EditorVerifyAccountRequest" />*/

/*<BeginType Name="Infragistics.VerifyConnectionByDataSourceRequest" />*/

$.ig.util.defType('VerifyConnectionByDataSourceRequest', 'CredentialsRequestBase', {
	__dataSource: null,
	init: function (dataSourceJson, success, error) {
		$.ig.CredentialsRequestBase.prototype.init.call(this, "VerifyConnectionByDataSource", success, error);
		this.__dataSource = dataSourceJson;
	},
	/*<BeginMethod Name="System.String Infragistics.VerifyConnectionByDataSourceRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "dashboard/editor/datasource/verifycredentials";
	}
	/*<EndMethod Name="System.String Infragistics.VerifyConnectionByDataSourceRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.VerifyConnectionByDataSourceRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.VerifyConnectionByDataSourceRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.VerifyConnectionByDataSourceRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setJSONForKey("dataSource", this.__dataSource);
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.VerifyConnectionByDataSourceRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.VerifyConnectionByDataSourceRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.VerifyConnectionByDataSourceRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.VerifyConnectionByDataSourceRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return new $.ig.VerifyCredentialsResponse(1, response);
	}
	/*<EndMethod Name="System.Object Infragistics.VerifyConnectionByDataSourceRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('VerifyConnectionByDataSourceRequest', $.ig.CredentialsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.VerifyConnectionByDataSourceRequest" />*/

/*<BeginType Name="Infragistics.GetAccountMetadataForDataSourceRequest" />*/

$.ig.util.defType('GetAccountMetadataForDataSourceRequest', 'CredentialsRequestBase', {
	__dataSource: null,
	init: function (dataSourceJson, success, error) {
		$.ig.CredentialsRequestBase.prototype.init.call(this, "GetAccountMetadataForDataSource", success, error);
		this.__dataSource = dataSourceJson;
	},
	/*<BeginMethod Name="System.String Infragistics.GetAccountMetadataForDataSourceRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "dashboard/editor/accountmetadata";
	}
	/*<EndMethod Name="System.String Infragistics.GetAccountMetadataForDataSourceRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GetAccountMetadataForDataSourceRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GetAccountMetadataForDataSourceRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GetAccountMetadataForDataSourceRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setJSONForKey("dataSource", this.__dataSource);
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.GetAccountMetadataForDataSourceRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.GetAccountMetadataForDataSourceRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.GetAccountMetadataForDataSourceRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GetAccountMetadataForDataSourceRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var id = response.resolveStringForKey("accountId");
		if (id == null) {
			return null;
		}
		var account = new $.ig.GenericAccountMetadata(0, id, response.resolveStringForKey("accountName"), response.resolveStringForKey("userName"), response.resolveStringForKey("domain"));
		return account;
	}
	/*<EndMethod Name="System.Object Infragistics.GetAccountMetadataForDataSourceRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('GetAccountMetadataForDataSourceRequest', $.ig.CredentialsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GetAccountMetadataForDataSourceRequest" />*/

/*<BeginType Name="Infragistics.CredentialsAssociateRequest" />*/

$.ig.util.defType('CredentialsAssociateRequest', 'CredentialsRequestBase', {
	__datasourceId: null,
	__accountId: null,
	init: function (datasourceId, accountId, success, error) {
		$.ig.CredentialsRequestBase.prototype.init.call(this, "AssociateAccount", success, error);
		this.__datasourceId = datasourceId;
		this.__accountId = accountId;
	},
	/*<BeginMethod Name="System.String Infragistics.CredentialsAssociateRequest::ResolveAction()" />*/
	resolveAction: function () {
		return $.ig.CredentialsRequestBase.prototype.resolveAction.call(this) + "associate";
	}
	/*<EndMethod Name="System.String Infragistics.CredentialsAssociateRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.CredentialsAssociateRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.CredentialsAssociateRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.CredentialsAssociateRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.sTRING;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.CredentialsAssociateRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CredentialsAssociateRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setValueForKey("resourceId", this.__datasourceId);
		obj.setValueForKey("accountId", this.__accountId);
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.CredentialsAssociateRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.CredentialsAssociateRequest::ProcessStringResponse(System.String)" />*/
	processStringResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.CredentialsAssociateRequest::ProcessStringResponse(System.String)" />*/
	,
	$type: new $.ig.Type('CredentialsAssociateRequest', $.ig.CredentialsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CredentialsAssociateRequest" />*/

/*<BeginType Name="Infragistics.AccountMetadata" />*/

$.ig.util.defType('AccountMetadata', 'Object', {
	init: function (initNumber, id, name) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.Object.prototype.init.call(this);
		this.id(id);
		this.name(name);
	},
	init1: function (initNumber, json) {
		$.ig.Object.prototype.init.call(this);
		this.id(json.resolveStringForKey("id"));
		this.name(json.resolveStringForKey("name"));
	},
	_id: null,
	/*<BeginProperty Name="System.String Infragistics.AccountMetadata::Id()" />*/
	id: function (value) {
		if (arguments.length === 1) {
			this._id = value;
			return value;
		} else {
			return this._id;
		}
	}
	/*<EndProperty Name="System.String Infragistics.AccountMetadata::Id()" />*/
	,
	_name: null,
	/*<BeginProperty Name="System.String Infragistics.AccountMetadata::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			this._name = value;
			return value;
		} else {
			return this._name;
		}
	}
	/*<EndProperty Name="System.String Infragistics.AccountMetadata::Name()" />*/
	,
	/*<BeginProperty Name="Infragistics.AccountType Infragistics.AccountMetadata::AccountType()" />*/
	accountType: function () {
	}
	/*<EndProperty Name="Infragistics.AccountType Infragistics.AccountMetadata::AccountType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.AccountMetadata::GetAccountDescription()" />*/
	getAccountDescription: function () {
	}
	/*<EndMethod Name="System.String Infragistics.AccountMetadata::GetAccountDescription()" />*/
	,
	$type: new $.ig.Type('AccountMetadata', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.AccountMetadata" />*/

/*<BeginType Name="Infragistics.GenericAccountMetadata" />*/

$.ig.util.defType('GenericAccountMetadata', 'AccountMetadata', {
	init: function (initNumber, id, name, username, domain) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.AccountMetadata.prototype.init.call(this, 0, id, name);
		this.username(username);
		this.domain(domain);
	},
	init1: function (initNumber, json) {
		$.ig.AccountMetadata.prototype.init1.call(this, 1, json);
		this.username(json.resolveStringForKey("userName"));
		this.domain(json.resolveStringForKey("domain"));
	},
	/*<BeginProperty Name="Infragistics.AccountType Infragistics.GenericAccountMetadata::AccountType()" />*/
	accountType: function () {
		return $.ig.AccountType.prototype.generic;
	}
	/*<EndProperty Name="Infragistics.AccountType Infragistics.GenericAccountMetadata::AccountType()" />*/
	,
	_username: null,
	/*<BeginProperty Name="System.String Infragistics.GenericAccountMetadata::Username()" />*/
	username: function (value) {
		if (arguments.length === 1) {
			this._username = value;
			return value;
		} else {
			return this._username;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GenericAccountMetadata::Username()" />*/
	,
	_domain: null,
	/*<BeginProperty Name="System.String Infragistics.GenericAccountMetadata::Domain()" />*/
	domain: function (value) {
		if (arguments.length === 1) {
			this._domain = value;
			return value;
		} else {
			return this._domain;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GenericAccountMetadata::Domain()" />*/
	,
	_password: null,
	/*<BeginProperty Name="System.String Infragistics.GenericAccountMetadata::Password()" />*/
	password: function (value) {
		if (arguments.length === 1) {
			this._password = value;
			return value;
		} else {
			return this._password;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GenericAccountMetadata::Password()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GenericAccountMetadata::GetAccountDescription()" />*/
	getAccountDescription: function () {
		return this.domain() == null || this.domain() == "" ? this.username() : this.domain() + "\\" + this.username();
	}
	/*<EndMethod Name="System.String Infragistics.GenericAccountMetadata::GetAccountDescription()" />*/
	,
	$type: new $.ig.Type('GenericAccountMetadata', $.ig.AccountMetadata.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GenericAccountMetadata" />*/

/*<BeginType Name="Infragistics.VerifyCredentialsResponse" />*/

$.ig.util.defType('VerifyCredentialsResponse', 'Object', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.Object.prototype.init.call(this);
	},
	init1: function (initNumber, json) {
		$.ig.Object.prototype.init.call(this);
		this.verified(json.resolveBoolForKey("verified"));
		this.errorMessage(json.resolveStringForKey("errorMessage"));
		this.errorCode(json.resolveIntegerForKey("errorCode"));
	},
	_verified: false,
	/*<BeginProperty Name="System.Boolean Infragistics.VerifyCredentialsResponse::Verified()" />*/
	verified: function (value) {
		if (arguments.length === 1) {
			this._verified = value;
			return value;
		} else {
			return this._verified;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.VerifyCredentialsResponse::Verified()" />*/
	,
	_errorMessage: null,
	/*<BeginProperty Name="System.String Infragistics.VerifyCredentialsResponse::ErrorMessage()" />*/
	errorMessage: function (value) {
		if (arguments.length === 1) {
			this._errorMessage = value;
			return value;
		} else {
			return this._errorMessage;
		}
	}
	/*<EndProperty Name="System.String Infragistics.VerifyCredentialsResponse::ErrorMessage()" />*/
	,
	_errorCode: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.VerifyCredentialsResponse::ErrorCode()" />*/
	errorCode: function (value) {
		if (arguments.length === 1) {
			this._errorCode = value;
			return value;
		} else {
			return this._errorCode;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.VerifyCredentialsResponse::ErrorCode()" />*/
	,
	/*<BeginMethod Name="System.JSDictionary Infragistics.VerifyCredentialsResponse::ToJson()" />*/
	toJson: function () {
		var json = {};
		json["verified"] = this.verified();
		if (this.errorMessage() != null) {
			json["errorMessage"] = this.errorMessage();
		}
		if (this.errorCode() != 0) {
			json["errorCode"] = this.errorCode();
		}
		return json;
	}
	/*<EndMethod Name="System.JSDictionary Infragistics.VerifyCredentialsResponse::ToJson()" />*/
	,
	$type: new $.ig.Type('VerifyCredentialsResponse', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.VerifyCredentialsResponse" />*/

/*<BeginType Name="Infragistics.CloudAccountUserInfo" />*/

$.ig.util.defType('CloudAccountUserInfo', 'BackingStoreObjectBase', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.BackingStoreObjectBase.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json) {
		$.ig.BackingStoreObjectBase.prototype.init1.call(this, 1, json);
	},
	/*<BeginMethod Name="System.String Infragistics.CloudAccountUserInfo::GetEmail()" />*/
	getEmail: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.CloudAccountUserInfo::GetEmail()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudAccountUserInfo::GetDisplayName()" />*/
	getDisplayName: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.CloudAccountUserInfo::GetDisplayName()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudAccountUserInfo::GetFirstName()" />*/
	getFirstName: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.CloudAccountUserInfo::GetFirstName()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudAccountUserInfo::GetUserId()" />*/
	getUserId: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.CloudAccountUserInfo::GetUserId()" />*/
	,
	$type: new $.ig.Type('CloudAccountUserInfo', $.ig.BackingStoreObjectBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CloudAccountUserInfo" />*/

/*<BeginType Name="Infragistics.DataDotWorldUserInfo" />*/

$.ig.util.defType('DataDotWorldUserInfo', 'CloudAccountUserInfo', {
	init: function (json) {
		$.ig.CloudAccountUserInfo.prototype.init1.call(this, 1, json.cloneJSON());
	},
	/*<BeginMethod Name="System.String Infragistics.DataDotWorldUserInfo::GetDisplayName()" />*/
	getDisplayName: function () {
		return this.resolveStringForKey("displayName");
	}
	/*<EndMethod Name="System.String Infragistics.DataDotWorldUserInfo::GetDisplayName()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DataDotWorldUserInfo::GetUserId()" />*/
	getUserId: function () {
		return this.resolveStringForKey("id");
	}
	/*<EndMethod Name="System.String Infragistics.DataDotWorldUserInfo::GetUserId()" />*/
	,
	$type: new $.ig.Type('DataDotWorldUserInfo', $.ig.CloudAccountUserInfo.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DataDotWorldUserInfo" />*/

/*<BeginType Name="Infragistics.DropboxOAuthProvider" />*/

$.ig.util.defType('DropboxOAuthProvider', 'OAuthProvider', {
	init: function (keys) {
		$.ig.OAuthProvider.prototype.init.call(this, keys);
	},
	/*<BeginMethod Name="System.String Infragistics.DropboxOAuthProvider::GetAuthURL()" />*/
	getAuthURL: function () {
		return "https://www.dropbox.com/oauth2/";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxOAuthProvider::GetAuthURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxOAuthProvider::GetTokenURL()" />*/
	getTokenURL: function () {
		return "https://api.dropbox.com/oauth2/";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxOAuthProvider::GetTokenURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxOAuthProvider::GetLogoutUrl()" />*/
	getLogoutUrl: function () {
		return "https://www.dropbox.com/logout";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxOAuthProvider::GetLogoutUrl()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxOAuthProvider::AddAdditionalAccessCodeParams(Infragistics.CPDictionary)" />*/
	addAdditionalAccessCodeParams: function (json) {
		json.item("force_reauthentication", "true");
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxOAuthProvider::AddAdditionalAccessCodeParams(Infragistics.CPDictionary)" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.DropboxOAuthProvider::CloudProvider()" />*/
	cloudProvider: function () {
		return $.ig.CloudProviderType.prototype.dropbox;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.DropboxOAuthProvider::CloudProvider()" />*/
	,
	$type: new $.ig.Type('DropboxOAuthProvider', $.ig.OAuthProvider.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxOAuthProvider" />*/

/*<BeginType Name="Infragistics.DropboxRequestBase" />*/

$.ig.util.defType('DropboxRequestBase', 'OAuthRequestBase', {
	init: function (initNumber, key, token, success, error) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.OAuthRequestBase.prototype.init.call(this, 0, key, token, success, error);
	},
	init1: function (initNumber, key, token, success, error, progress, downloaded) {
		$.ig.OAuthRequestBase.prototype.init1.call(this, 1, key, token, success, error, progress, downloaded);
	},
	/*<BeginMethod Name="System.String Infragistics.DropboxRequestBase::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://api.dropboxapi.com/2/";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxRequestBase::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.DropboxRequestBase::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.DropboxRequestBase::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="Infragistics.OAuthProvider Infragistics.DropboxRequestBase::ResolveProvider(Infragistics.TokenState)" />*/
	resolveProvider: function (token) {
		return new $.ig.DropboxOAuthProvider(token.providerKeys());
	}
	/*<EndMethod Name="Infragistics.OAuthProvider Infragistics.DropboxRequestBase::ResolveProvider(Infragistics.TokenState)" />*/
	,
	$type: new $.ig.Type('DropboxRequestBase', $.ig.OAuthRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxRequestBase" />*/

/*<BeginType Name="Infragistics.DropboxGetFilesRequest" />*/

$.ig.util.defType('DropboxGetFilesRequest', 'DropboxRequestBase', {
	init: function (token, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "DropBox_GetFiles", token, success, error);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxGetFilesRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxGetFilesRequest::Path()" />*/
	,
	_foldersOnly: false,
	/*<BeginProperty Name="System.Boolean Infragistics.DropboxGetFilesRequest::FoldersOnly()" />*/
	foldersOnly: function (value) {
		if (arguments.length === 1) {
			this._foldersOnly = value;
			return value;
		} else {
			return this._foldersOnly;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.DropboxGetFilesRequest::FoldersOnly()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxGetFilesRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/list_folder";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxGetFilesRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxGetFilesRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxGetFilesRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxGetFilesRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("path", (this.path() == null) ? "" : this.path());
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.DropboxGetFilesRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxGetFilesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var files = new $.ig.Array();
		var entries = response.resolveListForKey("entries");
		var count = entries.length;
		for (var i = 0; i < count; i++) {
			var file = new $.ig.DropboxFile(1, $.ig.CPJSONObject.prototype.createFromJSONObject(entries[i]), this.tokenState().additionalIdentifier());
			if (this.foldersOnly() && file.isFolder() || !this.foldersOnly()) {
				files.add(file);
			}
		}
		return files;
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxGetFilesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('DropboxGetFilesRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxGetFilesRequest" />*/

/*<BeginType Name="Infragistics.DropboxFileRequest" />*/

$.ig.util.defType('DropboxFileRequest', 'DropboxRequestBase', {
	_filePath: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxFileRequest::FilePath()" />*/
	filePath: function (value) {
		if (arguments.length === 1) {
			this._filePath = value;
			return value;
		} else {
			return this._filePath;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFileRequest::FilePath()" />*/
	,
	_destinationPath: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxFileRequest::DestinationPath()" />*/
	destinationPath: function (value) {
		if (arguments.length === 1) {
			this._destinationPath = value;
			return value;
		} else {
			return this._destinationPath;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFileRequest::DestinationPath()" />*/
	,
	init: function (key, token, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, key, token, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.DropboxFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/copy_v2";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxFileRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxFileRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxFileRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxFileRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("from_path", this.filePath());
		content.setValueForKey("to_path", this.destinationPath());
		content.setValueForKey("allow_shared_folder", true);
		content.setValueForKey("autorename", false);
		content.setValueForKey("allow_ownership_transfer", false);
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.DropboxFileRequest::ResolvePostContent()" />*/
	,
	$type: new $.ig.Type('DropboxFileRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxFileRequest" />*/

/*<BeginType Name="Infragistics.DropboxCopyFileRequest" />*/

$.ig.util.defType('DropboxCopyFileRequest', 'DropboxFileRequest', {
	init: function (token, success, error) {
		$.ig.DropboxFileRequest.prototype.init.call(this, "DropBox_CopyFile", token, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.DropboxCopyFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/copy_v2";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxCopyFileRequest::ResolveAction()" />*/
	,
	$type: new $.ig.Type('DropboxCopyFileRequest', $.ig.DropboxFileRequest.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxCopyFileRequest" />*/

/*<BeginType Name="Infragistics.DropboxMoveFileRequest" />*/

$.ig.util.defType('DropboxMoveFileRequest', 'DropboxFileRequest', {
	init: function (token, success, error) {
		$.ig.DropboxFileRequest.prototype.init.call(this, "DropBox_CopyFile", token, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.DropboxMoveFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/move_v2";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxMoveFileRequest::ResolveAction()" />*/
	,
	$type: new $.ig.Type('DropboxMoveFileRequest', $.ig.DropboxFileRequest.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxMoveFileRequest" />*/

/*<BeginType Name="Infragistics.DropboxCreateSharedLinkRequest" />*/

$.ig.util.defType('DropboxCreateSharedLinkRequest', 'DropboxRequestBase', {
	init: function (token, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "DropBox_CreateSharedLink", token, success, error);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxCreateSharedLinkRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxCreateSharedLinkRequest::Path()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxCreateSharedLinkRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://api.dropboxapi.com/2/";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxCreateSharedLinkRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxCreateSharedLinkRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "sharing/create_shared_link_with_settings";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxCreateSharedLinkRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxCreateSharedLinkRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxCreateSharedLinkRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxCreateSharedLinkRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("path", this.path());
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.DropboxCreateSharedLinkRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxCreateSharedLinkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return (new $.ig.DropboxFile(1, response, this.tokenState().additionalIdentifier()));
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxCreateSharedLinkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxCreateSharedLinkRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.DropboxRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxCreateSharedLinkRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('DropboxCreateSharedLinkRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxCreateSharedLinkRequest" />*/

/*<BeginType Name="Infragistics.DropboxGetSharedLinksRequest" />*/

$.ig.util.defType('DropboxGetSharedLinksRequest', 'DropboxRequestBase', {
	init: function (token, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "DropBox_GetSharedLinks", token, success, error);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxGetSharedLinksRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxGetSharedLinksRequest::Path()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxGetSharedLinksRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://api.dropboxapi.com/2/";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxGetSharedLinksRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxGetSharedLinksRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "sharing/list_shared_links";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxGetSharedLinksRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxGetSharedLinksRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxGetSharedLinksRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxGetSharedLinksRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("path", this.path());
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.DropboxGetSharedLinksRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxGetSharedLinksRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return (new $.ig.DropboxFile(1, response, this.tokenState().additionalIdentifier()));
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxGetSharedLinksRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxGetSharedLinksRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.DropboxRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxGetSharedLinksRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('DropboxGetSharedLinksRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxGetSharedLinksRequest" />*/

/*<BeginType Name="Infragistics.DropboxCreateFolderRequest" />*/

$.ig.util.defType('DropboxCreateFolderRequest', 'DropboxRequestBase', {
	init: function (token, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "DropBox_CreateFolder", token, success, error);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxCreateFolderRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxCreateFolderRequest::Path()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxCreateFolderRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/create_folder";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxCreateFolderRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxCreateFolderRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxCreateFolderRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxCreateFolderRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("path", this.path());
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.DropboxCreateFolderRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxCreateFolderRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return (new $.ig.DropboxFile(1, response, this.tokenState().additionalIdentifier()));
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxCreateFolderRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxCreateFolderRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.DropboxRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxCreateFolderRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('DropboxCreateFolderRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxCreateFolderRequest" />*/

/*<BeginType Name="Infragistics.DropboxFileManager" />*/

$.ig.util.defType('DropboxFileManager', 'CloudFileManager', {
	init: function (state) {
		$.ig.CloudFileManager.prototype.init.call(this, 0, state);
	},
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetFilesFromCloudFolder(Infragistics.CloudFile, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesFromCloudFolder: function (file, handler, errorHandler) {
		return this.getFilesInFolder1((file == null ? null : file.pathIdentifier()), handler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetFilesFromCloudFolder(Infragistics.CloudFile, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetFilesInFolder(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesInFolder1: function (folder, handler, errorHandler) {
		return this.getFilesInFolder(false, folder, handler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetFilesInFolder(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetFilesInFolder(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesInFolder: function (foldersOnly, folder, handler, errorHandler) {
		return this.getFiles(foldersOnly, folder, handler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetFilesInFolder(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetFiles(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFiles: function (getFoldersOnly, folder, handler, errorHandler) {
		var request = new $.ig.DropboxGetFilesRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.path($.ig.DropboxFile.prototype.extractPath(folder));
		request.foldersOnly(getFoldersOnly);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetFiles(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::SearchFiles(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	searchFiles: function (searchText, handler, errorHandler) {
		var request = new $.ig.DropboxSearchFilesRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.query(searchText);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::SearchFiles(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name=" Infragistics.DropboxFileManager::GetSearchCapabilities()" />*/
	getSearchCapabilities: function () {
		return [ $.ig.SearchCapabilities.prototype.searchByText ];
	}
	/*<EndMethod Name=" Infragistics.DropboxFileManager::GetSearchCapabilities()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.DropboxFileManager::HasDropCapability()" />*/
	hasDropCapability: function () {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.DropboxFileManager::HasDropCapability()" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::SearchFilesWithQuery(Infragistics.SearchQuery, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	searchFilesWithQuery: function (searchQuery, handler, errorHandler) {
		var request = new $.ig.DropboxSearchFilesRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		if (searchQuery._initialPath != null) {
			request.path(searchQuery._initialPath);
		}
		request.query(searchQuery._text);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::SearchFilesWithQuery(Infragistics.SearchQuery, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::DownloadFile(System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	downloadFile1: function (file, mimeType, handler, downloadHandler, errorHandler) {
		return this.downloadFile(file, handler, downloadHandler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::DownloadFile(System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::DownloadFile(System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	downloadFile: function (file, progress, downloaded, errorHandler) {
		return this.downloadFile2(file, null, null, progress, function (m, f, v) {
			if (downloaded != null) {
				downloaded(f);
			}
		}, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::DownloadFile(System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::DownloadFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedIfModifiedBlock, Infragistics.CloudErrorBlock)" />*/
	downloadFile2: function (file, lastVersion, exportType, progress, success, errorHandler) {
		var request = new $.ig.DropboxDownloadFileRequest(this.tokenState(), function (r, s) {
			if (success == null) {
				return;
			}
			var me = (r);
			if (me.notModified()) {
				success(false, null, null);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		}, function (r, bytes, total) {
			if (progress != null) {
				progress(bytes, total);
			}
		}, function (r, f) {
			if (success == null) {
				return;
			}
			var me = (r);
			if (!me.notModified()) {
				success(true, f, me.eTag());
			}
		});
		request.path($.ig.DropboxFile.prototype.extractPath(file));
		request.lastETag(lastVersion);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::DownloadFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedIfModifiedBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.CloudProviderType Infragistics.DropboxFileManager::GetProviderType()" />*/
	getProviderType: function () {
		return $.ig.CloudProviderType.prototype.dropbox;
	}
	/*<EndMethod Name="Infragistics.CloudProviderType Infragistics.DropboxFileManager::GetProviderType()" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetMetadata(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	getMetadata: function (path, handler, errorHandler) {
		if (path == null || path.length == 0) {
			if (handler != null) {
				var rootInfo = new $.ig.CPJSONObject(1);
				rootInfo.setValueForKey(".tag", "folder");
				rootInfo.setValueForKey("path_lower", "");
				handler(new $.ig.DropboxFile(1, rootInfo, this.tokenState().additionalIdentifier()));
			}
			return null;
		}
		var request = new $.ig.DropboxGetMetadataRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.path($.ig.DropboxFile.prototype.extractPath(path));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetMetadata(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GenerateSharedLink(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	generateSharedLink: function (cloudFile, successHandler, errorHandler) {
		var $self = this;
		var request = new $.ig.DropboxGetSharedLinksRequest(this.tokenState(), function (r, o) {
			$self.checkSharedLinkExists(o, cloudFile, successHandler, errorHandler);
		}, function (r, e) {
			$self.failedSharedLink(e, errorHandler);
		});
		request.path($.ig.DropboxFile.prototype.extractId(cloudFile.pathIdentifier()));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GenerateSharedLink(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxFileManager::CheckSharedLinkExists(Infragistics.CPJSONObject, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	checkSharedLinkExists: function (response, cloudFile, successHandler, errorHandler) {
		var list = response.resolveListForKey("links");
		var sharedLinkFound = false;
		for (var i = 0; i < list.length; i++) {
			var json = $.ig.CPJSONObject.prototype.createFromJSONObject(list[i]);
			var file = new $.ig.DropboxFile(1, json, this.tokenState().additionalIdentifier());
			var url = json.resolveStringForKey("url");
			if (!$.ig.CPStringUtility.prototype.isNullOrEmpty(url) && (cloudFile.pathIdentifier() == file.pathIdentifier())) {
				cloudFile.sharedEditLink(url);
				sharedLinkFound = true;
				successHandler(cloudFile);
				break;
			}
		}
		if (!sharedLinkFound) {
			var sharedLinkRequest = this.createSharedLink(response, cloudFile, successHandler, errorHandler);
			this.executeAndManage(sharedLinkRequest);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxFileManager::CheckSharedLinkExists(Infragistics.CPJSONObject, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::CreateSharedLink(Infragistics.CPJSONObject, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	createSharedLink: function (response, cloudFile, successHandler, errorHandler) {
		var $self = this;
		var request = new $.ig.DropboxCreateSharedLinkRequest(this.tokenState(), function (r, o) {
			$self.checkSharedLinkCreated(o, cloudFile, successHandler, errorHandler);
		}, function (r, e) {
			$self.failedSharedLink(e, errorHandler);
		});
		request.path($.ig.DropboxFile.prototype.extractId(cloudFile.pathIdentifier()));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::CreateSharedLink(Infragistics.CPJSONObject, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxFileManager::CheckSharedLinkCreated(Infragistics.CPJSONObject, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	checkSharedLinkCreated: function (response, cloudFile, successHandler, errorHandler) {
		var url = response.resolveStringForKey("url");
		if (url != null) {
			cloudFile.sharedEditLink(url);
			successHandler(cloudFile);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxFileManager::CheckSharedLinkCreated(Infragistics.CPJSONObject, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxFileManager::FailedSharedLink(Infragistics.CloudError, Infragistics.CloudErrorBlock)" />*/
	failedSharedLink: function (error, errorHandler) {
		if (errorHandler != null) {
			errorHandler(error);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxFileManager::FailedSharedLink(Infragistics.CloudError, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::CreateFolder(System.String, System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	createFolder: function (newFolderName, remoteParentFolderId, successHandler, errorHandler) {
		var requestWrapper = new $.ig.RequestWrapper();
		var request = new $.ig.DropboxCreateFolderRequest(this.tokenState(), function (r, o) {
			if (successHandler != null) {
				successHandler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.path($.ig.DropboxFileManager.prototype.appendPathComponent($.ig.DropboxFile.prototype.extractPath(remoteParentFolderId), newFolderName));
		requestWrapper.request(request);
		return requestWrapper;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::CreateFolder(System.String, System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::DeleteFile(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	deleteFile: function (path, successHandler, errorHandler) {
		var request = new $.ig.DropboxDeleteRequest(this.tokenState(), successHandler, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.path($.ig.DropboxFile.prototype.extractPath(path));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::DeleteFile(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::DeleteFilePermanent(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	deleteFilePermanent: function (fileId, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::DeleteFilePermanent(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetAccountInfo(Infragistics.CloudAccountUserInfoBlock, Infragistics.CloudErrorBlock)" />*/
	getAccountInfo: function (successHandler, errorHandler) {
		return new $.ig.DropboxGetAccountInfo(this.tokenState(), function (r, o) {
			if (successHandler != null) {
				successHandler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetAccountInfo(Infragistics.CloudAccountUserInfoBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.DropboxFileManager::CanAddFileInFolder(System.String)" />*/
	canAddFileInFolder: function (fileId) {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.DropboxFileManager::CanAddFileInFolder(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.DropboxFileManager::CanDeleteFile(System.String)" />*/
	canDeleteFile: function (fileId) {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.DropboxFileManager::CanDeleteFile(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetParentForFile(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	getParentForFile: function (fileId, successHandler, errorHandler) {
		if (fileId == null || fileId.length == 0) {
			successHandler(null);
			return null;
		}
		var parentId = $.ig.NativeStringUtility.prototype.removeLastPathComponent($.ig.DropboxFile.prototype.extractPath(fileId));
		if (parentId == null || parentId.equals("/")) {
			parentId = "";
		}
		return this.getMetadata(parentId, successHandler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetParentForFile(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetFileByName(System.String, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFileByName: function (fileName, remoteFolderId, handler, errorHandler) {
		var path = $.ig.DropboxFileManager.prototype.appendPathComponent($.ig.DropboxFile.prototype.extractPath(remoteFolderId), fileName);
		var requestWrapper = new $.ig.RequestWrapper();
		var request = this.getMetadata(path, function (o) {
			if (handler != null) {
				var files = new $.ig.Array();
				files.add(o);
				handler(files);
			}
		}, function (error) {
			if (error.errorCode() == 404) {
				if (handler != null) {
					handler(new $.ig.Array());
				}
			} else {
				if (errorHandler != null) {
					errorHandler(error);
				}
			}
		});
		requestWrapper.request(request);
		return requestWrapper;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetFileByName(System.String, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxFileManager::AppendPathComponent(System.String, System.String)" />*/
	appendPathComponent: function (path, pathComponent) {
		var newPath;
		if (path == null || path.equals("/")) {
			newPath = "";
		} else {
			newPath = path;
		}
		newPath = newPath + "/" + pathComponent;
		return newPath;
	}
	/*<EndMethod Name="System.String Infragistics.DropboxFileManager::AppendPathComponent(System.String, System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetDownloadLink(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	getDownloadLink: function (fileId, successHandler, errorHandler) {
		var request = new $.ig.DropboxDownloadLinkRequest(this.tokenState(), successHandler, errorHandler);
		request.path($.ig.DropboxFile.prototype.extractPath(fileId));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetDownloadLink(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::CopyFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	copyFile: function (fileId, filePath, destinationPath, progress, success, errorHandler) {
		var copyRequest = new $.ig.DropboxCopyFileRequest(this.tokenState(), function (rLists, lists) {
			success(null);
		}, function (rLists, error1) {
			if (errorHandler != null) {
				errorHandler(error1);
			}
		});
		copyRequest.filePath(filePath);
		copyRequest.destinationPath(destinationPath);
		this.executeAndManage(copyRequest);
		return copyRequest;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::CopyFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::MoveFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	moveFile: function (fileId, filePath, destinationPath, progress, success, errorHandler) {
		var moveRequest = new $.ig.DropboxMoveFileRequest(this.tokenState(), function (rLists, lists) {
			success(null);
		}, function (rLists, error1) {
			if (errorHandler != null) {
				errorHandler(error1);
			}
		});
		moveRequest.filePath(filePath);
		moveRequest.destinationPath(destinationPath);
		this.executeAndManage(moveRequest);
		return moveRequest;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::MoveFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetFilePermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	getFilePermissions: function (fileId, successHandler, errorHandler) {
		var $self = this;
		var request = new $.ig.DropboxSharingGetFileMetadataRequest(this.tokenState(), function (r, o) {
			successHandler(o);
		}, function (r, e) {
			if ($.ig.DropboxSharingGetFileMetadataRequest.prototype.isIsFolderError(e)) {
				var folderRequest = $self.getFolderPermissions(fileId, successHandler, errorHandler);
				$self.executeAndManage(folderRequest);
			} else {
				errorHandler(r, e);
			}
		});
		request.file($.ig.DropboxFile.prototype.extractId(fileId));
		request.addAction($.ig.DropboxFileAction.prototype.editContents);
		request.addAction($.ig.DropboxFileAction.prototype.createLink);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetFilePermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetFileMembersPermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	getFileMembersPermissions: function (fileId, successHandler, errorHandler) {
		var $self = this;
		var request = new $.ig.DropboxSharingListFilePermissionsRequest(this.tokenState(), function (r, o) {
			successHandler(o);
		}, function (r, e) {
			if ($.ig.DropboxSharingGetFileMetadataRequest.prototype.isIsFolderError(e)) {
				var folderRequest = $self.getFolderPermissions(fileId, successHandler, errorHandler);
				$self.executeAndManage(folderRequest);
			} else {
				errorHandler(r, e);
			}
		});
		request.file($.ig.DropboxFile.prototype.extractId(fileId));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetFileMembersPermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::DeleteFileMemberPermissions(System.String, Infragistics.CloudFileMemberPermissions, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	deleteFileMemberPermissions: function (fileId, memberPermission, successHandler, errorHandler) {
		if (memberPermission == null || memberPermission.permissionKey() == null) {
			return null;
		}
		var request = new $.ig.DropboxSharingRemoveFileMemberRequest(this.tokenState(), successHandler, errorHandler);
		request.fileId($.ig.DropboxFile.prototype.extractId(fileId));
		request.email(memberPermission.permissionKey());
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::DeleteFileMemberPermissions(System.String, Infragistics.CloudFileMemberPermissions, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::DeleteFilePermissions(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	deleteFilePermissions: function (fileId, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::DeleteFilePermissions(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetFolderPermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	getFolderPermissions: function (pathIdentifier, successHandler, errorHandler) {
		var $self = this;
		var metadataRequest = null;
		metadataRequest = this.getMetadata($.ig.DropboxFile.prototype.extractPath(pathIdentifier), function (file) {
			var sharedFolderId = (file).sharedFolderId();
			if (sharedFolderId == null) {
				successHandler(new $.ig.DropboxExplicitSharePermissions());
			} else {
				var request = new $.ig.DropboxSharingGetFolderMetadataRequest($self.tokenState(), function (r, o) {
					successHandler(o);
				}, errorHandler);
				request.sharedFolderId(sharedFolderId);
				request.addAction($.ig.DropboxFolderAction.prototype.editContents);
				request.addAction($.ig.DropboxFolderAction.prototype.createLink);
				$self.executeAndManage(request);
			}
		}, function (e) {
			errorHandler(metadataRequest, e);
		});
		return metadataRequest;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GetFolderPermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GrantPermissionsForFile(System.String, Infragistics.TokenState, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	grantPermissionsForFile: function (fileId, granteeTokenState, successHandler, errorHandler) {
		var $self = this;
		if (granteeTokenState.userInfo() == null || (granteeTokenState.userInfo()).getEmail() == null) {
			errorHandler(null, (function () {
				var $ret = new $.ig.CloudError(0);
				$ret.errorMessage("Missing user information from Dropbox.");
				return $ret;
			}()));
			return null;
		}
		var request = new $.ig.DropboxSharingAddFileMemberRequest(this.tokenState(), function (r, o) {
			var permissions = new $.ig.DropboxFilePermissions(o, granteeTokenState.userInfo().getEmail(), granteeTokenState.userInfo().getUserId());
			successHandler(r, permissions);
		}, function (r, e) {
			if ($.ig.DropboxSharingAddFileMemberRequest.prototype.isIsFolderError(e)) {
				var folderRequest = $self.grantPermissionsForFolder(fileId, granteeTokenState, successHandler, errorHandler);
				$self.executeAndManage(folderRequest);
			} else if (errorHandler != null) {
				errorHandler(r, e);
			}
		});
		request.file($.ig.DropboxFile.prototype.extractId(fileId));
		request.email((granteeTokenState.userInfo()).getEmail());
		request.accessLevel($.ig.DropboxAccessLevel.prototype.viewer);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GrantPermissionsForFile(System.String, Infragistics.TokenState, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GrantPermissionsForFolder(System.String, Infragistics.TokenState, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	grantPermissionsForFolder: function (pathIdentifier, granteeTokenState, successHandler, errorHandler) {
		var $self = this;
		var request = new $.ig.DropboxSharingShareFolderRequest(this.tokenState(), function (r, o) {
			var json = o;
			var sharedFolderId = json.resolveStringForKey("shared_folder_id");
			var memberEmail = (granteeTokenState.userInfo()).getEmail();
			var addMemberRequest = $self.addFolderMember(sharedFolderId, memberEmail, $.ig.DropboxAccessLevel.prototype.editor, function (r2, o2) {
				var mountFolderReq = $self.mountFolder(sharedFolderId, granteeTokenState, successHandler, errorHandler);
				$self.executeAndManage(mountFolderReq);
			}, errorHandler);
			$self.executeAndManage(addMemberRequest);
		}, function (r, e) {
			if ($.ig.DropboxSharingShareFolderRequest.prototype.isAlreadySharedError(e)) {
				var json = e.responseData();
				var sharedFolderId = json.resolveStringForKeyPath((function () {
					var $ret = new $.ig.Array();
					$ret.add("error");
					$ret.add("bad_path");
					$ret.add("shared_folder_id");
					return $ret;
				}()));
				var memberEmail = (granteeTokenState.userInfo()).getEmail();
				var addMemberRequest = $self.addFolderMember(sharedFolderId, memberEmail, $.ig.DropboxAccessLevel.prototype.editor, function (r2, o2) {
					var mountFolderReq = $self.mountFolder(sharedFolderId, granteeTokenState, successHandler, errorHandler);
					$self.executeAndManage(mountFolderReq);
				}, errorHandler);
				$self.executeAndManage(addMemberRequest);
			} else if (errorHandler != null) {
				errorHandler(r, e);
			}
		});
		request.path($.ig.DropboxFile.prototype.extractPath(pathIdentifier));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::GrantPermissionsForFolder(System.String, Infragistics.TokenState, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::AddFolderMember(System.String, System.String, Infragistics.DropboxAccessLevel, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	addFolderMember: function (sharedFolderId, memberEmail, accessLevel, successHandler, errorHandler) {
		var request = new $.ig.DropboxSharingAddFolderMemberRequest(this.tokenState(), successHandler, errorHandler);
		request.sharedFolderId(sharedFolderId);
		request.memberEmail(memberEmail);
		request.accessLevel(accessLevel);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::AddFolderMember(System.String, System.String, Infragistics.DropboxAccessLevel, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::MountFolder(System.String, Infragistics.TokenState, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	mountFolder: function (sharedFolderId, tokenState, successHandler, errorHandler) {
		var request = new $.ig.DropboxSharingMountFolderRequest(tokenState, successHandler, function (r, e) {
			if ($.ig.DropboxSharingMountFolderRequest.prototype.isAlreadyMountedError(e)) {
				successHandler(r, null);
			} else {
				errorHandler(r, e);
			}
		});
		request.sharedFolderId(sharedFolderId);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::MountFolder(System.String, Infragistics.TokenState, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.DropboxFileManager::HasExpiredToken(Infragistics.CloudError)" />*/
	hasExpiredToken: function (error) {
		var errorMessage = (error != null && !$.ig.CPStringUtility.prototype.isNullOrEmpty(error.errorMessage())) ? error.errorMessage().toLowerCase() : "";
		if ($.ig.NativeStringUtility.prototype.contains(errorMessage, "invalid_access_token") || $.ig.NativeStringUtility.prototype.contains(error.errorMessage(), "expired_access_token")) {
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.DropboxFileManager::HasExpiredToken(Infragistics.CloudError)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::DownloadFileFromLink(System.String, System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	downloadFileFromLink: function (fileId, downloadLink, successHandler, errorHandler) {
		return new $.ig.DropboxDownloadFileFromLinkRequest(downloadLink, this.tokenState(), successHandler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::DownloadFileFromLink(System.String, System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::OverwriteFile(System.String, System.Object, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	overwriteFile: function (fileName, file, remoteFolderId, remoteFileId, progress, success, errorHandler) {
		return this.uploadFile1(file, $.ig.DropboxFile.prototype.extractPath(remoteFileId), $.ig.DropboxWriteMode.prototype.overwrite, progress, success, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::OverwriteFile(System.String, System.Object, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::UploadFile(System.String, System.Object, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadFile: function (fileName, file, remoteFolderId, progress, success, errorHandler) {
		var path = $.ig.DropboxFileManager.prototype.appendPathComponent($.ig.DropboxFile.prototype.extractPath(remoteFolderId), fileName);
		return this.uploadFile1(file, path, $.ig.DropboxWriteMode.prototype.add, progress, success, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::UploadFile(System.String, System.Object, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::UploadFile(System.Object, System.String, Infragistics.DropboxWriteMode, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadFile1: function (file, remotePath, mode, progress, success, errorHandler) {
		var $self = this;
		var readFileRequest = $.ig.NativeRequestUtility.prototype.utility().readFile(file, 0, $.ig.DropboxFileManager.prototype._cHUNK_SIZE, function (r, o) {
			var data = o;
			var startUploadRequest = $self.uploadFileWithData(file, data, remotePath, mode, progress, success, errorHandler);
			startUploadRequest.execute();
		}, function (r, o) {
		});
		return readFileRequest;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::UploadFile(System.Object, System.String, Infragistics.DropboxWriteMode, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::UploadFileWithData(System.Object, System.Object, System.String, Infragistics.DropboxWriteMode, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadFileWithData: function (file, data, remotePath, mode, progress, success, error) {
		var $self = this;
		var read = $.ig.NativeRequestUtility.prototype.utility().getNativeDataSize(data);
		var fileSize = $.ig.NativeFileUtility.prototype.getFileSize(file);
		var close = read == fileSize;
		var requestWrapper = new $.ig.RequestWrapper();
		var startUploadReq = new $.ig.DropboxStartUploadSessionRequest(this.tokenState(), close, function (r, o) {
			var json = o;
			var sessionId = json.resolveStringForKey("session_id");
			$self.uploadContinue(requestWrapper, file, remotePath, mode, r, sessionId, read, fileSize, progress, success, error);
		}, function (r, e) {
			error(e);
		});
		startUploadReq.chunk(data);
		requestWrapper.request(startUploadReq);
		return requestWrapper;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::UploadFileWithData(System.Object, System.Object, System.String, Infragistics.DropboxWriteMode, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxFileManager::UploadContinue(Infragistics.RequestWrapper, System.Object, System.String, Infragistics.DropboxWriteMode, Infragistics.Request, System.String, System.UInt64, System.UInt64, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadContinue: function (requestWrapper, file, remotePath, mode, originalRequest, sessionId, read, fileSize, progress, success, errorHandler) {
		if (originalRequest.isCanceled()) {
			return;
		}
		if (progress != null) {
			progress(read, fileSize);
		}
		if (read + $.ig.DropboxFileManager.prototype._cHUNK_SIZE < fileSize) {
			this.uploadAppend(requestWrapper, file, remotePath, mode, progress, success, errorHandler, originalRequest, sessionId, read, fileSize);
		} else {
			this.uploadFileFinish(requestWrapper, file, remotePath, mode, progress, success, errorHandler, originalRequest, sessionId, read, fileSize);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxFileManager::UploadContinue(Infragistics.RequestWrapper, System.Object, System.String, Infragistics.DropboxWriteMode, Infragistics.Request, System.String, System.UInt64, System.UInt64, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxFileManager::UploadAppend(Infragistics.RequestWrapper, System.Object, System.String, Infragistics.DropboxWriteMode, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock, Infragistics.Request, System.String, System.UInt64, System.UInt64)" />*/
	uploadAppend: function (requestWrapper, file, remotePath, mode, progress, success, errorHandler, originalRequest, sessionId, bytesSent, fileSize) {
		var $self = this;
		var readFileRequest = $.ig.NativeRequestUtility.prototype.utility().readFile(file, bytesSent, $.ig.DropboxFileManager.prototype._cHUNK_SIZE, function (r, o) {
			var data = o;
			var appendUploadReq = $self.uploadAppendWithData(requestWrapper, file, data, remotePath, mode, originalRequest, sessionId, bytesSent, fileSize, progress, success, errorHandler);
			requestWrapper.request(appendUploadReq);
			appendUploadReq.execute();
		}, function (r, o) {
		});
		readFileRequest.execute();
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxFileManager::UploadAppend(Infragistics.RequestWrapper, System.Object, System.String, Infragistics.DropboxWriteMode, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock, Infragistics.Request, System.String, System.UInt64, System.UInt64)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.DropboxFileManager::UploadAppendWithData(Infragistics.RequestWrapper, System.Object, System.Object, System.String, Infragistics.DropboxWriteMode, Infragistics.Request, System.String, System.UInt64, System.UInt64, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadAppendWithData: function (requestWrapper, file, data, remotePath, mode, originalRequest, sessionId, bytesSent, fileSize, progress, success, error) {
		var $self = this;
		var read = $.ig.NativeRequestUtility.prototype.utility().getNativeDataSize(data);
		var updatedBytesSent = bytesSent + read;
		var appendUploadReq = new $.ig.DropboxAppendV2UploadSessionRequest(this.tokenState(), sessionId, bytesSent, function (r, o) {
			$self.uploadContinue(requestWrapper, file, remotePath, mode, originalRequest, sessionId, updatedBytesSent, fileSize, progress, success, error);
		}, function (r, e) {
			if (error != null) {
				error(e);
			}
		});
		appendUploadReq.chunk(data);
		return appendUploadReq;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.DropboxFileManager::UploadAppendWithData(Infragistics.RequestWrapper, System.Object, System.Object, System.String, Infragistics.DropboxWriteMode, Infragistics.Request, System.String, System.UInt64, System.UInt64, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxFileManager::UploadFileFinish(Infragistics.RequestWrapper, System.Object, System.String, Infragistics.DropboxWriteMode, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock, Infragistics.Request, System.String, System.UInt64, System.UInt64)" />*/
	uploadFileFinish: function (requestWrapper, file, remoteFilePath, mode, progress, success, errorHandler, originalRequest, sessionId, bytesSent, fileSize) {
		var $self = this;
		var readFileRequest = $.ig.NativeRequestUtility.prototype.utility().readFile(file, bytesSent, $.ig.DropboxFileManager.prototype._cHUNK_SIZE, function (r, o) {
			var data = o;
			$self.uploadFileFinishWithData(requestWrapper, data, remoteFilePath, mode, originalRequest, sessionId, bytesSent, fileSize, progress, success, errorHandler);
		}, function (r, o) {
		});
		readFileRequest.execute();
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxFileManager::UploadFileFinish(Infragistics.RequestWrapper, System.Object, System.String, Infragistics.DropboxWriteMode, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock, Infragistics.Request, System.String, System.UInt64, System.UInt64)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxFileManager::UploadFileFinishWithData(Infragistics.RequestWrapper, System.Object, System.String, Infragistics.DropboxWriteMode, Infragistics.Request, System.String, System.UInt64, System.UInt64, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadFileFinishWithData: function (requestWrapper, data, remoteFilePath, mode, originalRequest, sessionId, bytesSent, fileSize, progress, success, error) {
		var successHandler = function (r, o) {
			if (progress != null) {
				progress(fileSize, fileSize);
			}
			if (success != null) {
				success(o);
			}
		};
		var errorHandler = function (r, e) {
			if (error != null) {
				error(e);
			}
		};
		var finishUploadReq = new $.ig.DropboxFinishUploadSessionRequest(this.tokenState(), sessionId, bytesSent, remoteFilePath, mode, successHandler, errorHandler);
		finishUploadReq.chunk(data);
		requestWrapper.request(finishUploadReq);
		finishUploadReq.execute();
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxFileManager::UploadFileFinishWithData(Infragistics.RequestWrapper, System.Object, System.String, Infragistics.DropboxWriteMode, Infragistics.Request, System.String, System.UInt64, System.UInt64, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	$type: new $.ig.Type('DropboxFileManager', $.ig.CloudFileManager.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxFileManager" />*/

/*<BeginType Name="Infragistics.DropboxDownloadFileRequest" />*/

$.ig.util.defType('DropboxDownloadFileRequest', 'DropboxRequestBase', {
	init: function (token, success, error, progress, downloaded) {
		$.ig.DropboxRequestBase.prototype.init1.call(this, 1, "DropBox_DownloadFile", token, success, error, progress, downloaded);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxDownloadFileRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxDownloadFileRequest::Path()" />*/
	,
	_lastETag: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxDownloadFileRequest::LastETag()" />*/
	lastETag: function (value) {
		if (arguments.length === 1) {
			this._lastETag = value;
			return value;
		} else {
			return this._lastETag;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxDownloadFileRequest::LastETag()" />*/
	,
	_eTag: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxDownloadFileRequest::ETag()" />*/
	eTag: function (value) {
		if (arguments.length === 1) {
			this._eTag = value;
			return value;
		} else {
			return this._eTag;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxDownloadFileRequest::ETag()" />*/
	,
	_notModified: false,
	/*<BeginProperty Name="System.Boolean Infragistics.DropboxDownloadFileRequest::NotModified()" />*/
	notModified: function (value) {
		if (arguments.length === 1) {
			this._notModified = value;
			return value;
		} else {
			return this._notModified;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.DropboxDownloadFileRequest::NotModified()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxDownloadFileRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://content.dropboxapi.com/2/";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxDownloadFileRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxDownloadFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/download";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxDownloadFileRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.DropboxDownloadFileRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var headers = new $.ig.Dictionary(0);
		var jsonPath = new $.ig.CPJSONObject(1);
		jsonPath.setValueForKey("path", this.path());
		if (this.lastETag() != null && this.lastETag().length > 0) {
			headers.item("If-None-Match", this.lastETag());
		}
		headers.item("Dropbox-API-Arg", jsonPath.convertToString());
		return headers;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.DropboxDownloadFileRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxDownloadFileRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxDownloadFileRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionTaskType Infragistics.DropboxDownloadFileRequest::ResolveTaskType()" />*/
	resolveTaskType: function () {
		return $.ig.SessionTaskType.prototype.download;
	}
	/*<EndMethod Name="Infragistics.SessionTaskType Infragistics.DropboxDownloadFileRequest::ResolveTaskType()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.DropboxDownloadFileRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.none;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.DropboxDownloadFileRequest::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.DropboxDownloadFileRequest::ProcessHeaders(System.Int32, Infragistics.CPDictionary)" />*/
	processHeaders: function (statusCode, response) {
		this.eTag($.ig.RQHTTPUtils.prototype.getHeaderValue(response, "etag"));
		this.notModified(statusCode == 304);
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.DropboxDownloadFileRequest::ProcessHeaders(System.Int32, Infragistics.CPDictionary)" />*/
	,
	$type: new $.ig.Type('DropboxDownloadFileRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxDownloadFileRequest" />*/

/*<BeginType Name="Infragistics.DropboxDownloadLinkRequest" />*/

$.ig.util.defType('DropboxDownloadLinkRequest', 'DropboxRequestBase', {
	init: function (token, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "DropBox_DownloadLink", token, success, error);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxDownloadLinkRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxDownloadLinkRequest::Path()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxDownloadLinkRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/get_temporary_link";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxDownloadLinkRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxDownloadLinkRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxDownloadLinkRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxDownloadLinkRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("path", (this.path() == null) ? "" : this.path());
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.DropboxDownloadLinkRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.DropboxDownloadLinkRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.DropboxDownloadLinkRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxDownloadLinkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response.resolveStringForKey("link");
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxDownloadLinkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('DropboxDownloadLinkRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxDownloadLinkRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftRequestBase" />*/

$.ig.util.defType('MicrosoftRequestBase', 'OAuthRequestBase', {
	init: function (initNumber, key, token, success, error) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.OAuthRequestBase.prototype.init.call(this, 0, key, token, success, error);
	},
	init1: function (initNumber, key, token, success, error, progress, downloaded) {
		$.ig.OAuthRequestBase.prototype.init1.call(this, 1, key, token, success, error, progress, downloaded);
	},
	/*<BeginMethod Name="Infragistics.OAuthProvider Infragistics.MicrosoftRequestBase::ResolveProvider(Infragistics.TokenState)" />*/
	resolveProvider: function (token) {
		return new $.ig.MicrosoftOAuthProvider(1, token.providerKeys(), false, token.provider());
	}
	/*<EndMethod Name="Infragistics.OAuthProvider Infragistics.MicrosoftRequestBase::ResolveProvider(Infragistics.TokenState)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftRequestBase::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		var version = this.isBeta() ? $.ig.MicrosoftRequestBase.prototype._bETA : this.version();
		var url = $.ig.MicrosoftRequestBase.prototype.graphURL + version;
		if (this.user() == null) {
			url = url + "/me/";
		} else {
			url = url + "/users/" + this.user() + "/";
		}
		return url;
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftRequestBase::ResolveBaseURL()" />*/
	,
	__user: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftRequestBase::User()" />*/
	user: function (value) {
		if (arguments.length === 1) {
			this.__user = value;
			return value;
		} else {
			return this.__user;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftRequestBase::User()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftRequestBase::Version()" />*/
	version: function () {
		return "v1.0";
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftRequestBase::Version()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.MicrosoftRequestBase::IsBeta()" />*/
	isBeta: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.MicrosoftRequestBase::IsBeta()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.MicrosoftRequestBase::HasAdminConsent()" />*/
	hasAdminConsent: function () {
		var accessToken = this.tokenState().token().getAccessToken();
		var payload = $.ig.TokenState.prototype.convertPayloadToJSON(accessToken);
		var scope = payload.resolveStringForKey("scp");
		if (scope != null) {
			scope = scope.toLowerCase();
			return $.ig.NativeStringUtility.prototype.contains(scope, "group.read.all") && $.ig.NativeStringUtility.prototype.contains(scope, "directory.read.all");
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.MicrosoftRequestBase::HasAdminConsent()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftRequestBase::OwnerUserId()" />*/
	ownerUserId: function () {
		if (this.user() != null) {
			return this.user();
		} else {
			return this.tokenState().userInfo().getUserId();
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftRequestBase::OwnerUserId()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.MicrosoftRequestBase::CheckScope(Infragistics.TokenState, Infragistics.CPList, System.Boolean)" />*/
	checkScope: function (tokenState, validScopes, valueIfMissingProperty) {
		if (tokenState == null) {
			return valueIfMissingProperty;
		}
		if (tokenState.token() == null) {
			return valueIfMissingProperty;
		}
		var accessToken = tokenState.token().getAccessToken();
		if (accessToken == null) {
			return valueIfMissingProperty;
		}
		var payload = $.ig.TokenState.prototype.convertPayloadToJSON(accessToken);
		if (payload == null) {
			return valueIfMissingProperty;
		}
		var scp = payload.resolveStringForKey("scp");
		if (scp == null) {
			return valueIfMissingProperty;
		}
		var comps = $.ig.NativeStringUtility.prototype.split(scp, " ");
		return $.ig.ArrayUtility.prototype.containsAny(validScopes, $.ig.ArrayUtility.prototype.toList(comps));
	}
	/*<EndMethod Name="System.Boolean Infragistics.MicrosoftRequestBase::CheckScope(Infragistics.TokenState, Infragistics.CPList, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.CloudError Infragistics.MicrosoftRequestBase::CheckFileReadAccess()" />*/
	checkFileReadAccess: function () {
		if ($.ig.MicrosoftRequestBase.prototype.checkScope(this.tokenState(), (function () {
			var $ret = new $.ig.Array();
			$ret.add("Files.Read");
			$ret.add("Files.ReadWrite");
			return $ret;
		}()), true)) {
			return null;
		} else {
			var cloudError = new $.ig.CloudError(1, "Authorization needed", null);
			cloudError.errorCode(403);
			cloudError.errorType($.ig.CloudErrorType.prototype.needsOAuthorize);
			return cloudError;
		}
	}
	/*<EndMethod Name="Infragistics.CloudError Infragistics.MicrosoftRequestBase::CheckFileReadAccess()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftRequestBase::SetUserIfNeeded(System.String)" />*/
	setUserIfNeeded: function (file) {
		var userId = $.ig.MicrosoftFile.prototype.extractOwnerUserId(file);
		if ($.ig.CPStringUtility.prototype.isNullOrEmpty(userId)) {
			return;
		}
		if (this.tokenState().userInfo() == null) {
			return;
		}
		if (userId != this.tokenState().userInfo().getUserId()) {
			this.user(userId);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftRequestBase::SetUserIfNeeded(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.OAuthProvider Infragistics.MicrosoftRequestBase::CreateOAuthProvider(Infragistics.TokenState)" />*/
	createOAuthProvider: function (token) {
		return new $.ig.MicrosoftOAuthProvider(1, token.providerKeys(), false, token.provider());
	}
	/*<EndMethod Name="Infragistics.OAuthProvider Infragistics.MicrosoftRequestBase::CreateOAuthProvider(Infragistics.TokenState)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.MicrosoftRequestBase::CreateBuilder(Infragistics.TokenState)" />*/
	createBuilder: function (tokenState) {
		return $.ig.HttpRequestBuilder.prototype.create1($.ig.MicrosoftRequestBase.prototype.createOAuthProvider(tokenState), tokenState).setURL($.ig.MicrosoftRequestBase.prototype.graphURL + $.ig.MicrosoftRequestBase.prototype._bETA);
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.MicrosoftRequestBase::CreateBuilder(Infragistics.TokenState)" />*/
	,
	$type: new $.ig.Type('MicrosoftRequestBase', $.ig.OAuthRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftRequestBase" />*/

/*<BeginType Name="Infragistics.DropboxDownloadFileFromLinkRequest" />*/

$.ig.util.defType('DropboxDownloadFileFromLinkRequest', 'MicrosoftRequestBase', {
	__downloadLink: null,
	init: function (downloadLink, token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "DropboxDownloadFileFromLinkRequest", token, success, error);
		this.__downloadLink = downloadLink;
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxDownloadFileFromLinkRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxDownloadFileFromLinkRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxDownloadFileFromLinkRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return this.__downloadLink;
	}
	/*<EndMethod Name="System.String Infragistics.DropboxDownloadFileFromLinkRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxDownloadFileFromLinkRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxDownloadFileFromLinkRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionTaskType Infragistics.DropboxDownloadFileFromLinkRequest::ResolveTaskType()" />*/
	resolveTaskType: function () {
		return $.ig.SessionTaskType.prototype.data;
	}
	/*<EndMethod Name="Infragistics.SessionTaskType Infragistics.DropboxDownloadFileFromLinkRequest::ResolveTaskType()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.DropboxDownloadFileFromLinkRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.dATA;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.DropboxDownloadFileFromLinkRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxDownloadFileFromLinkRequest::ProcessDataResponse(System.Array)" />*/
	processDataResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxDownloadFileFromLinkRequest::ProcessDataResponse(System.Array)" />*/
	,
	$type: new $.ig.Type('DropboxDownloadFileFromLinkRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxDownloadFileFromLinkRequest" />*/

/*<BeginType Name="Infragistics.DropboxGetMetadataRequest" />*/

$.ig.util.defType('DropboxGetMetadataRequest', 'DropboxRequestBase', {
	init: function (token, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "DropBox_GetMetadata", token, success, error);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxGetMetadataRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxGetMetadataRequest::Path()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxGetMetadataRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/get_metadata";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxGetMetadataRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxGetMetadataRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxGetMetadataRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxGetMetadataRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("path", (this.path() == null) ? "" : this.path());
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.DropboxGetMetadataRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxGetMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return (new $.ig.DropboxFile(1, response, this.tokenState().additionalIdentifier()));
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxGetMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxGetMetadataRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		if (error.errorCode() == 409) {
			error.errorCode(404);
		}
		$.ig.DropboxRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxGetMetadataRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('DropboxGetMetadataRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxGetMetadataRequest" />*/

/*<BeginType Name="Infragistics.DropboxSearchFilesRequest" />*/

$.ig.util.defType('DropboxSearchFilesRequest', 'DropboxRequestBase', {
	init: function (token, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "Dropbox_Search", token, success, error);
		this.path("");
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxSearchFilesRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxSearchFilesRequest::Path()" />*/
	,
	_query: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxSearchFilesRequest::Query()" />*/
	query: function (value) {
		if (arguments.length === 1) {
			this._query = value;
			return value;
		} else {
			return this._query;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxSearchFilesRequest::Query()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSearchFilesRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/search";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSearchFilesRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxSearchFilesRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxSearchFilesRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSearchFilesRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("path", this.path());
		content.setValueForKey("query", this.query() != null ? this.query() : "");
		content.setValueForKey("mode", "filename_and_content");
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSearchFilesRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxSearchFilesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var files = new $.ig.Array();
		var matches = response.resolveListForKey("matches");
		var count = matches.length;
		for (var i = 0; i < count; i++) {
			var json = $.ig.CPJSONObject.prototype.createFromJSONObject(matches[i]);
			files.add(new $.ig.DropboxFile(1, json.resolveJSONForKey("metadata"), this.tokenState().additionalIdentifier()));
		}
		return files;
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxSearchFilesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxSearchFilesRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.DropboxRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxSearchFilesRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('DropboxSearchFilesRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxSearchFilesRequest" />*/

/*<BeginType Name="Infragistics.DropboxGetAccountInfo" />*/

$.ig.util.defType('DropboxGetAccountInfo', 'DropboxRequestBase', {
	init: function (token, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "Dropbox_GetAccountInfo", token, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.DropboxGetAccountInfo::ResolveAction()" />*/
	resolveAction: function () {
		return "users/get_current_account";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxGetAccountInfo::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxGetAccountInfo::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxGetAccountInfo::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.DropboxGetAccountInfo::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.none;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.DropboxGetAccountInfo::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxGetAccountInfo::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return new $.ig.DropboxAccountUserInfo(response);
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxGetAccountInfo::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxGetAccountInfo::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.DropboxRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxGetAccountInfo::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('DropboxGetAccountInfo', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxGetAccountInfo" />*/

/*<BeginType Name="Infragistics.DropboxDeleteRequest" />*/

$.ig.util.defType('DropboxDeleteRequest', 'DropboxRequestBase', {
	init: function (token, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "DropBox_Delete", token, success, error);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxDeleteRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxDeleteRequest::Path()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxDeleteRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/delete";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxDeleteRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxDeleteRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxDeleteRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxDeleteRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("path", this.path());
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.DropboxDeleteRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxDeleteRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return (new $.ig.DropboxFile(1, response, this.tokenState().additionalIdentifier()));
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxDeleteRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxDeleteRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		if (error.errorCode() == 409) {
			error.errorCode(404);
		}
		$.ig.DropboxRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxDeleteRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('DropboxDeleteRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxDeleteRequest" />*/

/*<BeginType Name="Infragistics.DropboxStartUploadSessionRequest" />*/

$.ig.util.defType('DropboxStartUploadSessionRequest', 'DropboxRequestBase', {
	init: function (token, close, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "DropBox_StartUploadSession", token, success, error);
		this.close(close);
	},
	_close: false,
	/*<BeginProperty Name="System.Boolean Infragistics.DropboxStartUploadSessionRequest::Close()" />*/
	close: function (value) {
		if (arguments.length === 1) {
			this._close = value;
			return value;
		} else {
			return this._close;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.DropboxStartUploadSessionRequest::Close()" />*/
	,
	_data: null,
	/*<BeginProperty Name="System.Array Infragistics.DropboxStartUploadSessionRequest::Data()" />*/
	data: function (value) {
		if (arguments.length === 1) {
			this._data = value;
			return value;
		} else {
			return this._data;
		}
	}
	/*<EndProperty Name="System.Array Infragistics.DropboxStartUploadSessionRequest::Data()" />*/
	,
	_chunk: null,
	/*<BeginProperty Name="System.Object Infragistics.DropboxStartUploadSessionRequest::Chunk()" />*/
	chunk: function (value) {
		if (arguments.length === 1) {
			this._chunk = value;
			return value;
		} else {
			return this._chunk;
		}
	}
	/*<EndProperty Name="System.Object Infragistics.DropboxStartUploadSessionRequest::Chunk()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxStartUploadSessionRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://content.dropboxapi.com/2/";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxStartUploadSessionRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxStartUploadSessionRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/upload_session/start";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxStartUploadSessionRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxStartUploadSessionRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxStartUploadSessionRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.DropboxStartUploadSessionRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.none;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.DropboxStartUploadSessionRequest::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.DropboxStartUploadSessionRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var headers = new $.ig.Dictionary(0);
		if (this.close()) {
			headers.item("Dropbox-API-Arg", "{\"close\": true}");
		}
		headers.item("Content-Type", "application/octet-stream");
		return headers;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.DropboxStartUploadSessionRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.Array Infragistics.DropboxStartUploadSessionRequest::ResolvePostContentData()" />*/
	resolvePostContentData: function () {
		return this.data();
	}
	/*<EndMethod Name="System.Array Infragistics.DropboxStartUploadSessionRequest::ResolvePostContentData()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxStartUploadSessionRequest::ResolvePostContentAsObject()" />*/
	resolvePostContentAsObject: function () {
		return this.chunk();
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxStartUploadSessionRequest::ResolvePostContentAsObject()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxStartUploadSessionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxStartUploadSessionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('DropboxStartUploadSessionRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxStartUploadSessionRequest" />*/

/*<BeginType Name="Infragistics.DropboxAppendV2UploadSessionRequest" />*/

$.ig.util.defType('DropboxAppendV2UploadSessionRequest', 'DropboxRequestBase', {
	init: function (token, sessionId, offset, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "DropBox_AppendV2UploadSession", token, success, error);
		this.sessionId(sessionId);
		this.offset(offset);
	},
	_sessionId: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxAppendV2UploadSessionRequest::SessionId()" />*/
	sessionId: function (value) {
		if (arguments.length === 1) {
			this._sessionId = value;
			return value;
		} else {
			return this._sessionId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxAppendV2UploadSessionRequest::SessionId()" />*/
	,
	_offset: 0,
	/*<BeginProperty Name="System.UInt64 Infragistics.DropboxAppendV2UploadSessionRequest::Offset()" />*/
	offset: function (value) {
		if (arguments.length === 1) {
			this._offset = value;
			return value;
		} else {
			return this._offset;
		}
	}
	/*<EndProperty Name="System.UInt64 Infragistics.DropboxAppendV2UploadSessionRequest::Offset()" />*/
	,
	_data: null,
	/*<BeginProperty Name="System.Array Infragistics.DropboxAppendV2UploadSessionRequest::Data()" />*/
	data: function (value) {
		if (arguments.length === 1) {
			this._data = value;
			return value;
		} else {
			return this._data;
		}
	}
	/*<EndProperty Name="System.Array Infragistics.DropboxAppendV2UploadSessionRequest::Data()" />*/
	,
	_chunk: null,
	/*<BeginProperty Name="System.Object Infragistics.DropboxAppendV2UploadSessionRequest::Chunk()" />*/
	chunk: function (value) {
		if (arguments.length === 1) {
			this._chunk = value;
			return value;
		} else {
			return this._chunk;
		}
	}
	/*<EndProperty Name="System.Object Infragistics.DropboxAppendV2UploadSessionRequest::Chunk()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxAppendV2UploadSessionRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://content.dropboxapi.com/2/";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxAppendV2UploadSessionRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxAppendV2UploadSessionRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/upload_session/append_v2";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxAppendV2UploadSessionRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxAppendV2UploadSessionRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxAppendV2UploadSessionRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.DropboxAppendV2UploadSessionRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.none;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.DropboxAppendV2UploadSessionRequest::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.DropboxAppendV2UploadSessionRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var finishArgs = new $.ig.CPJSONObject(1);
		var cursor = new $.ig.CPJSONObject(1);
		finishArgs.setJSONForKey("cursor", cursor);
		cursor.setValueForKey("session_id", this.sessionId());
		cursor.setValueForKey("offset", this.offset());
		var headers = new $.ig.Dictionary(0);
		headers.item("Dropbox-API-Arg", finishArgs.convertToString());
		headers.item("Content-Type", "application/octet-stream");
		return headers;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.DropboxAppendV2UploadSessionRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.Array Infragistics.DropboxAppendV2UploadSessionRequest::ResolvePostContentData()" />*/
	resolvePostContentData: function () {
		return this.data();
	}
	/*<EndMethod Name="System.Array Infragistics.DropboxAppendV2UploadSessionRequest::ResolvePostContentData()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxAppendV2UploadSessionRequest::ResolvePostContentAsObject()" />*/
	resolvePostContentAsObject: function () {
		return this.chunk();
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxAppendV2UploadSessionRequest::ResolvePostContentAsObject()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxAppendV2UploadSessionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxAppendV2UploadSessionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('DropboxAppendV2UploadSessionRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxAppendV2UploadSessionRequest" />*/

/*<BeginType Name="Infragistics.DropboxFinishUploadSessionRequest" />*/

$.ig.util.defType('DropboxFinishUploadSessionRequest', 'DropboxRequestBase', {
	init: function (token, sessionId, offset, path, mode, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "DropBox_FinishUploadSession", token, success, error);
		this.sessionId(sessionId);
		this.offset(offset);
		this.path(path);
		this.mode(mode);
	},
	_sessionId: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxFinishUploadSessionRequest::SessionId()" />*/
	sessionId: function (value) {
		if (arguments.length === 1) {
			this._sessionId = value;
			return value;
		} else {
			return this._sessionId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFinishUploadSessionRequest::SessionId()" />*/
	,
	_offset: 0,
	/*<BeginProperty Name="System.UInt64 Infragistics.DropboxFinishUploadSessionRequest::Offset()" />*/
	offset: function (value) {
		if (arguments.length === 1) {
			this._offset = value;
			return value;
		} else {
			return this._offset;
		}
	}
	/*<EndProperty Name="System.UInt64 Infragistics.DropboxFinishUploadSessionRequest::Offset()" />*/
	,
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxFinishUploadSessionRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFinishUploadSessionRequest::Path()" />*/
	,
	_mode: 0,
	/*<BeginProperty Name="Infragistics.DropboxWriteMode Infragistics.DropboxFinishUploadSessionRequest::Mode()" />*/
	mode: function (value) {
		if (arguments.length === 1) {
			this._mode = value;
			return value;
		} else {
			return this._mode;
		}
	}
	/*<EndProperty Name="Infragistics.DropboxWriteMode Infragistics.DropboxFinishUploadSessionRequest::Mode()" />*/
	,
	_data: null,
	/*<BeginProperty Name="System.Array Infragistics.DropboxFinishUploadSessionRequest::Data()" />*/
	data: function (value) {
		if (arguments.length === 1) {
			this._data = value;
			return value;
		} else {
			return this._data;
		}
	}
	/*<EndProperty Name="System.Array Infragistics.DropboxFinishUploadSessionRequest::Data()" />*/
	,
	_chunk: null,
	/*<BeginProperty Name="System.Object Infragistics.DropboxFinishUploadSessionRequest::Chunk()" />*/
	chunk: function (value) {
		if (arguments.length === 1) {
			this._chunk = value;
			return value;
		} else {
			return this._chunk;
		}
	}
	/*<EndProperty Name="System.Object Infragistics.DropboxFinishUploadSessionRequest::Chunk()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxFinishUploadSessionRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://content.dropboxapi.com/2/";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxFinishUploadSessionRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxFinishUploadSessionRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "files/upload_session/finish";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxFinishUploadSessionRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxFinishUploadSessionRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxFinishUploadSessionRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.DropboxFinishUploadSessionRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.none;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.DropboxFinishUploadSessionRequest::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.DropboxFinishUploadSessionRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var finishArgs = new $.ig.CPJSONObject(1);
		var cursor = new $.ig.CPJSONObject(1);
		finishArgs.setJSONForKey("cursor", cursor);
		cursor.setValueForKey("session_id", this.sessionId());
		cursor.setValueForKey("offset", this.offset());
		var commit = new $.ig.CPJSONObject(1);
		finishArgs.setJSONForKey("commit", commit);
		commit.setValueForKey("path", this.path());
		commit.setValueForKey("mode", this.dropboxWriteModeString());
		var headers = new $.ig.Dictionary(0);
		headers.item("Dropbox-API-Arg", finishArgs.convertToString());
		headers.item("Content-Type", "application/octet-stream");
		return headers;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.DropboxFinishUploadSessionRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxFinishUploadSessionRequest::DropboxWriteModeString()" />*/
	dropboxWriteModeString: function () {
		if (this.mode() == $.ig.DropboxWriteMode.prototype.add) {
			return "add";
		} else {
			return "overwrite";
		}
	}
	/*<EndMethod Name="System.String Infragistics.DropboxFinishUploadSessionRequest::DropboxWriteModeString()" />*/
	,
	/*<BeginMethod Name="System.Array Infragistics.DropboxFinishUploadSessionRequest::ResolvePostContentData()" />*/
	resolvePostContentData: function () {
		return this.data();
	}
	/*<EndMethod Name="System.Array Infragistics.DropboxFinishUploadSessionRequest::ResolvePostContentData()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxFinishUploadSessionRequest::ResolvePostContentAsObject()" />*/
	resolvePostContentAsObject: function () {
		return this.chunk();
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxFinishUploadSessionRequest::ResolvePostContentAsObject()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxFinishUploadSessionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return (new $.ig.DropboxFile(1, response, this.tokenState().additionalIdentifier()));
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxFinishUploadSessionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('DropboxFinishUploadSessionRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxFinishUploadSessionRequest" />*/

/*<BeginType Name="Infragistics.DropboxSharingGetFileMetadataRequest" />*/

$.ig.util.defType('DropboxSharingGetFileMetadataRequest', 'DropboxRequestBase', {
	__actions: null,
	init: function (token, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "Dropbox_Sharing_GetFileMetadata", token, success, error);
		this.__actions = new $.ig.Array();
	},
	_file: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxSharingGetFileMetadataRequest::File()" />*/
	file: function (value) {
		if (arguments.length === 1) {
			this._file = value;
			return value;
		} else {
			return this._file;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxSharingGetFileMetadataRequest::File()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxSharingGetFileMetadataRequest::AddAction(Infragistics.DropboxFileAction)" />*/
	addAction: function (fileAction) {
		this.__actions.add($.ig.DropboxFileActionString.prototype.convertToString(fileAction));
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxSharingGetFileMetadataRequest::AddAction(Infragistics.DropboxFileAction)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingGetFileMetadataRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://api.dropboxapi.com/2/";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingGetFileMetadataRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingGetFileMetadataRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "sharing/get_file_metadata";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingGetFileMetadataRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxSharingGetFileMetadataRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxSharingGetFileMetadataRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingGetFileMetadataRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("file", this.file());
		if (this.__actions.length > 0) {
			content.setValueForKey("actions", this.__actions);
		}
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingGetFileMetadataRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxSharingGetFileMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return new $.ig.DropboxFilePermissions(response, this.tokenState().userInfo().getEmail(), this.tokenState().userInfo().getUserId());
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxSharingGetFileMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxSharingGetFileMetadataRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		$.ig.DropboxRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxSharingGetFileMetadataRequest::Error(Infragistics.CloudError)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.DropboxSharingGetFileMetadataRequest::IsIsFolderError(Infragistics.CloudError)" />*/
	isIsFolderError: function (e) {
		var json = e.responseData();
		return e.errorCode() == 409 && json != null && "is_folder" == json.resolveStringForKeyPath((function () {
			var $ret = new $.ig.Array();
			$ret.add("error");
			$ret.add("access_error");
			$ret.add(".tag");
			return $ret;
		}()));
	}
	/*<EndMethod Name="System.Boolean Infragistics.DropboxSharingGetFileMetadataRequest::IsIsFolderError(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('DropboxSharingGetFileMetadataRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxSharingGetFileMetadataRequest" />*/

/*<BeginType Name="Infragistics.DropboxSharingListFilePermissionsRequest" />*/

$.ig.util.defType('DropboxSharingListFilePermissionsRequest', 'DropboxRequestBase', {
	init: function (token, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "Dropbox_Sharing_GetFileMetadata", token, success, error);
	},
	_file: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxSharingListFilePermissionsRequest::File()" />*/
	file: function (value) {
		if (arguments.length === 1) {
			this._file = value;
			return value;
		} else {
			return this._file;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxSharingListFilePermissionsRequest::File()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingListFilePermissionsRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://api.dropboxapi.com/2/";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingListFilePermissionsRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingListFilePermissionsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "sharing/list_file_members";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingListFilePermissionsRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxSharingListFilePermissionsRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxSharingListFilePermissionsRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingListFilePermissionsRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("file", this.file());
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingListFilePermissionsRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxSharingListFilePermissionsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return new $.ig.DropboxFilePermissions(response, this.tokenState().userInfo().getEmail(), this.tokenState().userInfo().getUserId());
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxSharingListFilePermissionsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxSharingListFilePermissionsRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		$.ig.DropboxRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxSharingListFilePermissionsRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('DropboxSharingListFilePermissionsRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxSharingListFilePermissionsRequest" />*/

/*<BeginType Name="Infragistics.DropboxSharingRemoveFileMemberRequest" />*/

$.ig.util.defType('DropboxSharingRemoveFileMemberRequest', 'DropboxRequestBase', {
	init: function (token, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "Dropbox_remove_file_member", token, success, error);
	},
	_fileId: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxSharingRemoveFileMemberRequest::FileId()" />*/
	fileId: function (value) {
		if (arguments.length === 1) {
			this._fileId = value;
			return value;
		} else {
			return this._fileId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxSharingRemoveFileMemberRequest::FileId()" />*/
	,
	_email: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxSharingRemoveFileMemberRequest::Email()" />*/
	email: function (value) {
		if (arguments.length === 1) {
			this._email = value;
			return value;
		} else {
			return this._email;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxSharingRemoveFileMemberRequest::Email()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingRemoveFileMemberRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://api.dropboxapi.com/2/";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingRemoveFileMemberRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingRemoveFileMemberRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "sharing/remove_file_member_2";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingRemoveFileMemberRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxSharingRemoveFileMemberRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxSharingRemoveFileMemberRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingRemoveFileMemberRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("file", this.fileId());
		var member = new $.ig.CPJSONObject(1);
		member.setValueForKey(".tag", "email");
		member.setValueForKey("email", this.email());
		content.setValueForKey("member", member.jSONObject());
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingRemoveFileMemberRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxSharingRemoveFileMemberRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxSharingRemoveFileMemberRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxSharingRemoveFileMemberRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		$.ig.DropboxRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxSharingRemoveFileMemberRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('DropboxSharingRemoveFileMemberRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxSharingRemoveFileMemberRequest" />*/

/*<BeginType Name="Infragistics.DropboxFileActionString" />*/

$.ig.util.defType('DropboxFileActionString', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.String Infragistics.DropboxFileActionString::ConvertToString(Infragistics.DropboxFileAction)" />*/
	convertToString: function (fileAction) {
		if (fileAction == $.ig.DropboxFileAction.prototype.disableViewerInfo) {
			return "disable_viewer_info";
		} else if (fileAction == $.ig.DropboxFileAction.prototype.editContents) {
			return "edit_contents";
		} else if (fileAction == $.ig.DropboxFileAction.prototype.enableViewerInfo) {
			return "enable_viewer_info";
		} else if (fileAction == $.ig.DropboxFileAction.prototype.inviteViewer) {
			return "invite_viewer";
		} else if (fileAction == $.ig.DropboxFileAction.prototype.inviteViewerNoComment) {
			return "invite_viewer_no_comment";
		} else if (fileAction == $.ig.DropboxFileAction.prototype.unshare) {
			return "unshare";
		} else if (fileAction == $.ig.DropboxFileAction.prototype.relinquishMembership) {
			return "relinquish_membership";
		} else if (fileAction == $.ig.DropboxFileAction.prototype.createLink) {
			return "create_link";
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.DropboxFileActionString::ConvertToString(Infragistics.DropboxFileAction)" />*/
	,
	$type: new $.ig.Type('DropboxFileActionString', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxFileActionString" />*/

/*<BeginType Name="Infragistics.DropboxFilePermissions" />*/

$.ig.util.defType('DropboxFilePermissions', 'CloudFilePermissions', {
	__results: null,
	__permissions: null,
	__users: null,
	__invitees: null,
	__previewUrl: null,
	__email: null,
	__userId: null,
	__role: null,
	init: function (json, email, userId) {
		$.ig.CloudFilePermissions.prototype.init.call(this, 0);
		if (json != null) {
			this.__results = json.resolveListForKey("results");
			this.__permissions = json.resolveListForKey("permissions");
			this.__users = json.resolveListForKey("users");
			this.__invitees = json.resolveListForKey("invitees");
			this.__previewUrl = json.resolveStringForKey("preview_url");
			this.__email = email;
			this.__userId = userId;
			this.__role = json.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("access_type");
				$ret.add(".tag");
				return $ret;
			}()));
			if (this.__role != null) {
				if (this.__role == $.ig.DropboxFilePermissions.prototype._editorKey) {
					this.__editAccessLink = this.previewUrl();
				} else if (this.__role == $.ig.DropboxFilePermissions.prototype._viewerKey) {
					this.__viewAccessLink = this.previewUrl();
				}
			}
			this.setMembers();
		}
	},
	/*<BeginMethod Name="System.Void Infragistics.DropboxFilePermissions::SetMembers()" />*/
	setMembers: function () {
		if (this.__results != null) {
			for (var i = 0; i < this.__results.length; i++) {
				var permission = $.ig.CPJSONObject.prototype.createFromJSONObject(this.__results[i]);
				var email = permission.resolveStringForKeyPath((function () {
					var $ret = new $.ig.Array();
					$ret.add("member");
					$ret.add("email");
					return $ret;
				}()));
				var tag = permission.resolveStringForKeyPath((function () {
					var $ret = new $.ig.Array();
					$ret.add("result");
					$ret.add(".tag");
					return $ret;
				}()));
				var role = permission.resolveStringForKeyPath((function () {
					var $ret = new $.ig.Array();
					$ret.add("result");
					$ret.add("success");
					$ret.add(".tag");
					return $ret;
				}()));
				if (email != null && role != null && tag == "success") {
					this.setMemberInfo(email, email, null, role);
				}
			}
		}
		if (this.__users != null) {
			for (var i1 = 0; i1 < this.__users.length; i1++) {
				var permission1 = $.ig.CPJSONObject.prototype.createFromJSONObject(this.__users[i1]);
				var email1 = permission1.resolveStringForKeyPath((function () {
					var $ret = new $.ig.Array();
					$ret.add("user");
					$ret.add("email");
					return $ret;
				}()));
				var role1 = permission1.resolveStringForKeyPath((function () {
					var $ret = new $.ig.Array();
					$ret.add("access_type");
					$ret.add(".tag");
					return $ret;
				}()));
				if (email1 != null && role1 != null) {
					this.setMemberInfo(email1, email1, null, role1);
				}
			}
		}
		if (this.__invitees != null) {
			for (var i2 = 0; i2 < this.__invitees.length; i2++) {
				var permission2 = $.ig.CPJSONObject.prototype.createFromJSONObject(this.__invitees[i2]);
				var email2 = permission2.resolveStringForKeyPath((function () {
					var $ret = new $.ig.Array();
					$ret.add("invitee");
					$ret.add("email");
					return $ret;
				}()));
				var role2 = permission2.resolveStringForKeyPath((function () {
					var $ret = new $.ig.Array();
					$ret.add("access_type");
					$ret.add(".tag");
					return $ret;
				}()));
				if (email2 != null && role2 != null) {
					this.setMemberInfo(email2, email2, null, role2);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxFilePermissions::SetMembers()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxFilePermissions::SetMemberInfo(System.String, System.String, System.String, System.String)" />*/
	setMemberInfo: function (email, name, id, role) {
		if (role == $.ig.DropboxFilePermissions.prototype._ownerKey) {
			this.setMemberPermissions(new $.ig.CloudFileMemberPermissions(1, email, name, id, email, true, true, true, false));
		} else if (role == $.ig.DropboxFilePermissions.prototype._viewerKey) {
			this.setMemberPermissions(new $.ig.CloudFileMemberPermissions(1, email, name, id, email, false, false, true, false));
		} else if (role == $.ig.DropboxFilePermissions.prototype._editorKey) {
			this.setMemberPermissions(new $.ig.CloudFileMemberPermissions(1, email, name, id, email, false, true, false, false));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxFilePermissions::SetMemberInfo(System.String, System.String, System.String, System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.DropboxFilePermissions::IsActionAllowed(Infragistics.DropboxFileAction)" />*/
	isActionAllowed: function (fileAction) {
		var allowed = false;
		if (this.__permissions != null) {
			for (var i = 0; i < this.__permissions.length; i++) {
				var permission = $.ig.CPJSONObject.prototype.createFromJSONObject(this.__permissions[i]);
				var action = permission.resolveJSONForKey("action");
				var tag = action.resolveStringForKey(".tag");
				if (tag == $.ig.DropboxFileActionString.prototype.convertToString(fileAction)) {
					allowed = permission.resolveBoolForKey("allow");
					break;
				}
			}
		}
		return allowed;
	}
	/*<EndMethod Name="System.Boolean Infragistics.DropboxFilePermissions::IsActionAllowed(Infragistics.DropboxFileAction)" />*/
	,
	__viewAccessLink: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxFilePermissions::ViewAccessLink()" />*/
	viewAccessLink: function () {
		return this.__viewAccessLink;
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFilePermissions::ViewAccessLink()" />*/
	,
	__editAccessLink: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxFilePermissions::EditAccessLink()" />*/
	editAccessLink: function () {
		return this.__editAccessLink;
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFilePermissions::EditAccessLink()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.DropboxFilePermissions::Share()" />*/
	share: function () {
		return this.isActionAllowed($.ig.DropboxFileAction.prototype.createLink) || (this.__role != null && this.__role == $.ig.DropboxFilePermissions.prototype._ownerKey) || this.hasRole($.ig.DropboxFilePermissions.prototype._ownerKey);
	}
	/*<EndProperty Name="System.Boolean Infragistics.DropboxFilePermissions::Share()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.DropboxFilePermissions::View()" />*/
	view: function () {
		return (this.__role != null && this.__role == $.ig.DropboxFilePermissions.prototype._viewerKey) || this.hasRole($.ig.DropboxFilePermissions.prototype._viewerKey);
	}
	/*<EndProperty Name="System.Boolean Infragistics.DropboxFilePermissions::View()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.DropboxFilePermissions::Edit()" />*/
	edit: function () {
		return this.isActionAllowed($.ig.DropboxFileAction.prototype.editContents) || (this.__role != null && this.__role == $.ig.DropboxFilePermissions.prototype._editorKey) || this.hasRole($.ig.DropboxFilePermissions.prototype._editorKey);
	}
	/*<EndProperty Name="System.Boolean Infragistics.DropboxFilePermissions::Edit()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.DropboxFilePermissions::HasRole(System.String)" />*/
	hasRole: function (role) {
		var permissions = this.resolveMemberForEmail(this.__email);
		if (this.foundRoleForPermission(role, permissions)) {
			return true;
		}
		permissions = this.resolveMemberForUserId(this.__userId);
		return this.foundRoleForPermission(role, permissions);
	}
	/*<EndMethod Name="System.Boolean Infragistics.DropboxFilePermissions::HasRole(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.DropboxFilePermissions::FoundRoleForPermission(System.String, Infragistics.CloudFileMemberPermissions)" />*/
	foundRoleForPermission: function (role, permissions) {
		if (permissions != null) {
			if (role == $.ig.DropboxFilePermissions.prototype._ownerKey) {
				return permissions.isOwner();
			} else if (role == $.ig.DropboxFilePermissions.prototype._viewerKey) {
				return permissions.isViewer();
			} else if (role == $.ig.DropboxFilePermissions.prototype._editorKey) {
				return permissions.isEditor();
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.DropboxFilePermissions::FoundRoleForPermission(System.String, Infragistics.CloudFileMemberPermissions)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DropboxFilePermissions::PreviewUrl()" />*/
	previewUrl: function () {
		return this.__previewUrl;
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFilePermissions::PreviewUrl()" />*/
	,
	$type: new $.ig.Type('DropboxFilePermissions', $.ig.CloudFilePermissions.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxFilePermissions" />*/

/*<BeginType Name="Infragistics.DropboxExplicitSharePermissions" />*/

$.ig.util.defType('DropboxExplicitSharePermissions', 'CloudFilePermissions', {
	init: function () {
		$.ig.CloudFilePermissions.prototype.init.call(this, 0);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.DropboxExplicitSharePermissions::Share()" />*/
	share: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.DropboxExplicitSharePermissions::Share()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.DropboxExplicitSharePermissions::View()" />*/
	view: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.DropboxExplicitSharePermissions::View()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.DropboxExplicitSharePermissions::Edit()" />*/
	edit: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.DropboxExplicitSharePermissions::Edit()" />*/
	,
	$type: new $.ig.Type('DropboxExplicitSharePermissions', $.ig.CloudFilePermissions.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxExplicitSharePermissions" />*/

/*<BeginType Name="Infragistics.DropboxSharingAddFileMemberRequest" />*/

$.ig.util.defType('DropboxSharingAddFileMemberRequest', 'DropboxRequestBase', {
	init: function (token, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "Dropbox_Sharing_AddFileMember", token, success, error);
	},
	_file: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxSharingAddFileMemberRequest::File()" />*/
	file: function (value) {
		if (arguments.length === 1) {
			this._file = value;
			return value;
		} else {
			return this._file;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxSharingAddFileMemberRequest::File()" />*/
	,
	_email: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxSharingAddFileMemberRequest::Email()" />*/
	email: function (value) {
		if (arguments.length === 1) {
			this._email = value;
			return value;
		} else {
			return this._email;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxSharingAddFileMemberRequest::Email()" />*/
	,
	_accessLevel: 0,
	/*<BeginProperty Name="Infragistics.DropboxAccessLevel Infragistics.DropboxSharingAddFileMemberRequest::AccessLevel()" />*/
	accessLevel: function (value) {
		if (arguments.length === 1) {
			this._accessLevel = value;
			return value;
		} else {
			return this._accessLevel;
		}
	}
	/*<EndProperty Name="Infragistics.DropboxAccessLevel Infragistics.DropboxSharingAddFileMemberRequest::AccessLevel()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingAddFileMemberRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://api.dropboxapi.com/2/";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingAddFileMemberRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingAddFileMemberRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "sharing/add_file_member";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingAddFileMemberRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxSharingAddFileMemberRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxSharingAddFileMemberRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingAddFileMemberRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("file", this.file());
		var members = new $.ig.Array();
		var member = new $.ig.CPJSONObject(1);
		member.setValueForKey(".tag", "email");
		member.setValueForKey("email", this.email());
		members.add(member.jSONObject());
		content.setValueForKey("members", members);
		var accessLevel = new $.ig.CPJSONObject(1);
		accessLevel.setValueForKey(".tag", $.ig.DropboxAccessLevelString.prototype.convertToString(this.accessLevel()));
		content.setValueForKey("access_level", accessLevel.jSONObject());
		content.setValueForKey("quiet", true);
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingAddFileMemberRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxSharingAddFileMemberRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxSharingAddFileMemberRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxSharingAddFileMemberRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		$.ig.DropboxRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxSharingAddFileMemberRequest::Error(Infragistics.CloudError)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.DropboxSharingAddFileMemberRequest::IsIsFolderError(Infragistics.CloudError)" />*/
	isIsFolderError: function (e) {
		var json = e.responseData();
		return e.errorCode() == 409 && json != null && "is_folder" == json.resolveStringForKeyPath((function () {
			var $ret = new $.ig.Array();
			$ret.add("error");
			$ret.add("access_error");
			$ret.add(".tag");
			return $ret;
		}()));
	}
	/*<EndMethod Name="System.Boolean Infragistics.DropboxSharingAddFileMemberRequest::IsIsFolderError(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('DropboxSharingAddFileMemberRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxSharingAddFileMemberRequest" />*/

/*<BeginType Name="Infragistics.DropboxAccessLevelString" />*/

$.ig.util.defType('DropboxAccessLevelString', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.String Infragistics.DropboxAccessLevelString::ConvertToString(Infragistics.DropboxAccessLevel)" />*/
	convertToString: function (accessLevel) {
		if (accessLevel == $.ig.DropboxAccessLevel.prototype.owner) {
			return "owner";
		} else if (accessLevel == $.ig.DropboxAccessLevel.prototype.editor) {
			return "editor";
		} else if (accessLevel == $.ig.DropboxAccessLevel.prototype.viewer) {
			return "viewer";
		} else if (accessLevel == $.ig.DropboxAccessLevel.prototype.viewerNoComment) {
			return "viewer_no_comment";
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.DropboxAccessLevelString::ConvertToString(Infragistics.DropboxAccessLevel)" />*/
	,
	$type: new $.ig.Type('DropboxAccessLevelString', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxAccessLevelString" />*/

/*<BeginType Name="Infragistics.DropboxSharingGetFolderMetadataRequest" />*/

$.ig.util.defType('DropboxSharingGetFolderMetadataRequest', 'DropboxRequestBase', {
	__actions: null,
	init: function (token, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "Dropbox_Sharing_GetFolderMetadata", token, success, error);
		this.__actions = new $.ig.Array();
	},
	_sharedFolderId: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxSharingGetFolderMetadataRequest::SharedFolderId()" />*/
	sharedFolderId: function (value) {
		if (arguments.length === 1) {
			this._sharedFolderId = value;
			return value;
		} else {
			return this._sharedFolderId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxSharingGetFolderMetadataRequest::SharedFolderId()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxSharingGetFolderMetadataRequest::AddAction(Infragistics.DropboxFolderAction)" />*/
	addAction: function (folderAction) {
		this.__actions.add($.ig.DropboxFolderActionString.prototype.convertToString(folderAction));
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxSharingGetFolderMetadataRequest::AddAction(Infragistics.DropboxFolderAction)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingGetFolderMetadataRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://api.dropboxapi.com/2/";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingGetFolderMetadataRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingGetFolderMetadataRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "sharing/get_folder_metadata";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingGetFolderMetadataRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxSharingGetFolderMetadataRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxSharingGetFolderMetadataRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingGetFolderMetadataRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("shared_folder_id", this.sharedFolderId());
		if (this.__actions.length > 0) {
			content.setValueForKey("actions", this.__actions);
		}
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingGetFolderMetadataRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxSharingGetFolderMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return new $.ig.DropboxFilePermissions(response, this.tokenState().userInfo().getEmail(), this.tokenState().userInfo().getUserId());
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxSharingGetFolderMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxSharingGetFolderMetadataRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		$.ig.DropboxRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxSharingGetFolderMetadataRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('DropboxSharingGetFolderMetadataRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxSharingGetFolderMetadataRequest" />*/

/*<BeginType Name="Infragistics.DropboxFolderActionString" />*/

$.ig.util.defType('DropboxFolderActionString', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.String Infragistics.DropboxFolderActionString::ConvertToString(Infragistics.DropboxFolderAction)" />*/
	convertToString: function (folderAction) {
		if (folderAction == $.ig.DropboxFolderAction.prototype.changeOptions) {
			return "change_options";
		} else if (folderAction == $.ig.DropboxFolderAction.prototype.disableViewerInfo) {
			return "disable_viewer_info";
		}
		if (folderAction == $.ig.DropboxFolderAction.prototype.editContents) {
			return "edit_contents";
		}
		if (folderAction == $.ig.DropboxFolderAction.prototype.enableViewerInfo) {
			return "enable_viewer_info";
		}
		if (folderAction == $.ig.DropboxFolderAction.prototype.inviteEditor) {
			return "invite_editor";
		}
		if (folderAction == $.ig.DropboxFolderAction.prototype.inviteViewer) {
			return "invite_viewer";
		}
		if (folderAction == $.ig.DropboxFolderAction.prototype.inviteViewerNoComment) {
			return "invite_viewer_no_comment";
		}
		if (folderAction == $.ig.DropboxFolderAction.prototype.relinquishMembership) {
			return "relinquish_membership";
		}
		if (folderAction == $.ig.DropboxFolderAction.prototype.unmount) {
			return "unmount";
		}
		if (folderAction == $.ig.DropboxFolderAction.prototype.unshare) {
			return "unshare";
		}
		if (folderAction == $.ig.DropboxFolderAction.prototype.leaveACopy) {
			return "leave_a_copy";
		}
		if (folderAction == $.ig.DropboxFolderAction.prototype.createLink) {
			return "create_link";
		}
		if (folderAction == $.ig.DropboxFolderAction.prototype.setAccessInheritance) {
			return "set_access_inheritance";
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.DropboxFolderActionString::ConvertToString(Infragistics.DropboxFolderAction)" />*/
	,
	$type: new $.ig.Type('DropboxFolderActionString', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxFolderActionString" />*/

/*<BeginType Name="Infragistics.DropboxSharingShareFolderRequest" />*/

$.ig.util.defType('DropboxSharingShareFolderRequest', 'DropboxRequestBase', {
	init: function (token, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "Dropbox_Sharing_ShareFolder", token, success, error);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxSharingShareFolderRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxSharingShareFolderRequest::Path()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingShareFolderRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://api.dropboxapi.com/2/";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingShareFolderRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingShareFolderRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "sharing/share_folder";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingShareFolderRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxSharingShareFolderRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxSharingShareFolderRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingShareFolderRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("path", this.path());
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingShareFolderRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxSharingShareFolderRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxSharingShareFolderRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxSharingShareFolderRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		$.ig.DropboxRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxSharingShareFolderRequest::Error(Infragistics.CloudError)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.DropboxSharingShareFolderRequest::IsAlreadySharedError(Infragistics.CloudError)" />*/
	isAlreadySharedError: function (e) {
		var json = e.responseData();
		return e.errorCode() == 409 && json != null && "already_shared" == json.resolveStringForKeyPath((function () {
			var $ret = new $.ig.Array();
			$ret.add("error");
			$ret.add("bad_path");
			$ret.add(".tag");
			return $ret;
		}()));
	}
	/*<EndMethod Name="System.Boolean Infragistics.DropboxSharingShareFolderRequest::IsAlreadySharedError(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('DropboxSharingShareFolderRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxSharingShareFolderRequest" />*/

/*<BeginType Name="Infragistics.DropboxSharingAddFolderMemberRequest" />*/

$.ig.util.defType('DropboxSharingAddFolderMemberRequest', 'DropboxRequestBase', {
	init: function (token, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "Dropbox_Sharing_AddFolderMember", token, success, error);
	},
	_sharedFolderId: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxSharingAddFolderMemberRequest::SharedFolderId()" />*/
	sharedFolderId: function (value) {
		if (arguments.length === 1) {
			this._sharedFolderId = value;
			return value;
		} else {
			return this._sharedFolderId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxSharingAddFolderMemberRequest::SharedFolderId()" />*/
	,
	_memberEmail: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxSharingAddFolderMemberRequest::MemberEmail()" />*/
	memberEmail: function (value) {
		if (arguments.length === 1) {
			this._memberEmail = value;
			return value;
		} else {
			return this._memberEmail;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxSharingAddFolderMemberRequest::MemberEmail()" />*/
	,
	_accessLevel: 0,
	/*<BeginProperty Name="Infragistics.DropboxAccessLevel Infragistics.DropboxSharingAddFolderMemberRequest::AccessLevel()" />*/
	accessLevel: function (value) {
		if (arguments.length === 1) {
			this._accessLevel = value;
			return value;
		} else {
			return this._accessLevel;
		}
	}
	/*<EndProperty Name="Infragistics.DropboxAccessLevel Infragistics.DropboxSharingAddFolderMemberRequest::AccessLevel()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingAddFolderMemberRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://api.dropboxapi.com/2/";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingAddFolderMemberRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingAddFolderMemberRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "sharing/add_folder_member";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingAddFolderMemberRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxSharingAddFolderMemberRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxSharingAddFolderMemberRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingAddFolderMemberRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("shared_folder_id", this.sharedFolderId());
		var members = new $.ig.Array();
		var member = new $.ig.CPJSONObject(1);
		var memberEmail = new $.ig.CPJSONObject(1);
		memberEmail.setValueForKey(".tag", "email");
		memberEmail.setValueForKey("email", this.memberEmail());
		member.setValueForKey("member", memberEmail.jSONObject());
		member.setValueForKey("access_level", $.ig.DropboxAccessLevelString.prototype.convertToString(this.accessLevel()));
		members.add(member.jSONObject());
		content.setValueForKey("members", members);
		content.setValueForKey("quiet", true);
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingAddFolderMemberRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxSharingAddFolderMemberRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxSharingAddFolderMemberRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxSharingAddFolderMemberRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		$.ig.DropboxRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxSharingAddFolderMemberRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('DropboxSharingAddFolderMemberRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxSharingAddFolderMemberRequest" />*/

/*<BeginType Name="Infragistics.DropboxSharingMountFolderRequest" />*/

$.ig.util.defType('DropboxSharingMountFolderRequest', 'DropboxRequestBase', {
	init: function (token, success, error) {
		$.ig.DropboxRequestBase.prototype.init.call(this, 0, "Dropbox_Sharing_MountFolder", token, success, error);
	},
	_sharedFolderId: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxSharingMountFolderRequest::SharedFolderId()" />*/
	sharedFolderId: function (value) {
		if (arguments.length === 1) {
			this._sharedFolderId = value;
			return value;
		} else {
			return this._sharedFolderId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxSharingMountFolderRequest::SharedFolderId()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingMountFolderRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://api.dropboxapi.com/2/";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingMountFolderRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingMountFolderRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "sharing/mount_folder";
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingMountFolderRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxSharingMountFolderRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.DropboxSharingMountFolderRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxSharingMountFolderRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("shared_folder_id", this.sharedFolderId());
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.DropboxSharingMountFolderRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.DropboxSharingMountFolderRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.DropboxSharingMountFolderRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxSharingMountFolderRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		$.ig.DropboxRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxSharingMountFolderRequest::Error(Infragistics.CloudError)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.DropboxSharingMountFolderRequest::IsAlreadyMountedError(Infragistics.CloudError)" />*/
	isAlreadyMountedError: function (e) {
		var json = e.responseData();
		return e.errorCode() == 409 && json != null && "already_mounted" == json.resolveStringForKeyPath((function () {
			var $ret = new $.ig.Array();
			$ret.add("error");
			$ret.add(".tag");
			return $ret;
		}()));
	}
	/*<EndMethod Name="System.Boolean Infragistics.DropboxSharingMountFolderRequest::IsAlreadyMountedError(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('DropboxSharingMountFolderRequest', $.ig.DropboxRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxSharingMountFolderRequest" />*/

/*<BeginType Name="Infragistics.GoogleAdsRequestBase" />*/

$.ig.util.defType('GoogleAdsRequestBase', 'OAuthRequestBase', {
	init: function (key, token, success, error) {
		$.ig.OAuthRequestBase.prototype.init.call(this, 0, key, token, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleAdsRequestBase::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://googleads.googleapis.com/v6/";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAdsRequestBase::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleAdsRequestBase::ResolveAction()" />*/
	resolveAction: function () {
		return "";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAdsRequestBase::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.OAuthProvider Infragistics.GoogleAdsRequestBase::ResolveProvider(Infragistics.TokenState)" />*/
	resolveProvider: function (token) {
		return new $.ig.GoogleOAuthProvider(1, token.providerKeys(), token.provider());
	}
	/*<EndMethod Name="Infragistics.OAuthProvider Infragistics.GoogleAdsRequestBase::ResolveProvider(Infragistics.TokenState)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GoogleAdsRequestBase::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var headers = $.ig.OAuthRequestBase.prototype.resolveAdditionalHeaderFields.call(this);
		if (headers == null) {
			headers = new $.ig.Dictionary(0);
		}
		headers.item("developer-token", $.ig.GoogleAdsRequestBase.prototype.dEVELOPER_TOKEN);
		return headers;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GoogleAdsRequestBase::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleAdsRequestBase::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleAdsRequestBase::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('GoogleAdsRequestBase', $.ig.OAuthRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAdsRequestBase" />*/

/*<BeginType Name="Infragistics.GoogleAdsCustomersRequest" />*/

$.ig.util.defType('GoogleAdsCustomersRequest', 'GoogleAdsRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleAdsRequestBase.prototype.init.call(this, "GoogleAdsCustomers", token, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleAdsCustomersRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "customers:listAccessibleCustomers";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAdsCustomersRequest::ResolveAction()" />*/
	,
	$type: new $.ig.Type('GoogleAdsCustomersRequest', $.ig.GoogleAdsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAdsCustomersRequest" />*/

/*<BeginType Name="Infragistics.GoogleAdsCustomerInfoRequest" />*/

$.ig.util.defType('GoogleAdsCustomerInfoRequest', 'GoogleAdsRequestBase', {
	__customerId: null,
	init: function (token, customerId, success, error) {
		$.ig.GoogleAdsRequestBase.prototype.init.call(this, "GoogleAdsCustomerInfo", token, success, error);
		this.__customerId = customerId;
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleAdsCustomerInfoRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "customers/" + this.__customerId;
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAdsCustomerInfoRequest::ResolveAction()" />*/
	,
	$type: new $.ig.Type('GoogleAdsCustomerInfoRequest', $.ig.GoogleAdsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAdsCustomerInfoRequest" />*/

/*<BeginType Name="Infragistics.GoogleAdsMetadataSearchRequest" />*/

$.ig.util.defType('GoogleAdsMetadataSearchRequest', 'GoogleAdsRequestBase', {
	__query: null,
	init: function (token, query, success, error) {
		$.ig.GoogleAdsRequestBase.prototype.init.call(this, "GoogleAdsMetadataSearch", token, success, error);
		this.__query = query;
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleAdsMetadataSearchRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "googleAdsFields:search";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAdsMetadataSearchRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleAdsMetadataSearchRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleAdsMetadataSearchRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleAdsMetadataSearchRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var request = new $.ig.CPJSONObject(1);
		request.setValueForKey("query", this.__query);
		return request.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAdsMetadataSearchRequest::ResolvePostContent()" />*/
	,
	$type: new $.ig.Type('GoogleAdsMetadataSearchRequest', $.ig.GoogleAdsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAdsMetadataSearchRequest" />*/

/*<BeginType Name="Infragistics.GoogleAdsSearchRequest" />*/

$.ig.util.defType('GoogleAdsSearchRequest', 'GoogleAdsRequestBase', {
	__customerId: null,
	__query: null,
	init: function (token, customerId, query, success, error) {
		$.ig.GoogleAdsRequestBase.prototype.init.call(this, "GoogleAdsSearch", token, success, error);
		this.__customerId = customerId;
		this.__query = query;
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleAdsSearchRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "customers/" + this.__customerId + "/googleAds:search";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAdsSearchRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleAdsSearchRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleAdsSearchRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleAdsSearchRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var request = new $.ig.CPJSONObject(1);
		request.setValueForKey("query", this.__query);
		return request.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAdsSearchRequest::ResolvePostContent()" />*/
	,
	$type: new $.ig.Type('GoogleAdsSearchRequest', $.ig.GoogleAdsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAdsSearchRequest" />*/

/*<BeginType Name="Infragistics.GoogleAnalyticsMetadataColumnObject" />*/

$.ig.util.defType('GoogleAnalyticsMetadataColumnObject', 'Object', {
	_addedInApiVersion: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsMetadataColumnObject::AddedInApiVersion()" />*/
	addedInApiVersion: function (value) {
		if (arguments.length === 1) {
			this._addedInApiVersion = value;
			return value;
		} else {
			return this._addedInApiVersion;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsMetadataColumnObject::AddedInApiVersion()" />*/
	,
	_allowedInSegements: false,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleAnalyticsMetadataColumnObject::AllowedInSegements()" />*/
	allowedInSegements: function (value) {
		if (arguments.length === 1) {
			this._allowedInSegements = value;
			return value;
		} else {
			return this._allowedInSegements;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleAnalyticsMetadataColumnObject::AllowedInSegements()" />*/
	,
	_columnDataType: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsMetadataColumnObject::ColumnDataType()" />*/
	columnDataType: function (value) {
		if (arguments.length === 1) {
			this._columnDataType = value;
			return value;
		} else {
			return this._columnDataType;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsMetadataColumnObject::ColumnDataType()" />*/
	,
	_columnType: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsMetadataColumnObject::ColumnType()" />*/
	columnType: function (value) {
		if (arguments.length === 1) {
			this._columnType = value;
			return value;
		} else {
			return this._columnType;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsMetadataColumnObject::ColumnType()" />*/
	,
	_description: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsMetadataColumnObject::Description()" />*/
	description: function (value) {
		if (arguments.length === 1) {
			this._description = value;
			return value;
		} else {
			return this._description;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsMetadataColumnObject::Description()" />*/
	,
	_group: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsMetadataColumnObject::Group()" />*/
	group: function (value) {
		if (arguments.length === 1) {
			this._group = value;
			return value;
		} else {
			return this._group;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsMetadataColumnObject::Group()" />*/
	,
	_idName: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsMetadataColumnObject::IdName()" />*/
	idName: function (value) {
		if (arguments.length === 1) {
			this._idName = value;
			return value;
		} else {
			return this._idName;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsMetadataColumnObject::IdName()" />*/
	,
	_replacedBy: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsMetadataColumnObject::ReplacedBy()" />*/
	replacedBy: function (value) {
		if (arguments.length === 1) {
			this._replacedBy = value;
			return value;
		} else {
			return this._replacedBy;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsMetadataColumnObject::ReplacedBy()" />*/
	,
	_status: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsMetadataColumnObject::Status()" />*/
	status: function (value) {
		if (arguments.length === 1) {
			this._status = value;
			return value;
		} else {
			return this._status;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsMetadataColumnObject::Status()" />*/
	,
	_uiName: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsMetadataColumnObject::UiName()" />*/
	uiName: function (value) {
		if (arguments.length === 1) {
			this._uiName = value;
			return value;
		} else {
			return this._uiName;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsMetadataColumnObject::UiName()" />*/
	,
	init: function (columnId) {
		$.ig.Object.prototype.init.call(this);
		this.idName(columnId);
	},
	/*<BeginMethod Name="System.Void Infragistics.GoogleAnalyticsMetadataColumnObject::CopyFrom(Infragistics.GoogleAnalyticsMetadataColumnObject)" />*/
	copyFrom: function (o) {
		this.addedInApiVersion(o.addedInApiVersion());
		this.allowedInSegements(o.allowedInSegements());
		this.columnDataType(o.columnDataType());
		this.columnType(o.columnType());
		this.description(o.description());
		this.group(o.group());
		this.replacedBy(o.replacedBy());
		this.status(o.status());
		this.uiName(o.uiName());
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleAnalyticsMetadataColumnObject::CopyFrom(Infragistics.GoogleAnalyticsMetadataColumnObject)" />*/
	,
	$type: new $.ig.Type('GoogleAnalyticsMetadataColumnObject', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAnalyticsMetadataColumnObject" />*/

/*<BeginType Name="Infragistics.GoogleAnalyticsMetadataSegmentObject" />*/

$.ig.util.defType('GoogleAnalyticsMetadataSegmentObject', 'Object', {
	_segmentType: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsMetadataSegmentObject::SegmentType()" />*/
	segmentType: function (value) {
		if (arguments.length === 1) {
			this._segmentType = value;
			return value;
		} else {
			return this._segmentType;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsMetadataSegmentObject::SegmentType()" />*/
	,
	_definition: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsMetadataSegmentObject::Definition()" />*/
	definition: function (value) {
		if (arguments.length === 1) {
			this._definition = value;
			return value;
		} else {
			return this._definition;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsMetadataSegmentObject::Definition()" />*/
	,
	_idName: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsMetadataSegmentObject::IdName()" />*/
	idName: function (value) {
		if (arguments.length === 1) {
			this._idName = value;
			return value;
		} else {
			return this._idName;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsMetadataSegmentObject::IdName()" />*/
	,
	_segmentId: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsMetadataSegmentObject::SegmentId()" />*/
	segmentId: function (value) {
		if (arguments.length === 1) {
			this._segmentId = value;
			return value;
		} else {
			return this._segmentId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsMetadataSegmentObject::SegmentId()" />*/
	,
	_selfLink: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsMetadataSegmentObject::SelfLink()" />*/
	selfLink: function (value) {
		if (arguments.length === 1) {
			this._selfLink = value;
			return value;
		} else {
			return this._selfLink;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsMetadataSegmentObject::SelfLink()" />*/
	,
	_uiName: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsMetadataSegmentObject::UiName()" />*/
	uiName: function (value) {
		if (arguments.length === 1) {
			this._uiName = value;
			return value;
		} else {
			return this._uiName;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsMetadataSegmentObject::UiName()" />*/
	,
	init: function (segmentId) {
		$.ig.Object.prototype.init.call(this);
		this.idName(segmentId);
	},
	$type: new $.ig.Type('GoogleAnalyticsMetadataSegmentObject', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAnalyticsMetadataSegmentObject" />*/

/*<BeginType Name="Infragistics.GoogleAnalyticsFilterObjectBase" />*/

$.ig.util.defType('GoogleAnalyticsFilterObjectBase', 'Object', {
	_operator: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsFilterObjectBase::Operator()" />*/
	operator: function (value) {
		if (arguments.length === 1) {
			this._operator = value;
			return value;
		} else {
			return this._operator;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsFilterObjectBase::Operator()" />*/
	,
	_filterValue: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsFilterObjectBase::FilterValue()" />*/
	filterValue: function (value) {
		if (arguments.length === 1) {
			this._filterValue = value;
			return value;
		} else {
			return this._filterValue;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsFilterObjectBase::FilterValue()" />*/
	,
	_not: false,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleAnalyticsFilterObjectBase::Not()" />*/
	not: function (value) {
		if (arguments.length === 1) {
			this._not = value;
			return value;
		} else {
			return this._not;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleAnalyticsFilterObjectBase::Not()" />*/
	,
	_caseSensitive: false,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleAnalyticsFilterObjectBase::CaseSensitive()" />*/
	caseSensitive: function (value) {
		if (arguments.length === 1) {
			this._caseSensitive = value;
			return value;
		} else {
			return this._caseSensitive;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleAnalyticsFilterObjectBase::CaseSensitive()" />*/
	,
	_orFilters: null,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.GoogleAnalyticsFilterObjectBase::OrFilters()" />*/
	orFilters: function (value) {
		if (arguments.length === 1) {
			this._orFilters = value;
			return value;
		} else {
			return this._orFilters;
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.GoogleAnalyticsFilterObjectBase::OrFilters()" />*/
	,
	init: function (notOperator, comparisonOperator, filter, caseSensitiveFilter) {
		$.ig.Object.prototype.init.call(this);
		this.operator(comparisonOperator);
		this.filterValue(filter);
		this.not(notOperator);
		this.caseSensitive(caseSensitiveFilter);
		this.orFilters(new $.ig.Array());
	},
	$type: new $.ig.Type('GoogleAnalyticsFilterObjectBase', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAnalyticsFilterObjectBase" />*/

/*<BeginType Name="Infragistics.GoogleAnalyticsDimensionFilterObject" />*/

$.ig.util.defType('GoogleAnalyticsDimensionFilterObject', 'GoogleAnalyticsFilterObjectBase', {
	_dimensionName: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsDimensionFilterObject::DimensionName()" />*/
	dimensionName: function (value) {
		if (arguments.length === 1) {
			this._dimensionName = value;
			return value;
		} else {
			return this._dimensionName;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsDimensionFilterObject::DimensionName()" />*/
	,
	init: function (dimension, notOperator, comparisonOperator, filter, caseSensitiveFilter) {
		$.ig.GoogleAnalyticsFilterObjectBase.prototype.init.call(this, notOperator, comparisonOperator, filter, caseSensitiveFilter);
		this.dimensionName(dimension);
	},
	$type: new $.ig.Type('GoogleAnalyticsDimensionFilterObject', $.ig.GoogleAnalyticsFilterObjectBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAnalyticsDimensionFilterObject" />*/

/*<BeginType Name="Infragistics.GoogleAnalyticsMetricFilterObject" />*/

$.ig.util.defType('GoogleAnalyticsMetricFilterObject', 'GoogleAnalyticsFilterObjectBase', {
	_metricName: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsMetricFilterObject::MetricName()" />*/
	metricName: function (value) {
		if (arguments.length === 1) {
			this._metricName = value;
			return value;
		} else {
			return this._metricName;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsMetricFilterObject::MetricName()" />*/
	,
	init: function (metric, notOperator, comparisonOperator, filter, caseSensitiveFilter) {
		$.ig.GoogleAnalyticsFilterObjectBase.prototype.init.call(this, notOperator, comparisonOperator, filter, caseSensitiveFilter);
		this.metricName(metric);
	},
	$type: new $.ig.Type('GoogleAnalyticsMetricFilterObject', $.ig.GoogleAnalyticsFilterObjectBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAnalyticsMetricFilterObject" />*/

/*<BeginType Name="Infragistics.GoogleAnalyticsSortingObject" />*/

$.ig.util.defType('GoogleAnalyticsSortingObject', 'Object', {
	_fieldName: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsSortingObject::FieldName()" />*/
	fieldName: function (value) {
		if (arguments.length === 1) {
			this._fieldName = value;
			return value;
		} else {
			return this._fieldName;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsSortingObject::FieldName()" />*/
	,
	_sortDirection: 0,
	/*<BeginProperty Name="Infragistics.GoogleAnalyticsSortDirection Infragistics.GoogleAnalyticsSortingObject::SortDirection()" />*/
	sortDirection: function (value) {
		if (arguments.length === 1) {
			this._sortDirection = value;
			return value;
		} else {
			return this._sortDirection;
		}
	}
	/*<EndProperty Name="Infragistics.GoogleAnalyticsSortDirection Infragistics.GoogleAnalyticsSortingObject::SortDirection()" />*/
	,
	init: function (field, sort) {
		$.ig.Object.prototype.init.call(this);
		this.fieldName(field);
		this.sortDirection(sort);
	},
	$type: new $.ig.Type('GoogleAnalyticsSortingObject', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAnalyticsSortingObject" />*/

/*<BeginType Name="Infragistics.GoogleAnalyticsDataObject" />*/

$.ig.util.defType('GoogleAnalyticsDataObject', 'Object', {
	_viewId: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsDataObject::ViewId()" />*/
	viewId: function (value) {
		if (arguments.length === 1) {
			this._viewId = value;
			return value;
		} else {
			return this._viewId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsDataObject::ViewId()" />*/
	,
	_dateRanges: null,
	/*<BeginProperty Name="Infragistics.CPDictionary Infragistics.GoogleAnalyticsDataObject::DateRanges()" />*/
	dateRanges: function (value) {
		if (arguments.length === 1) {
			this._dateRanges = value;
			return value;
		} else {
			return this._dateRanges;
		}
	}
	/*<EndProperty Name="Infragistics.CPDictionary Infragistics.GoogleAnalyticsDataObject::DateRanges()" />*/
	,
	_datePaging: null,
	/*<BeginProperty Name="System.Object Infragistics.GoogleAnalyticsDataObject::DatePaging()" />*/
	datePaging: function (value) {
		if (arguments.length === 1) {
			this._datePaging = value;
			return value;
		} else {
			return this._datePaging;
		}
	}
	/*<EndProperty Name="System.Object Infragistics.GoogleAnalyticsDataObject::DatePaging()" />*/
	,
	_dimensions: null,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::Dimensions()" />*/
	dimensions: function (value) {
		if (arguments.length === 1) {
			this._dimensions = value;
			return value;
		} else {
			return this._dimensions;
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::Dimensions()" />*/
	,
	_metrics: null,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::Metrics()" />*/
	metrics: function (value) {
		if (arguments.length === 1) {
			this._metrics = value;
			return value;
		} else {
			return this._metrics;
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::Metrics()" />*/
	,
	_segments: null,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::Segments()" />*/
	segments: function (value) {
		if (arguments.length === 1) {
			this._segments = value;
			return value;
		} else {
			return this._segments;
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::Segments()" />*/
	,
	_filters: null,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::Filters()" />*/
	filters: function (value) {
		if (arguments.length === 1) {
			this._filters = value;
			return value;
		} else {
			return this._filters;
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::Filters()" />*/
	,
	_sorts: null,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::Sorts()" />*/
	sorts: function (value) {
		if (arguments.length === 1) {
			this._sorts = value;
			return value;
		} else {
			return this._sorts;
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::Sorts()" />*/
	,
	_pageSize: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsDataObject::PageSize()" />*/
	pageSize: function (value) {
		if (arguments.length === 1) {
			this._pageSize = value;
			return value;
		} else {
			return this._pageSize;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsDataObject::PageSize()" />*/
	,
	_pageToken: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsDataObject::PageToken()" />*/
	pageToken: function (value) {
		if (arguments.length === 1) {
			this._pageToken = value;
			return value;
		} else {
			return this._pageToken;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsDataObject::PageToken()" />*/
	,
	_resource: 0,
	/*<BeginProperty Name="Infragistics.GoogleAnalyticsResourceType Infragistics.GoogleAnalyticsDataObject::Resource()" />*/
	resource: function (value) {
		if (arguments.length === 1) {
			this._resource = value;
			return value;
		} else {
			return this._resource;
		}
	}
	/*<EndProperty Name="Infragistics.GoogleAnalyticsResourceType Infragistics.GoogleAnalyticsDataObject::Resource()" />*/
	,
	_userIncludedSegment: false,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleAnalyticsDataObject::UserIncludedSegment()" />*/
	userIncludedSegment: function (value) {
		if (arguments.length === 1) {
			this._userIncludedSegment = value;
			return value;
		} else {
			return this._userIncludedSegment;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleAnalyticsDataObject::UserIncludedSegment()" />*/
	,
	init: function () {
		$.ig.Object.prototype.init.call(this);
		this.dateRanges(new $.ig.Dictionary(0));
		this.dimensions(new $.ig.Array());
		this.metrics(new $.ig.Array());
		this.segments(new $.ig.Array());
		this.filters(new $.ig.Array());
		this.sorts(new $.ig.Array());
		this.pageSize("1000");
		this.userIncludedSegment(false);
		this.resource($.ig.GoogleAnalyticsResourceType.prototype.rEPORT);
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleAnalyticsDataObject::DataObjectToJSON()" />*/
	dataObjectToJSON: function () {
		var jsonBody = new $.ig.CPJSONObject(1);
		var jsonRequests = new $.ig.CPJSONObject(1);
		var requestList = new $.ig.Array();
		requestList.add(jsonRequests.jSONObject());
		jsonBody.setValueForKey("reportRequests", requestList);
		jsonRequests.setValueForKey("viewId", this.viewId());
		if (this.dateRanges().count() == 2) {
			jsonRequests.setValueForKey("dateRanges", this.parseDateRanges());
		}
		if (this.metrics().length > 0) {
			jsonRequests.setValueForKey("metrics", this.parseMetrics());
		}
		if (this.dimensions().length > 0 || this.segments().length > 0) {
			jsonRequests.setValueForKey("dimensions", this.parseDimensions());
		}
		if (this.segments().length > 0) {
			jsonRequests.setValueForKey("segments", this.parseSegments());
		}
		if (this.filters().length > 0) {
			var dimensionFilters = this.parseFilters(false);
			if (dimensionFilters != null && dimensionFilters.length > 0) {
				jsonRequests.setValueForKey("dimensionFilterClauses", dimensionFilters);
			}
			var metricsFilters = this.parseFilters(true);
			if (metricsFilters != null && metricsFilters.length > 0) {
				jsonRequests.setValueForKey("metricFilterClauses", metricsFilters);
			}
		}
		if (this.sorts().length > 0) {
			jsonRequests.setValueForKey("orderBys", this.parseSorts());
		}
		if (this.pageSize() != null && this.pageSize().length > 0) {
			jsonRequests.setValueForKey("pageSize", this.pageSize());
		}
		if (this.pageToken() != null && this.pageToken().length > 0) {
			jsonRequests.setValueForKey("pageToken", this.pageToken());
		}
		return jsonBody.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAnalyticsDataObject::DataObjectToJSON()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::ParseDateRanges()" />*/
	parseDateRanges: function () {
		var jsonRangeObject = new $.ig.CPJSONObject(1);
		var dateRangesList = new $.ig.Array();
		dateRangesList.add(jsonRangeObject.jSONObject());
		jsonRangeObject.setValueForKey("startDate", this.dateRanges().item("startDate"));
		jsonRangeObject.setValueForKey("endDate", this.dateRanges().item("endDate"));
		return dateRangesList;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::ParseDateRanges()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::ParseDimensions()" />*/
	parseDimensions: function () {
		var jsonDimensionsObject;
		var dimensionsList = new $.ig.Array();
		for (var i = 0; i < this.dimensions().length; i++) {
			jsonDimensionsObject = new $.ig.CPJSONObject(1);
			jsonDimensionsObject.setValueForKey("name", this.dimensions()[i]);
			dimensionsList.add(jsonDimensionsObject.jSONObject());
			if ((this.dimensions()[i]).equals("ga:segment")) {
				this.userIncludedSegment(true);
			}
		}
		if (this.segments().length > 0 && !this.userIncludedSegment()) {
			jsonDimensionsObject = new $.ig.CPJSONObject(1);
			jsonDimensionsObject.setValueForKey("name", "ga:segment");
			dimensionsList.add(jsonDimensionsObject.jSONObject());
		}
		return dimensionsList;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::ParseDimensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::ParseMetrics()" />*/
	parseMetrics: function () {
		var jsonMetricObject;
		var metricsList = new $.ig.Array();
		for (var i = 0; i < this.metrics().length; i++) {
			jsonMetricObject = new $.ig.CPJSONObject(1);
			jsonMetricObject.setValueForKey("expression", this.metrics()[i]);
			metricsList.add(jsonMetricObject.jSONObject());
		}
		return metricsList;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::ParseMetrics()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::ParseSegments()" />*/
	parseSegments: function () {
		var jsonSegmentsObject;
		var segmentsList = new $.ig.Array();
		for (var i = 0; i < this.segments().length; i++) {
			jsonSegmentsObject = new $.ig.CPJSONObject(1);
			jsonSegmentsObject.setValueForKey("segmentId", this.segments()[i]);
			segmentsList.add(jsonSegmentsObject.jSONObject());
		}
		return segmentsList;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::ParseSegments()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::ParseFilters(System.Boolean)" />*/
	parseFilters: function (parseMetricFilters) {
		var hasFilters = false;
		var columnFiltersList = new $.ig.Array();
		for (var i = 0; i < this.filters().length; i++) {
			var filtersList = new $.ig.Array();
			var filterObject = this.filters()[i];
			if ($.ig.util.cast($.ig.GoogleAnalyticsDimensionFilterObject.prototype.$type, filterObject) !== null) {
				if (parseMetricFilters) {
					continue;
				}
				hasFilters = true;
				var dimensionFilterObject = filterObject;
				filtersList.add(this.createJsonFilterObject(filterObject, true).jSONObject());
				for (var j = 0; j < dimensionFilterObject.orFilters().length; j++) {
					filtersList.add(this.createJsonFilterObject(dimensionFilterObject.orFilters()[j], true).jSONObject());
				}
			} else if ($.ig.util.cast($.ig.GoogleAnalyticsMetricFilterObject.prototype.$type, filterObject) !== null) {
				if (!parseMetricFilters) {
					continue;
				}
				hasFilters = true;
				var metricFilterObject = filterObject;
				filtersList.add(this.createJsonFilterObject(filterObject, false).jSONObject());
				for (var j1 = 0; j1 < metricFilterObject.orFilters().length; j1++) {
					filtersList.add(this.createJsonFilterObject(metricFilterObject.orFilters()[j1], false).jSONObject());
				}
			} else {
				continue;
			}
			var jsonColumnFilterObject = new $.ig.CPJSONObject(1);
			jsonColumnFilterObject.setValueForKey("filters", filtersList);
			columnFiltersList.add(jsonColumnFilterObject.jSONObject());
		}
		if (!hasFilters) {
			return null;
		}
		return columnFiltersList;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::ParseFilters(System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPJSONObject Infragistics.GoogleAnalyticsDataObject::CreateJsonFilterObject(System.Object, System.Boolean)" />*/
	createJsonFilterObject: function (filterObject, isDimension) {
		var jsonFiltersObject = new $.ig.CPJSONObject(1);
		if (isDimension) {
			var dimensionFilterObject = filterObject;
			jsonFiltersObject.setValueForKey("dimensionName", dimensionFilterObject.dimensionName());
			jsonFiltersObject.setValueForKey("operator", dimensionFilterObject.operator());
			var expressionList = new $.ig.Array();
			expressionList.add(dimensionFilterObject.filterValue());
			jsonFiltersObject.setValueForKey("expressions", expressionList);
			jsonFiltersObject.setValueForKey("not", dimensionFilterObject.not());
			jsonFiltersObject.setValueForKey("caseSensitive", dimensionFilterObject.caseSensitive());
		} else {
			var metricFilterObject = filterObject;
			jsonFiltersObject.setValueForKey("metricName", metricFilterObject.metricName());
			jsonFiltersObject.setValueForKey("operator", metricFilterObject.operator());
			jsonFiltersObject.setValueForKey("comparisonValue", metricFilterObject.filterValue());
			jsonFiltersObject.setValueForKey("not", metricFilterObject.not());
		}
		return jsonFiltersObject;
	}
	/*<EndMethod Name="Infragistics.CPJSONObject Infragistics.GoogleAnalyticsDataObject::CreateJsonFilterObject(System.Object, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::ParseSorts()" />*/
	parseSorts: function () {
		var jsonSortsObject;
		var sortsList = new $.ig.Array();
		var sortOrder;
		for (var i = 0; i < this.sorts().length; i++) {
			jsonSortsObject = new $.ig.CPJSONObject(1);
			var sortObject = this.sorts()[i];
			jsonSortsObject.setValueForKey("fieldName", sortObject.fieldName());
			if (sortObject.sortDirection() != $.ig.GoogleAnalyticsSortDirection.prototype.nONE) {
				sortOrder = sortObject.sortDirection() == $.ig.GoogleAnalyticsSortDirection.prototype.aSCENDING ? "ASCENDING" : "DESCENDING";
				jsonSortsObject.setValueForKey("sortOrder", sortOrder);
			}
			sortsList.add(jsonSortsObject.jSONObject());
		}
		return sortsList;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.GoogleAnalyticsDataObject::ParseSorts()" />*/
	,
	$type: new $.ig.Type('GoogleAnalyticsDataObject', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAnalyticsDataObject" />*/

/*<BeginType Name="Infragistics.GoogleOAuthProvider" />*/

$.ig.util.defType('GoogleOAuthProvider', 'OAuthProvider', {
	__subProviderType: 0,
	init: function (initNumber, keys) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.OAuthProvider.prototype.init.call(this, keys);
		this.__subProviderType = $.ig.CloudProviderType.prototype.google;
	},
	init1: function (initNumber, keys, subProviderType) {
		$.ig.OAuthProvider.prototype.init.call(this, keys);
		this.__subProviderType = subProviderType;
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleOAuthProvider::GetAuthAction()" />*/
	getAuthAction: function () {
		return $.ig.GoogleOAuthProvider.prototype.authAction;
	}
	/*<EndMethod Name="System.String Infragistics.GoogleOAuthProvider::GetAuthAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleOAuthProvider::GetAuthURL()" />*/
	getAuthURL: function () {
		return $.ig.GoogleOAuthProvider.prototype.authURL;
	}
	/*<EndMethod Name="System.String Infragistics.GoogleOAuthProvider::GetAuthURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleOAuthProvider::GetTokenURL()" />*/
	getTokenURL: function () {
		return $.ig.GoogleOAuthProvider.prototype.tokenUrl;
	}
	/*<EndMethod Name="System.String Infragistics.GoogleOAuthProvider::GetTokenURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleOAuthProvider::GetLogoutUrl()" />*/
	getLogoutUrl: function () {
		return $.ig.GoogleOAuthProvider.prototype.providerLogoutUrl();
	}
	/*<EndMethod Name="System.String Infragistics.GoogleOAuthProvider::GetLogoutUrl()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleOAuthProvider::AddAdditionalAccessCodeParamsStatic(Infragistics.CPDictionary)" />*/
	addAdditionalAccessCodeParamsStatic: function (json) {
		json.item("access_type", "offline");
		json.item("prompt", "consent");
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleOAuthProvider::AddAdditionalAccessCodeParamsStatic(Infragistics.CPDictionary)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleOAuthProvider::AddAdditionalAccessCodeParams(Infragistics.CPDictionary)" />*/
	addAdditionalAccessCodeParams: function (json) {
		$.ig.GoogleOAuthProvider.prototype.addAdditionalAccessCodeParamsStatic(json);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleOAuthProvider::AddAdditionalAccessCodeParams(Infragistics.CPDictionary)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleOAuthProvider::ProviderLogoutUrl()" />*/
	providerLogoutUrl: function () {
		return "https://accounts.google.com/logout";
	}
	/*<EndProperty Name="System.String Infragistics.GoogleOAuthProvider::ProviderLogoutUrl()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.GoogleOAuthProvider::CloudProvider()" />*/
	cloudProvider: function () {
		return this.__subProviderType;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.GoogleOAuthProvider::CloudProvider()" />*/
	,
	$type: new $.ig.Type('GoogleOAuthProvider', $.ig.OAuthProvider.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleOAuthProvider" />*/

/*<BeginType Name="Infragistics.GoogleRequestBase" />*/

$.ig.util.defType('GoogleRequestBase', 'OAuthRequestBase', {
	init: function (initNumber, key, token, success, error) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.OAuthRequestBase.prototype.init.call(this, 0, key, token, success, error);
	},
	init1: function (initNumber, key, token, success, error, progress, downloaded) {
		$.ig.OAuthRequestBase.prototype.init1.call(this, 1, key, token, success, error, progress, downloaded);
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleRequestBase::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://www.googleapis.com/";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleRequestBase::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="Infragistics.OAuthProvider Infragistics.GoogleRequestBase::ResolveProvider(Infragistics.TokenState)" />*/
	resolveProvider: function (token) {
		return new $.ig.GoogleOAuthProvider(1, token.providerKeys(), token.provider());
	}
	/*<EndMethod Name="Infragistics.OAuthProvider Infragistics.GoogleRequestBase::ResolveProvider(Infragistics.TokenState)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleRequestBase::SetFilesQueryFields(Infragistics.CPDictionary)" />*/
	setFilesQueryFields: function (p) {
		var fields = "kind,nextPageToken,incompleteSearch,files(kind,id,name,mimeType,parents,modifiedTime,size,owners,webViewLink,version,webContentLink,driveId)";
		p.item("fields", $.ig.NativeRequestUtility.prototype.utility().uRLEncodeString(fields));
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleRequestBase::SetFilesQueryFields(Infragistics.CPDictionary)" />*/
	,
	$type: new $.ig.Type('GoogleRequestBase', $.ig.OAuthRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleRequestBase" />*/

/*<BeginType Name="Infragistics.GoogleAnalyticsRequestBase" />*/

$.ig.util.defType('GoogleAnalyticsRequestBase', 'OAuthRequestBase', {
	_quotaUser: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleAnalyticsRequestBase::QuotaUser()" />*/
	quotaUser: function (value) {
		if (arguments.length === 1) {
			this._quotaUser = value;
			return value;
		} else {
			return this._quotaUser;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleAnalyticsRequestBase::QuotaUser()" />*/
	,
	init: function (key, token, quotaUser, success, error) {
		$.ig.OAuthRequestBase.prototype.init.call(this, 0, key, token, success, error);
		this.quotaUser(quotaUser);
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleAnalyticsRequestBase::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://www.googleapis.com/analytics/v3/";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAnalyticsRequestBase::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleAnalyticsRequestBase::ResolveAction()" />*/
	resolveAction: function () {
		return "";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAnalyticsRequestBase::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.OAuthProvider Infragistics.GoogleAnalyticsRequestBase::ResolveProvider(Infragistics.TokenState)" />*/
	resolveProvider: function (token) {
		return new $.ig.GoogleOAuthProvider(1, token.providerKeys(), token.provider());
	}
	/*<EndMethod Name="Infragistics.OAuthProvider Infragistics.GoogleAnalyticsRequestBase::ResolveProvider(Infragistics.TokenState)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GoogleAnalyticsRequestBase::ResolveParams()" />*/
	resolveParams: function () {
		var p = $.ig.OAuthRequestBase.prototype.resolveParams.call(this);
		if (this.quotaUser() != null) {
			p.item("quotaUser", this.quotaUser());
		}
		return p;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GoogleAnalyticsRequestBase::ResolveParams()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleAnalyticsRequestBase::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleAnalyticsRequestBase::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('GoogleAnalyticsRequestBase', $.ig.OAuthRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAnalyticsRequestBase" />*/

/*<BeginType Name="Infragistics.GoogleAnalyticsColumnsRequest" />*/

$.ig.util.defType('GoogleAnalyticsColumnsRequest', 'GoogleAnalyticsRequestBase', {
	init: function (key, token, quotaUser, success, error) {
		$.ig.GoogleAnalyticsRequestBase.prototype.init.call(this, key, token, quotaUser, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleAnalyticsColumnsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "metadata/ga/columns?fields=attributeNames%2Cetag%2Citems%2Ckind%2CtotalResults";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAnalyticsColumnsRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleAnalyticsColumnsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var items = response.jSONObject()["items"];
		return items;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleAnalyticsColumnsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('GoogleAnalyticsColumnsRequest', $.ig.GoogleAnalyticsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAnalyticsColumnsRequest" />*/

/*<BeginType Name="Infragistics.GoogleAnalyticsCustomDimensionsRequest" />*/

$.ig.util.defType('GoogleAnalyticsCustomDimensionsRequest', 'GoogleAnalyticsRequestBase', {
	__accId: null,
	__webPropId: null,
	init: function (key, token, accId, webPropId, quotaUser, success, error) {
		$.ig.GoogleAnalyticsRequestBase.prototype.init.call(this, key, token, quotaUser, success, error);
		this.__accId = accId;
		this.__webPropId = webPropId;
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleAnalyticsCustomDimensionsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "management/accounts/" + this.__accId + "/webproperties/" + this.__webPropId + "/customDimensions";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAnalyticsCustomDimensionsRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleAnalyticsCustomDimensionsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var items = response.jSONObject()["items"];
		return items;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleAnalyticsCustomDimensionsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('GoogleAnalyticsCustomDimensionsRequest', $.ig.GoogleAnalyticsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAnalyticsCustomDimensionsRequest" />*/

/*<BeginType Name="Infragistics.GoogleAnalyticsCustomMetricsRequest" />*/

$.ig.util.defType('GoogleAnalyticsCustomMetricsRequest', 'GoogleAnalyticsRequestBase', {
	__accId: null,
	__webPropId: null,
	init: function (key, token, accId, webPropId, quotaUser, success, error) {
		$.ig.GoogleAnalyticsRequestBase.prototype.init.call(this, key, token, quotaUser, success, error);
		this.__accId = accId;
		this.__webPropId = webPropId;
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleAnalyticsCustomMetricsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "management/accounts/" + this.__accId + "/webproperties/" + this.__webPropId + "/customMetrics";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAnalyticsCustomMetricsRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleAnalyticsCustomMetricsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var items = response.jSONObject()["items"];
		return items;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleAnalyticsCustomMetricsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('GoogleAnalyticsCustomMetricsRequest', $.ig.GoogleAnalyticsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAnalyticsCustomMetricsRequest" />*/

/*<BeginType Name="Infragistics.GoogleAnalyticsSegmentsRequest" />*/

$.ig.util.defType('GoogleAnalyticsSegmentsRequest', 'GoogleAnalyticsRequestBase', {
	init: function (key, token, quotaUser, success, error) {
		$.ig.GoogleAnalyticsRequestBase.prototype.init.call(this, key, token, quotaUser, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleAnalyticsSegmentsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "management/segments";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAnalyticsSegmentsRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleAnalyticsSegmentsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var items = response.jSONObject()["items"];
		return items;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleAnalyticsSegmentsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('GoogleAnalyticsSegmentsRequest', $.ig.GoogleAnalyticsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAnalyticsSegmentsRequest" />*/

/*<BeginType Name="Infragistics.GoogleAnalyticsAccountsRequest" />*/

$.ig.util.defType('GoogleAnalyticsAccountsRequest', 'GoogleAnalyticsRequestBase', {
	init: function (key, token, quotaUser, success, error) {
		$.ig.GoogleAnalyticsRequestBase.prototype.init.call(this, key, token, quotaUser, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleAnalyticsAccountsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "management/accounts";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAnalyticsAccountsRequest::ResolveAction()" />*/
	,
	$type: new $.ig.Type('GoogleAnalyticsAccountsRequest', $.ig.GoogleAnalyticsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAnalyticsAccountsRequest" />*/

/*<BeginType Name="Infragistics.GoogleAnalyticsProfilesRequest" />*/

$.ig.util.defType('GoogleAnalyticsProfilesRequest', 'GoogleAnalyticsRequestBase', {
	__accId: null,
	init: function (key, token, accId, quotaUser, success, error) {
		$.ig.GoogleAnalyticsRequestBase.prototype.init.call(this, key, token, quotaUser, success, error);
		this.__accId = accId;
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleAnalyticsProfilesRequest::ResolveAction()" />*/
	resolveAction: function () {
		if (this.__accId == null || this.__accId == "") {
			return "management/accounts/~all/webproperties/~all/profiles";
		}
		return "management/accounts/" + this.__accId + "/webproperties";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAnalyticsProfilesRequest::ResolveAction()" />*/
	,
	$type: new $.ig.Type('GoogleAnalyticsProfilesRequest', $.ig.GoogleAnalyticsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAnalyticsProfilesRequest" />*/

/*<BeginType Name="Infragistics.GoogleAnalyticsViewsRequest" />*/

$.ig.util.defType('GoogleAnalyticsViewsRequest', 'GoogleAnalyticsRequestBase', {
	__accId: null,
	__profileId: null,
	init: function (key, token, accId, profileId, quotaUser, success, error) {
		$.ig.GoogleAnalyticsRequestBase.prototype.init.call(this, key, token, quotaUser, success, error);
		this.__accId = accId;
		this.__profileId = profileId;
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleAnalyticsViewsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "management/accounts/" + this.__accId + "/webproperties/" + this.__profileId + "/profiles";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAnalyticsViewsRequest::ResolveAction()" />*/
	,
	$type: new $.ig.Type('GoogleAnalyticsViewsRequest', $.ig.GoogleAnalyticsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAnalyticsViewsRequest" />*/

/*<BeginType Name="Infragistics.GoogleAnalyticsGoalsRequest" />*/

$.ig.util.defType('GoogleAnalyticsGoalsRequest', 'GoogleAnalyticsRequestBase', {
	__accId: null,
	__webPropertyId: null,
	__profileId: null,
	init: function (key, token, accId, webPropertyId, profileId, quotaUser, success, error) {
		$.ig.GoogleAnalyticsRequestBase.prototype.init.call(this, key, token, quotaUser, success, error);
		this.__accId = accId;
		this.__webPropertyId = webPropertyId;
		this.__profileId = profileId;
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleAnalyticsGoalsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "management/accounts/" + this.__accId + "/webproperties/" + this.__webPropertyId + "/profiles/" + this.__profileId + "/goals";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAnalyticsGoalsRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleAnalyticsGoalsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var items = response.jSONObject()["items"];
		return items;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleAnalyticsGoalsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('GoogleAnalyticsGoalsRequest', $.ig.GoogleAnalyticsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAnalyticsGoalsRequest" />*/

/*<BeginType Name="Infragistics.GoogleAnalyticsDataRequest" />*/

$.ig.util.defType('GoogleAnalyticsDataRequest', 'GoogleAnalyticsRequestBase', {
	__dataObject: null,
	init: function (key, token, dataObject, quotaUser, success, error) {
		$.ig.GoogleAnalyticsRequestBase.prototype.init.call(this, key, token, quotaUser, success, error);
		this.__dataObject = dataObject;
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleAnalyticsDataRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleAnalyticsDataRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.GoogleAnalyticsDataRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.GoogleAnalyticsDataRequest::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleAnalyticsDataRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		return this.__dataObject.dataObjectToJSON();
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAnalyticsDataRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleAnalyticsDataRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://analyticsreporting.googleapis.com/v4/";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAnalyticsDataRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleAnalyticsDataRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "reports:batchGet";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAnalyticsDataRequest::ResolveAction()" />*/
	,
	$type: new $.ig.Type('GoogleAnalyticsDataRequest', $.ig.GoogleAnalyticsRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAnalyticsDataRequest" />*/

/*<BeginType Name="Infragistics.GoogleGetFilesRequest" />*/

$.ig.util.defType('GoogleGetFilesRequest', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "Google_GetFiles", token, success, error);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleGetFilesRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleGetFilesRequest::Path()" />*/
	,
	_foldersOnly: false,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleGetFilesRequest::FoldersOnly()" />*/
	foldersOnly: function (value) {
		if (arguments.length === 1) {
			this._foldersOnly = value;
			return value;
		} else {
			return this._foldersOnly;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleGetFilesRequest::FoldersOnly()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleGetFilesRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/v3/files";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGetFilesRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetFilesRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetFilesRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GoogleGetFilesRequest::ResolveParams()" />*/
	resolveParams: function () {
		var p = $.ig.GoogleRequestBase.prototype.resolveParams.call(this);
		var query = null;
		if (this.path() != null) {
			var count = $.ig.GoogleFile.prototype.specialFolders().length;
			for (var i = 0; i < count; i++) {
				var file = $.ig.GoogleFile.prototype.specialFolders()[i];
				if (this.path().equals($.ig.GoogleFile.prototype.extractId(file.pathIdentifier()))) {
					query = file.resolveStringForKeyPath((function () {
						var $ret = new $.ig.Array();
						$ret.add("query");
						return $ret;
					}()));
				}
			}
		}
		if (query == null) {
			query = "'" + (this.path() == null || this.path().length == 0 ? $.ig.GoogleFile.prototype.rootKey : this.path()) + "' in parents and trashed=false";
		}
		p.item("q", $.ig.NativeRequestUtility.prototype.utility().uRLEncodeString(query));
		p.item("pageSize", 1000);
		p.item("supportsAllDrives", "true");
		p.item("includeItemsFromAllDrives", "true");
		$.ig.GoogleRequestBase.prototype.setFilesQueryFields(p);
		return p;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GoogleGetFilesRequest::ResolveParams()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleGetFilesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var files = new $.ig.Array();
		var entries = response.resolveListForKey("files");
		var count = entries.length;
		for (var i = 0; i < count; i++) {
			var file = new $.ig.GoogleFile(1, $.ig.CPJSONObject.prototype.createFromJSONObject(entries[i]), this.tokenState().additionalIdentifier());
			if (this.foldersOnly() && file.isFolder() || !this.foldersOnly()) {
				files.add(file);
			}
		}
		return files;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleGetFilesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleGetFilesRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.GoogleRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleGetFilesRequest::Error(Infragistics.CloudError)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleGetFilesRequest::Execute()" />*/
	execute: function () {
		if (this.path() == null || this.path().length == 0 || this.path().equals("/")) {
			this.success($.ig.GoogleFile.prototype.specialFolders());
		} else {
			$.ig.GoogleRequestBase.prototype.execute.call(this);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleGetFilesRequest::Execute()" />*/
	,
	$type: new $.ig.Type('GoogleGetFilesRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleGetFilesRequest" />*/

/*<BeginType Name="Infragistics.GoogleGetSharedDrivesRequest" />*/

$.ig.util.defType('GoogleGetSharedDrivesRequest', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "Google_GetSharedDrives", token, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleGetSharedDrivesRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/v3/drives";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGetSharedDrivesRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetSharedDrivesRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetSharedDrivesRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GoogleGetSharedDrivesRequest::ResolveParams()" />*/
	resolveParams: function () {
		var p = $.ig.GoogleRequestBase.prototype.resolveParams.call(this);
		p.item("q", "hidden=false");
		p.item("pageSize", 100);
		return p;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GoogleGetSharedDrivesRequest::ResolveParams()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleGetSharedDrivesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var drives = new $.ig.Array();
		var entries = response.resolveListForKey("drives");
		var count = entries.length;
		for (var i = 0; i < count; i++) {
			var json = $.ig.CPJSONObject.prototype.createFromJSONObject(entries[i]);
			json.setValueForKey("mimeType", $.ig.GoogleFile.prototype.googleMimeTypeSharedDrives);
			var file = new $.ig.GoogleFile(1, json, this.tokenState().additionalIdentifier());
			drives.add(file);
		}
		return drives;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleGetSharedDrivesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleGetSharedDrivesRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.GoogleRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleGetSharedDrivesRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('GoogleGetSharedDrivesRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleGetSharedDrivesRequest" />*/

/*<BeginType Name="Infragistics.GoogleDownloadFileRequest" />*/

$.ig.util.defType('GoogleDownloadFileRequest', 'GoogleRequestBase', {
	__getMetdataRequest: null,
	init: function (token, success, error, progress, downloaded) {
		$.ig.GoogleRequestBase.prototype.init1.call(this, 1, "Google_DownloadFile", token, success, error, progress, downloaded);
		this.fileSize(-1);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleDownloadFileRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleDownloadFileRequest::Path()" />*/
	,
	_$export: false,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleDownloadFileRequest::Export()" />*/
	$export: function (value) {
		if (arguments.length === 1) {
			this._$export = value;
			return value;
		} else {
			return this._$export;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleDownloadFileRequest::Export()" />*/
	,
	_exportMimeType: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleDownloadFileRequest::ExportMimeType()" />*/
	exportMimeType: function (value) {
		if (arguments.length === 1) {
			this._exportMimeType = value;
			return value;
		} else {
			return this._exportMimeType;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleDownloadFileRequest::ExportMimeType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleDownloadFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		var action = "drive/v3/files/" + this.path();
		if (this.$export()) {
			action = action + "/export";
		}
		return action;
	}
	/*<EndMethod Name="System.String Infragistics.GoogleDownloadFileRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleDownloadFileRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleDownloadFileRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionTaskType Infragistics.GoogleDownloadFileRequest::ResolveTaskType()" />*/
	resolveTaskType: function () {
		return $.ig.SessionTaskType.prototype.download;
	}
	/*<EndMethod Name="Infragistics.SessionTaskType Infragistics.GoogleDownloadFileRequest::ResolveTaskType()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GoogleDownloadFileRequest::ResolveParams()" />*/
	resolveParams: function () {
		var p = $.ig.GoogleRequestBase.prototype.resolveParams.call(this);
		if (this.$export()) {
			p.item("mimeType", this.exportMimeType());
		} else {
			p.item("alt", "media");
		}
		return p;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GoogleDownloadFileRequest::ResolveParams()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleDownloadFileRequest::Execute()" />*/
	execute: function () {
		var $self = this;
		if (this.fileSize() != -1) {
			$.ig.GoogleRequestBase.prototype.execute.call(this);
		} else {
			this.__getMetdataRequest = new $.ig.GoogleGetMetadataRequest(this.tokenState(), function (r, o) {
				$self.getSize(o);
			}, function (r, e) {
				$self.startDownload();
			});
			this.__getMetdataRequest.fileId(this.path());
			this.__getMetdataRequest.execute();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleDownloadFileRequest::Execute()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleDownloadFileRequest::GetSize(Infragistics.GoogleFile)" />*/
	getSize: function (file) {
		if (file != null) {
			this.fileSize(file.size());
		}
		this.startDownload();
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleDownloadFileRequest::GetSize(Infragistics.GoogleFile)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleDownloadFileRequest::Cancel()" />*/
	cancel: function () {
		$.ig.GoogleRequestBase.prototype.cancel.call(this);
		if (this.__getMetdataRequest != null) {
			this.__getMetdataRequest.cancel();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleDownloadFileRequest::Cancel()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleDownloadFileRequest::StartDownload()" />*/
	startDownload: function () {
		$.ig.GoogleRequestBase.prototype.execute.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleDownloadFileRequest::StartDownload()" />*/
	,
	_fileSize: 0,
	/*<BeginProperty Name="System.Int64 Infragistics.GoogleDownloadFileRequest::FileSize()" />*/
	fileSize: function (value) {
		if (arguments.length === 1) {
			this._fileSize = value;
			return value;
		} else {
			return this._fileSize;
		}
	}
	/*<EndProperty Name="System.Int64 Infragistics.GoogleDownloadFileRequest::FileSize()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleDownloadFileRequest::SessionDownloadUpdate(Infragistics.SessionTask, System.Int64, System.Int64)" />*/
	sessionDownloadUpdate: function (task, bytes, totalBytes) {
		var total = this.fileSize() != -1 ? this.fileSize() : totalBytes;
		$.ig.GoogleRequestBase.prototype.sessionDownloadUpdate.call(this, task, bytes, total);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleDownloadFileRequest::SessionDownloadUpdate(Infragistics.SessionTask, System.Int64, System.Int64)" />*/
	,
	$type: new $.ig.Type('GoogleDownloadFileRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleDownloadFileRequest" />*/

/*<BeginType Name="Infragistics.GoogleFileRequest" />*/

$.ig.util.defType('GoogleFileRequest', 'GoogleRequestBase', {
	_fileId: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleFileRequest::FileId()" />*/
	fileId: function (value) {
		if (arguments.length === 1) {
			this._fileId = value;
			return value;
		} else {
			return this._fileId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFileRequest::FileId()" />*/
	,
	_destinationPath: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleFileRequest::DestinationPath()" />*/
	destinationPath: function (value) {
		if (arguments.length === 1) {
			this._destinationPath = value;
			return value;
		} else {
			return this._destinationPath;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFileRequest::DestinationPath()" />*/
	,
	init: function (key, token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, key, token, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/v3/files/" + this.fileId();
	}
	/*<EndMethod Name="System.String Infragistics.GoogleFileRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleFileRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleFileRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GoogleFileRequest::ResolveParams()" />*/
	resolveParams: function () {
		var p = $.ig.GoogleRequestBase.prototype.resolveParams.call(this);
		p.item("supportsAllDrives", "true");
		return p;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GoogleFileRequest::ResolveParams()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GoogleFileRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var hs = new $.ig.Dictionary(0);
		hs.item("X-HTTP-Method-Override", "PATCH");
		return hs;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GoogleFileRequest::ResolveAdditionalHeaderFields()" />*/
	,
	$type: new $.ig.Type('GoogleFileRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleFileRequest" />*/

/*<BeginType Name="Infragistics.GoogleMoveFileRequest" />*/

$.ig.util.defType('GoogleMoveFileRequest', 'GoogleFileRequest', {
	_filePath: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleMoveFileRequest::FilePath()" />*/
	filePath: function (value) {
		if (arguments.length === 1) {
			this._filePath = value;
			return value;
		} else {
			return this._filePath;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleMoveFileRequest::FilePath()" />*/
	,
	init: function (token, success, error) {
		$.ig.GoogleFileRequest.prototype.init.call(this, "Google_MoveFile", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GoogleMoveFileRequest::ResolveParams()" />*/
	resolveParams: function () {
		var p = $.ig.GoogleFileRequest.prototype.resolveParams.call(this);
		p.item("addParents", this.destinationPath());
		p.item("removeParents", this.filePath());
		p.item("fields", "id, parents");
		return p;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GoogleMoveFileRequest::ResolveParams()" />*/
	,
	$type: new $.ig.Type('GoogleMoveFileRequest', $.ig.GoogleFileRequest.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleMoveFileRequest" />*/

/*<BeginType Name="Infragistics.GoogleCopyFileRequest" />*/

$.ig.util.defType('GoogleCopyFileRequest', 'GoogleFileRequest', {
	init: function (token, success, error) {
		$.ig.GoogleFileRequest.prototype.init.call(this, "Google_CopyFile", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GoogleCopyFileRequest::ResolveParams()" />*/
	resolveParams: function () {
		var p = $.ig.GoogleFileRequest.prototype.resolveParams.call(this);
		p.item("addParents", this.destinationPath());
		p.item("fields", "id, parents");
		return p;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GoogleCopyFileRequest::ResolveParams()" />*/
	,
	$type: new $.ig.Type('GoogleCopyFileRequest', $.ig.GoogleFileRequest.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleCopyFileRequest" />*/

/*<BeginType Name="Infragistics.GoogleDownloadLinkRequest" />*/

$.ig.util.defType('GoogleDownloadLinkRequest', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "Google_DownloadFile", token, success, error);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleDownloadLinkRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleDownloadLinkRequest::Path()" />*/
	,
	_$export: false,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleDownloadLinkRequest::Export()" />*/
	$export: function (value) {
		if (arguments.length === 1) {
			this._$export = value;
			return value;
		} else {
			return this._$export;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleDownloadLinkRequest::Export()" />*/
	,
	_exportMimeType: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleDownloadLinkRequest::ExportMimeType()" />*/
	exportMimeType: function (value) {
		if (arguments.length === 1) {
			this._exportMimeType = value;
			return value;
		} else {
			return this._exportMimeType;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleDownloadLinkRequest::ExportMimeType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleDownloadLinkRequest::ResolveAction()" />*/
	resolveAction: function () {
		var action = "drive/v3/files/" + this.path();
		if (this.$export()) {
			action = action + "/export";
		}
		return action;
	}
	/*<EndMethod Name="System.String Infragistics.GoogleDownloadLinkRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleDownloadLinkRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleDownloadLinkRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GoogleDownloadLinkRequest::ResolveParams()" />*/
	resolveParams: function () {
		var p = $.ig.GoogleRequestBase.prototype.resolveParams.call(this);
		if (this.$export()) {
			p.item("mimeType", this.exportMimeType());
		} else {
			p.item("alt", "media");
		}
		return p;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GoogleDownloadLinkRequest::ResolveParams()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleDownloadLinkRequest::Execute()" />*/
	execute: function () {
		this.success(this.resolveURL());
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleDownloadLinkRequest::Execute()" />*/
	,
	$type: new $.ig.Type('GoogleDownloadLinkRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleDownloadLinkRequest" />*/

/*<BeginType Name="Infragistics.GoogleDownloadFileFromLinkRequest" />*/

$.ig.util.defType('GoogleDownloadFileFromLinkRequest', 'GoogleRequestBase', {
	__downloadLink: null,
	init: function (downloadLink, token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "Google_DownloadFile", token, success, error);
		this.__downloadLink = downloadLink;
	},
	_$export: false,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleDownloadFileFromLinkRequest::Export()" />*/
	$export: function (value) {
		if (arguments.length === 1) {
			this._$export = value;
			return value;
		} else {
			return this._$export;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleDownloadFileFromLinkRequest::Export()" />*/
	,
	_exportMimeType: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleDownloadFileFromLinkRequest::ExportMimeType()" />*/
	exportMimeType: function (value) {
		if (arguments.length === 1) {
			this._exportMimeType = value;
			return value;
		} else {
			return this._exportMimeType;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleDownloadFileFromLinkRequest::ExportMimeType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleDownloadFileFromLinkRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return this.__downloadLink;
	}
	/*<EndMethod Name="System.String Infragistics.GoogleDownloadFileFromLinkRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleDownloadFileFromLinkRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleDownloadFileFromLinkRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleDownloadFileFromLinkRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleDownloadFileFromLinkRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionTaskType Infragistics.GoogleDownloadFileFromLinkRequest::ResolveTaskType()" />*/
	resolveTaskType: function () {
		return $.ig.SessionTaskType.prototype.data;
	}
	/*<EndMethod Name="Infragistics.SessionTaskType Infragistics.GoogleDownloadFileFromLinkRequest::ResolveTaskType()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.GoogleDownloadFileFromLinkRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.dATA;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.GoogleDownloadFileFromLinkRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GoogleDownloadFileFromLinkRequest::ResolveParams()" />*/
	resolveParams: function () {
		var p = $.ig.GoogleRequestBase.prototype.resolveParams.call(this);
		if (this.$export()) {
			p.item("mimeType", this.exportMimeType());
		} else {
			p.item("alt", "media");
		}
		return p;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GoogleDownloadFileFromLinkRequest::ResolveParams()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleDownloadFileFromLinkRequest::ProcessDataResponse(System.Array)" />*/
	processDataResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleDownloadFileFromLinkRequest::ProcessDataResponse(System.Array)" />*/
	,
	$type: new $.ig.Type('GoogleDownloadFileFromLinkRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleDownloadFileFromLinkRequest" />*/

/*<BeginType Name="Infragistics.GoogleGetMetadataRequest" />*/

$.ig.util.defType('GoogleGetMetadataRequest', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "Google_GetMetadata", token, success, error);
	},
	_fileId: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleGetMetadataRequest::FileId()" />*/
	fileId: function (value) {
		if (arguments.length === 1) {
			this._fileId = value;
			return value;
		} else {
			return this._fileId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleGetMetadataRequest::FileId()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleGetMetadataRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/v3/files/" + this.fileId();
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGetMetadataRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetMetadataRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetMetadataRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GoogleGetMetadataRequest::ResolveParams()" />*/
	resolveParams: function () {
		var p = $.ig.GoogleRequestBase.prototype.resolveParams.call(this);
		p.item("supportsAllDrives", "true");
		p.item("fields", "mimeType,name,id,size,modifiedTime,webViewLink,parents,owners,shared,trashed,webContentLink,version,driveId");
		return p;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GoogleGetMetadataRequest::ResolveParams()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleGetMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return (new $.ig.GoogleFile(1, response, this.tokenState().additionalIdentifier()));
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleGetMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleGetMetadataRequest::Execute()" />*/
	execute: function () {
		var file = $.ig.GoogleFile.prototype.specialFileForId(this.fileId());
		if (file != null) {
			this.success(file);
		} else {
			$.ig.GoogleRequestBase.prototype.execute.call(this);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleGetMetadataRequest::Execute()" />*/
	,
	$type: new $.ig.Type('GoogleGetMetadataRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleGetMetadataRequest" />*/

/*<BeginType Name="Infragistics.GoogleFileManager" />*/

$.ig.util.defType('GoogleFileManager', 'CloudFileManager', {
	init: function (token) {
		$.ig.CloudFileManager.prototype.init.call(this, 0, token);
	},
	/*<BeginMethod Name="Infragistics.CPReadOnlyList Infragistics.GoogleFileManager::GetReadFilesScope()" />*/
	getReadFilesScope: function () {
		var scopes = "https://www.googleapis.com/auth/drive.readonly";
		var arr = $.ig.NativeStringUtility.prototype.split(scopes, " ");
		return $.ig.ArrayUtility.prototype.toList(arr);
	}
	/*<EndMethod Name="Infragistics.CPReadOnlyList Infragistics.GoogleFileManager::GetReadFilesScope()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPReadOnlyList Infragistics.GoogleFileManager::GetShareLinkScope()" />*/
	getShareLinkScope: function () {
		var scopes = "https://www.googleapis.com/auth/drive";
		var arr = $.ig.NativeStringUtility.prototype.split(scopes, " ");
		return $.ig.ArrayUtility.prototype.toList(arr);
	}
	/*<EndMethod Name="Infragistics.CPReadOnlyList Infragistics.GoogleFileManager::GetShareLinkScope()" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetFilesFromCloudFolder(Infragistics.CloudFile, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesFromCloudFolder: function (file, handler, errorHandler) {
		return this.getFilesInFolder1((file == null ? null : $.ig.GoogleFile.prototype.extractId(file.pathIdentifier())), handler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetFilesFromCloudFolder(Infragistics.CloudFile, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetFilesInFolder(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesInFolder1: function (folder, handler, errorHandler) {
		return this.getFilesInFolder(false, folder, handler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetFilesInFolder(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetFilesInFolder(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesInFolder: function (foldersOnly, folder, handler, errorHandler) {
		if (folder == null || folder.length == 0 || folder.equals("/")) {
			return this.getSharedDrives(function (o) {
				handler($.ig.GoogleFileManager.prototype.filterSpecialFolders(o.length > 0));
			}, function (error) {
				errorHandler(error);
			});
		} else if (folder == $.ig.GoogleFile.prototype.googleDriveSharedDrivesId) {
			return this.getSharedDrives(handler, errorHandler);
		} else {
			return this.getFiles(foldersOnly, folder, handler, errorHandler);
		}
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetFilesInFolder(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.GoogleFileManager::FilterSpecialFolders(System.Boolean)" />*/
	filterSpecialFolders: function (includeSharedDrives) {
		var list = $.ig.GoogleFile.prototype.specialFolders();
		if (!includeSharedDrives) {
			var newList = new $.ig.Array();
			var count = list.length;
			for (var i = 0; i < count; i++) {
				var f = list[i];
				if (f.mimeType() == $.ig.GoogleFile.prototype.googleMimeTypeSharedDrives) {
					continue;
				}
				newList.add(f);
			}
			list = newList;
		}
		return list;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.GoogleFileManager::FilterSpecialFolders(System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetFiles(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFiles: function (getFoldersOnly, folder, handler, errorHandler) {
		var request = new $.ig.GoogleGetFilesRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.path($.ig.GoogleFile.prototype.extractId(folder));
		request.foldersOnly(getFoldersOnly);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetFiles(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetSharedDrives(Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getSharedDrives: function (handler, errorHandler) {
		var request = new $.ig.GoogleGetSharedDrivesRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetSharedDrives(Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::SearchFiles(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	searchFiles: function (searchText, handler, errorHandler) {
		var request = new $.ig.GoogleSearchFilesRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.query(searchText);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::SearchFiles(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name=" Infragistics.GoogleFileManager::GetSearchCapabilities()" />*/
	getSearchCapabilities: function () {
		return [ $.ig.SearchCapabilities.prototype.searchByText, $.ig.SearchCapabilities.prototype.searchByAuthor, $.ig.SearchCapabilities.prototype.searchByMimeTypes, $.ig.SearchCapabilities.prototype.searchByModifiedDateTime, $.ig.SearchCapabilities.prototype.searchByEmptyText ];
	}
	/*<EndMethod Name=" Infragistics.GoogleFileManager::GetSearchCapabilities()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.GoogleFileManager::HasDropCapability()" />*/
	hasDropCapability: function () {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.GoogleFileManager::HasDropCapability()" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::SearchFilesWithQuery(Infragistics.SearchQuery, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	searchFilesWithQuery: function (searchQuery, handler, errorHandler) {
		var searchText = "";
		if (searchQuery._text != null && searchQuery._text.length > 0) {
			searchText = searchText + "(name contains '" + this.escapeSearchTextParameter(searchQuery._text) + "' or fullText contains '" + this.escapeSearchTextParameter(searchQuery._text) + "')";
		}
		if (searchQuery._author != null && searchQuery._author.length > 0) {
			searchText = this.appendAndIfNeeded(searchText) + "('" + this.escapeSearchTextParameter(searchQuery._author) + "' in owners or '" + this.escapeSearchTextParameter(searchQuery._author) + "' in writers)";
		}
		if (searchQuery._fileMimeTypes != null && searchQuery._fileMimeTypes.length > 0) {
			searchText = this.appendAndIfNeeded(searchText) + "(";
			for (var i = 0; i < searchQuery._fileMimeTypes.length; i++) {
				if (i > 0) {
					searchText = searchText + " or ";
				}
				searchText = searchText + "mimeType = '" + searchQuery._fileMimeTypes[i] + "'";
			}
			searchText = searchText + ")";
		}
		if (!$.ig.NativeDateUtility.prototype.dateIsNull(searchQuery._modifiedSince)) {
			searchText = this.appendAndIfNeeded(searchText) + "modifiedTime >= '" + $.ig.DateUtility.prototype.formatDateToRFC3339UTC(searchQuery._modifiedSince) + "'";
		}
		if (!$.ig.NativeDateUtility.prototype.dateIsNull(searchQuery._modifiedBefore)) {
			searchText = this.appendAndIfNeeded(searchText) + "modifiedTime < '" + $.ig.DateUtility.prototype.formatDateToRFC3339UTC(searchQuery._modifiedBefore) + "'";
		}
		var request = new $.ig.GoogleSearchFilesRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.q(searchText);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::SearchFilesWithQuery(Infragistics.SearchQuery, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleFileManager::appendAndIfNeeded(System.String)" />*/
	appendAndIfNeeded: function (str) {
		if (str.length > 0) {
			return str + " and ";
		}
		return str;
	}
	/*<EndMethod Name="System.String Infragistics.GoogleFileManager::appendAndIfNeeded(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleFileManager::escapeSearchTextParameter(System.String)" />*/
	escapeSearchTextParameter: function (str) {
		str = $.ig.NativeStringUtility.prototype.replace(str, "\\", "\\\\");
		return $.ig.NativeStringUtility.prototype.replace(str, "'", "\\'");
	}
	/*<EndMethod Name="System.String Infragistics.GoogleFileManager::escapeSearchTextParameter(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::DownloadFile(System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	downloadFile1: function (file, mimeType, handler, downloadHandler, errorHandler) {
		var request = new $.ig.GoogleDownloadFileRequest(this.tokenState(), null, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		}, function (r, bytes, total) {
			if (handler != null) {
				handler(bytes, total);
			}
		}, function (r, f) {
			if (downloadHandler != null) {
				downloadHandler(f);
			}
		});
		if (mimeType != null) {
			var exportMimeType = $.ig.CloudFile.prototype.getExportMimeType(mimeType);
			if (exportMimeType != null) {
				request.$export(true);
				request.exportMimeType(exportMimeType);
			}
		}
		request.path($.ig.GoogleFile.prototype.extractId(file));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::DownloadFile(System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::DownloadFile(System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	downloadFile: function (file, handler, downloaded, errorHandler) {
		return this.downloadFile1(file, null, handler, downloaded, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::DownloadFile(System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.CloudProviderType Infragistics.GoogleFileManager::GetProviderType()" />*/
	getProviderType: function () {
		return $.ig.CloudProviderType.prototype.google;
	}
	/*<EndMethod Name="Infragistics.CloudProviderType Infragistics.GoogleFileManager::GetProviderType()" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetMetadata(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	getMetadata: function (path, handler, errorHandler) {
		var request = new $.ig.GoogleGetMetadataRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.fileId($.ig.GoogleFile.prototype.extractId(path));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetMetadata(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleFileManager::UploadChunk(Infragistics.RequestWrapper, Infragistics.Request, System.String, System.String, System.Int64, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadChunk1: function (requestWrapper, originalRequest, file, uploadUrl, startPosition, progress, success, errorHandler) {
		var $self = this;
		var totalSize = $.ig.NativeFileUtility.prototype.getFileSize1(file);
		var chunkSize = $.ig.GoogleFileManager.prototype._cHUNK_SIZE;
		if (totalSize < startPosition + $.ig.GoogleFileManager.prototype._cHUNK_SIZE) {
			chunkSize = (totalSize - startPosition);
		}
		var data = $.ig.NativeFileUtility.prototype.readFile1(file, startPosition, chunkSize);
		var uploadDataRequest = new $.ig.GoogleUploadDataChunkRequest(this.tokenState(), function (r, o) {
			if ((r).isLast()) {
				success(new $.ig.GoogleFile(1, o, $self.tokenState().additionalIdentifier()));
			} else {
				var currentPosition = startPosition + $.ig.NativeRequestUtility.prototype.utility().getNativeDataSize(data);
				progress(currentPosition, totalSize);
				if (!originalRequest.isCanceled()) {
					$self.uploadChunk1(requestWrapper, originalRequest, file, uploadUrl, currentPosition, progress, success, errorHandler);
				}
			}
		}, function (r, error) {
			errorHandler(error);
		}, uploadUrl, startPosition, startPosition + $.ig.NativeRequestUtility.prototype.utility().getNativeDataSize(data) - 1, totalSize, data);
		requestWrapper.request(uploadDataRequest);
		this.executeAndManage(uploadDataRequest);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleFileManager::UploadChunk(Infragistics.RequestWrapper, Infragistics.Request, System.String, System.String, System.Int64, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::CreateFolder(System.String, System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	createFolder: function (newFolderName, remoteParentFolderId, successHandler, errorHandler) {
		var requestWrapper = new $.ig.RequestWrapper();
		var request = new $.ig.GoogleCreateFolderRequest(this.tokenState(), function (r, o) {
			if (successHandler != null) {
				successHandler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.newFolderName(newFolderName);
		request.parentFolderId(remoteParentFolderId == null ? $.ig.GoogleFile.prototype.rootKey : $.ig.GoogleFile.prototype.extractId(remoteParentFolderId));
		requestWrapper.request(request);
		return requestWrapper;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::CreateFolder(System.String, System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GenerateSharedLink(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	generateSharedLink: function (cloudFile, successHandler, errorHandler) {
		var request = new $.ig.GoogleCreateSharedLinkRequest(this.tokenState(), function (r, o) {
			cloudFile.sharedEditLink(cloudFile.openUrl());
			cloudFile.sharedViewLink(cloudFile.openUrl());
			successHandler(cloudFile);
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.fileId($.ig.GoogleFile.prototype.extractId(cloudFile.pathIdentifier()));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GenerateSharedLink(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::DeleteFile(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	deleteFile: function (path, successHandler, errorHandler) {
		var request = new $.ig.GoogleTrashFileRequest(this.tokenState(), successHandler, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.fileId($.ig.GoogleFile.prototype.extractId(path));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::DeleteFile(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::DeleteFilePermanent(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	deleteFilePermanent: function (path, successHandler, errorHandler) {
		var request = new $.ig.GoogleDeleteFileRequest(this.tokenState(), successHandler, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.fileId($.ig.GoogleFile.prototype.extractId(path));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::DeleteFilePermanent(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetAccountInfo(Infragistics.CloudAccountUserInfoBlock, Infragistics.CloudErrorBlock)" />*/
	getAccountInfo: function (successHandler, errorHandler) {
		var request = new $.ig.GoogleGetAccountInfo(this.tokenState(), function (r, o) {
			if (successHandler != null) {
				successHandler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetAccountInfo(Infragistics.CloudAccountUserInfoBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.GoogleFileManager::CanAddFileInFolder(System.String)" />*/
	canAddFileInFolder: function (fileId) {
		if (fileId != null && fileId.equals($.ig.GoogleFile.prototype.googleDriveRootId)) {
			return true;
		}
		if (fileId == null || fileId.length == 0) {
			return false;
		}
		var count = $.ig.GoogleFile.prototype.specialFolders().length;
		for (var i = 0; i < count; i++) {
			var file = $.ig.GoogleFile.prototype.specialFolders()[i];
			if (fileId.equals($.ig.GoogleFile.prototype.extractId(file.pathIdentifier()))) {
				return false;
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.GoogleFileManager::CanAddFileInFolder(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.GoogleFileManager::CanDeleteFile(System.String)" />*/
	canDeleteFile: function (fileId) {
		if (fileId != null) {
			var count = $.ig.GoogleFile.prototype.specialFolders().length;
			for (var i = 0; i < count; i++) {
				var file = $.ig.GoogleFile.prototype.specialFolders()[i];
				if (fileId.equals($.ig.GoogleFile.prototype.extractId(file.pathIdentifier()))) {
					return false;
				}
			}
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.GoogleFileManager::CanDeleteFile(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetParentForFile(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	getParentForFile: function (fileId, successHandler, errorHandler) {
		var $self = this;
		var request = this.getMetadata(fileId, function (cloudFile) {
			var googleFile = cloudFile;
			var parentId = googleFile.parentPathIdentifier();
			if (parentId == null) {
				successHandler(null);
			} else {
				var parentRequest = $self.getMetadata(parentId, successHandler, errorHandler);
				$self.executeAndManage(parentRequest);
			}
		}, errorHandler);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetParentForFile(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetFileByName(System.String, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFileByName: function (fileName, remoteFolderId, handler, errorHandler) {
		var requestWrapper = new $.ig.RequestWrapper();
		var request = new $.ig.GoogleGetFileRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.fileName(fileName);
		request.parentFolderId(remoteFolderId == null ? $.ig.GoogleFile.prototype.rootKey : $.ig.GoogleFile.prototype.extractId(remoteFolderId));
		requestWrapper.request(request);
		return requestWrapper;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetFileByName(System.String, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetDownloadLink(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	getDownloadLink: function (fileId, successHandler, errorHandler) {
		var request = new $.ig.GoogleDownloadLinkRequest(this.tokenState(), successHandler, errorHandler);
		request.path($.ig.GoogleFile.prototype.extractId(fileId));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetDownloadLink(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.GoogleFileRequest Infragistics.GoogleFileManager::processFile(System.String, System.String, System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock, System.Boolean)" />*/
	processFile: function (fileId, filePath, destinationPath, success, errorHandler, copyFile) {
		if (destinationPath == null || destinationPath.length == 0 || (destinationPath.length >= 3 && $.ig.NativeStringUtility.prototype.substring(destinationPath, 0, 3) == "fp_")) {
			var error = new $.ig.CloudError(0);
			error.errorMessage("Invalid destination");
			errorHandler(error);
			return null;
		}
		var fileRequest;
		if (copyFile) {
			fileRequest = new $.ig.GoogleCopyFileRequest(this.tokenState(), function (r, o) {
				success(null);
			}, function (r, e) {
				errorHandler(e);
			});
		} else {
			fileRequest = new $.ig.GoogleMoveFileRequest(this.tokenState(), function (r, o) {
				success(null);
			}, function (r, e) {
				errorHandler(e);
			});
			(fileRequest).filePath(filePath);
		}
		fileRequest.fileId($.ig.GoogleFile.prototype.extractId(fileId));
		fileRequest.destinationPath(destinationPath);
		return fileRequest;
	}
	/*<EndMethod Name="Infragistics.GoogleFileRequest Infragistics.GoogleFileManager::processFile(System.String, System.String, System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::CopyFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	copyFile: function (fileId, filePath, destinationPath, progress, success, errorHandler) {
		var request = this.processFile(fileId, filePath, destinationPath, success, errorHandler, true);
		if (request != null) {
			this.executeAndManage(request);
		}
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::CopyFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::MoveFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	moveFile: function (fileId, filePath, destinationPath, progress, success, errorHandler) {
		var request = this.processFile(fileId, filePath, destinationPath, success, errorHandler, false);
		if (request != null) {
			this.executeAndManage(request);
		}
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::MoveFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetFilePermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	getFilePermissions: function (fileId, successHandler, errorHandler) {
		var request = new $.ig.GoogleGetFilePermissionsRequest(this.tokenState(), function (r, o) {
			successHandler(o);
		}, errorHandler);
		request.fileId($.ig.GoogleFile.prototype.extractId(fileId));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetFilePermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetFileMembersPermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	getFileMembersPermissions: function (fileId, successHandler, errorHandler) {
		var $self = this;
		var request = new $.ig.GoogleListFilePermissionsRequest(this.tokenState(), function (r, o) {
			successHandler(new $.ig.GoogleFilePermissions(o, $self.tokenState().userInfo().getEmail(), $self.tokenState().userInfo().getUserId()));
		}, errorHandler);
		request.fileId($.ig.GoogleFile.prototype.extractId(fileId));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetFileMembersPermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::DeleteFileMemberPermissions(System.String, Infragistics.CloudFileMemberPermissions, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	deleteFileMemberPermissions: function (fileId, memberPermission, successHandler, errorHandler) {
		if (memberPermission == null || memberPermission.permissionKey() == null) {
			return null;
		}
		var request = this.deletePermission(fileId, successHandler, errorHandler, memberPermission.permissionKey());
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::DeleteFileMemberPermissions(System.String, Infragistics.CloudFileMemberPermissions, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::DeleteFilePermissions(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	deleteFilePermissions: function (fileId, successHandler, errorHandler) {
		var $self = this;
		var request = new $.ig.GoogleListFilePermissionsRequest(this.tokenState(), function (r, o) {
			var result = o;
			var permissions = result.resolveListForKey("permissions");
			for (var i = 0; i < permissions.length; i++) {
				var permission = $.ig.CPJSONObject.prototype.createFromJSONObject(permissions[i]);
				$self.deletePermission1(fileId, successHandler, errorHandler, permission);
			}
			successHandler(r, o);
		}, errorHandler);
		request.fileId($.ig.GoogleFile.prototype.extractId(fileId));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::DeleteFilePermissions(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::DeletePermission(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock, System.String)" />*/
	deletePermission: function (fileId, successHandler, errorHandler, permissionId) {
		var deleteRequest = new $.ig.GoogleDeleteFilePermissionsRequest(this.tokenState(), successHandler, errorHandler);
		deleteRequest.fileId($.ig.GoogleFile.prototype.extractId(fileId));
		deleteRequest.permissionId(permissionId);
		return deleteRequest;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::DeletePermission(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleFileManager::DeletePermission(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock, Infragistics.CPJSONObject)" />*/
	deletePermission1: function (fileId, successHandler, errorHandler, permission) {
		if (("user").equals(permission.resolveStringForKey("type"))) {
			var request = this.deletePermission(fileId, successHandler, errorHandler, permission.resolveStringForKey("id"));
			this.executeAndManage(request);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleFileManager::DeletePermission(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock, Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GrantPermissionsForFile(System.String, Infragistics.TokenState, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	grantPermissionsForFile: function (fileId, granteeTokenState, successHandler, errorHandler) {
		if (granteeTokenState.userInfo() == null || (granteeTokenState.userInfo()).getEmail() == null) {
			errorHandler(null, (function () {
				var $ret = new $.ig.CloudError(0);
				$ret.errorMessage("Missing user information from Google Drive.");
				return $ret;
			}()));
			return null;
		}
		var request = new $.ig.GoogleShareObjectRequest(this.tokenState(), function (r1, o1) {
			var permissions = new $.ig.GoogleFilePermissions(o1, granteeTokenState.userInfo().getEmail(), granteeTokenState.userInfo().getUserId());
			successHandler(r1, permissions);
		}, errorHandler);
		request.fileId($.ig.GoogleFile.prototype.extractId(fileId));
		request.emailAddress((granteeTokenState.userInfo()).getEmail());
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GrantPermissionsForFile(System.String, Infragistics.TokenState, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	__getFilePathRequest: null,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetFilePath(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	getFilePath: function (cloudFile, successHandler, errorHandler) {
		if (cloudFile.locationPath() == null) {
			this.traverseParentsToRoot(cloudFile, cloudFile, successHandler, errorHandler);
			return this.__getFilePathRequest;
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::GetFilePath(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleFileManager::TraverseParentsToRoot(Infragistics.CloudFile, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	traverseParentsToRoot: function (cloudFile, parentCloudFile, successHandler, errorHandler) {
		var $self = this;
		this.__getFilePathRequest = this.getParentForFile($.ig.GoogleFile.prototype.extractId(parentCloudFile.pathIdentifier()), function (file) {
			$self.setParentPath(cloudFile, parentCloudFile, file, successHandler, errorHandler);
		}, function (error) {
			$self.failedFilePathRequest(errorHandler, error);
		});
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleFileManager::TraverseParentsToRoot(Infragistics.CloudFile, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleFileManager::SetParentPath(Infragistics.CloudFile, Infragistics.CloudFile, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	setParentPath: function (cloudFile, previousParentFile, parentCloudFile, successHandler, errorHandler) {
		this.__getFilePathRequest = null;
		if (parentCloudFile == null) {
			this.successfulFilePathRequest($.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.sharedWithMeFolderName), successHandler, cloudFile);
		} else {
			var parentFolderName = parentCloudFile.name();
			if (parentFolderName != $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.myDriveFolderName)) {
				var path = cloudFile.locationPath();
				if (path == null) {
					cloudFile.locationPath(parentFolderName);
				} else {
					cloudFile.locationPath(parentFolderName + "/" + path);
				}
			}
			var googleParentFile = parentCloudFile;
			var parentId = googleParentFile.parentPathIdentifier();
			if (parentId == null) {
				this.successfulFilePathRequest($.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.myDriveFolderName), successHandler, cloudFile);
			} else {
				this.traverseParentsToRoot(cloudFile, parentCloudFile, successHandler, errorHandler);
				if (this.__getFilePathRequest != null) {
					this.__getFilePathRequest.execute();
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleFileManager::SetParentPath(Infragistics.CloudFile, Infragistics.CloudFile, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleFileManager::SuccessfulFilePathRequest(System.String, Infragistics.CloudFileBlock, Infragistics.CloudFile)" />*/
	successfulFilePathRequest: function (root, successHandler, cloudFile) {
		var filePath = cloudFile.locationPath();
		cloudFile.locationPath(root + (filePath == null ? "" : "/" + filePath));
		if (successHandler != null) {
			successHandler(cloudFile);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleFileManager::SuccessfulFilePathRequest(System.String, Infragistics.CloudFileBlock, Infragistics.CloudFile)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleFileManager::FailedFilePathRequest(Infragistics.CloudErrorBlock, Infragistics.CloudError)" />*/
	failedFilePathRequest: function (errorHandler, error) {
		this.__getFilePathRequest = null;
		if (errorHandler != null) {
			errorHandler(error);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleFileManager::FailedFilePathRequest(Infragistics.CloudErrorBlock, Infragistics.CloudError)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.GoogleFileManager::HasExpiredToken(Infragistics.CloudError)" />*/
	hasExpiredToken: function (error) {
		var errorMessage = (error != null && !$.ig.CPStringUtility.prototype.isNullOrEmpty(error.errorMessage())) ? error.errorMessage().toLowerCase() : "";
		if ($.ig.NativeStringUtility.prototype.contains(errorMessage, "autherror") || $.ig.NativeStringUtility.prototype.contains(error.errorMessage(), "invalid credentials")) {
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.GoogleFileManager::HasExpiredToken(Infragistics.CloudError)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::DownloadFileFromLink(System.String, System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	downloadFileFromLink: function (fileId, downloadLink, successHandler, errorHandler) {
		return new $.ig.GoogleDownloadFileFromLinkRequest(downloadLink, this.tokenState(), successHandler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::DownloadFileFromLink(System.String, System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::DeleteSharedLink(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	deleteSharedLink: function (fileId, successHandler, errorHandler) {
		return new $.ig.GoogleDeleteSharedLinkRequest(fileId, this.tokenState(), successHandler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::DeleteSharedLink(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::OverwriteFile(System.String, System.Object, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	overwriteFile: function (fileName, file, remoteFolderId, remoteFileId, progress, success, errorHandler) {
		var $self = this;
		var requestWrapper = new $.ig.RequestWrapper();
		var request = new $.ig.GoogleCreateOverwriteSessionRequest(this.tokenState(), function (r, o) {
			var uploadUrl = $.ig.RQHTTPUtils.prototype.getHeaderValue(o, "Location");
			$self.uploadChunk(requestWrapper, r, file, uploadUrl, 0, progress, success, errorHandler);
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.fileId(remoteFileId);
		requestWrapper.request(request);
		return requestWrapper;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::OverwriteFile(System.String, System.Object, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleFileManager::UploadFile(System.String, System.Object, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadFile: function (fileName, file, remoteFolderId, progress, success, errorHandler) {
		var $self = this;
		var requestWrapper = new $.ig.RequestWrapper();
		var request = new $.ig.GoogleCreateUploadSessionRequest(this.tokenState(), function (r, o) {
			var uploadUrl = (o).item("Location");
			if (uploadUrl == null) {
				uploadUrl = (o).item("location");
			}
			$self.uploadChunk(requestWrapper, r, file, uploadUrl, 0, progress, success, errorHandler);
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.title(fileName);
		request.parentFolderId(remoteFolderId);
		requestWrapper.request(request);
		return requestWrapper;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleFileManager::UploadFile(System.String, System.Object, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleFileManager::UploadChunk(Infragistics.RequestWrapper, Infragistics.Request, System.Object, System.String, System.Int64, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadChunk: function (requestWrapper, originalRequest, file, uploadUrl, startPosition, progress, success, errorHandler) {
		var $self = this;
		var totalSize = $.ig.NativeFileUtility.prototype.getFileSize(file);
		var chunkSize = $.ig.GoogleFileManager.prototype._cHUNK_SIZE;
		if (totalSize < startPosition + $.ig.GoogleFileManager.prototype._cHUNK_SIZE) {
			chunkSize = (totalSize - startPosition);
		}
		var readFileRequest = $.ig.NativeRequestUtility.prototype.utility().readFile(file, startPosition, chunkSize, function (r, o) {
			var data = o;
			$self.uploadChunkWithData(requestWrapper, originalRequest, file, data, uploadUrl, startPosition, totalSize, progress, success, errorHandler);
		}, function (r, o) {
		});
		requestWrapper.request(readFileRequest);
		readFileRequest.execute();
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleFileManager::UploadChunk(Infragistics.RequestWrapper, Infragistics.Request, System.Object, System.String, System.Int64, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleFileManager::UploadChunkWithData(Infragistics.RequestWrapper, Infragistics.Request, System.Object, System.Object, System.String, System.Int64, System.Int64, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadChunkWithData: function (requestWrapper, originalRequest, file, data, uploadUrl, startPosition, totalSize, progress, success, errorHandler) {
		var $self = this;
		var uploadDataRequest = new $.ig.GoogleUploadDataChunkRequest(this.tokenState(), function (r, o) {
			if ((r).isLast()) {
				success(new $.ig.GoogleFile(1, o, $self.tokenState().additionalIdentifier()));
			} else {
				var currentPosition = startPosition + $.ig.NativeRequestUtility.prototype.utility().getNativeDataSize(data);
				progress(currentPosition, totalSize);
				if (!originalRequest.isCanceled()) {
					$self.uploadChunk(requestWrapper, originalRequest, file, uploadUrl, currentPosition, progress, success, errorHandler);
				}
			}
		}, function (r, error) {
			errorHandler(error);
		}, uploadUrl, startPosition, startPosition + $.ig.NativeRequestUtility.prototype.utility().getNativeDataSize(data) - 1, totalSize, null);
		uploadDataRequest.chunk(data);
		requestWrapper.request(uploadDataRequest);
		uploadDataRequest.execute();
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleFileManager::UploadChunkWithData(Infragistics.RequestWrapper, Infragistics.Request, System.Object, System.Object, System.String, System.Int64, System.Int64, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	$type: new $.ig.Type('GoogleFileManager', $.ig.CloudFileManager.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleFileManager" />*/

/*<BeginType Name="Infragistics.GoogleGetEventsRequest" />*/

$.ig.util.defType('GoogleGetEventsRequest', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "Google_GetEvents", token, success, error);
	},
	_calendarID: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleGetEventsRequest::CalendarID()" />*/
	calendarID: function (value) {
		if (arguments.length === 1) {
			this._calendarID = value;
			return value;
		} else {
			return this._calendarID;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleGetEventsRequest::CalendarID()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetEventsRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetEventsRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleGetEventsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "calendar/v3/calendars/" + this.calendarID() + "/events";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGetEventsRequest::ResolveAction()" />*/
	,
	$type: new $.ig.Type('GoogleGetEventsRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleGetEventsRequest" />*/

/*<BeginType Name="Infragistics.GoogleListDirectoryRequest" />*/

$.ig.util.defType('GoogleListDirectoryRequest', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "Google_ListDirectory", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleListDirectoryRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleListDirectoryRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleListDirectoryRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "admin/directory/v1/users";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleListDirectoryRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GoogleListDirectoryRequest::ResolveParams()" />*/
	resolveParams: function () {
		var p = $.ig.GoogleRequestBase.prototype.resolveParams.call(this);
		p.item("customer", "my_customer");
		p.item("viewType", "domain_public");
		return p;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GoogleListDirectoryRequest::ResolveParams()" />*/
	,
	$type: new $.ig.Type('GoogleListDirectoryRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleListDirectoryRequest" />*/

/*<BeginType Name="Infragistics.GoogleListRoomsRequest" />*/

$.ig.util.defType('GoogleListRoomsRequest', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "Google_GetRooms", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleListRoomsRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleListRoomsRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleListRoomsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "admin/directory/v1/customer/my_customer/resources/calendars";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleListRoomsRequest::ResolveAction()" />*/
	,
	$type: new $.ig.Type('GoogleListRoomsRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleListRoomsRequest" />*/

/*<BeginType Name="Infragistics.GoogleGetUserAvailabilityRequest" />*/

$.ig.util.defType('GoogleGetUserAvailabilityRequest', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "Google_GetAvailability", token, success, error);
	},
	_start: new Date(),
	/*<BeginProperty Name="System.DateTime Infragistics.GoogleGetUserAvailabilityRequest::Start()" />*/
	start: function (value) {
		if (arguments.length === 1) {
			this._start = value;
			return value;
		} else {
			return this._start;
		}
	}
	/*<EndProperty Name="System.DateTime Infragistics.GoogleGetUserAvailabilityRequest::Start()" />*/
	,
	_end: new Date(),
	/*<BeginProperty Name="System.DateTime Infragistics.GoogleGetUserAvailabilityRequest::End()" />*/
	end: function (value) {
		if (arguments.length === 1) {
			this._end = value;
			return value;
		} else {
			return this._end;
		}
	}
	/*<EndProperty Name="System.DateTime Infragistics.GoogleGetUserAvailabilityRequest::End()" />*/
	,
	_attendees: null,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.GoogleGetUserAvailabilityRequest::Attendees()" />*/
	attendees: function (value) {
		if (arguments.length === 1) {
			this._attendees = value;
			return value;
		} else {
			return this._attendees;
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.GoogleGetUserAvailabilityRequest::Attendees()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetUserAvailabilityRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetUserAvailabilityRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleGetUserAvailabilityRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "calendar/v3/freeBusy";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGetUserAvailabilityRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleGetUserAvailabilityRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var calendarIDs = new $.ig.Array();
		for (var i = 0; i < this.attendees().length; i++) {
			var val = new $.ig.CPJSONObject(1);
			val.setValueForKey("id", this.attendees()[i]);
			calendarIDs.add(val.jSONObject());
		}
		var content = new $.ig.CPJSONObject(1);
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGetUserAvailabilityRequest::ResolvePostContent()" />*/
	,
	$type: new $.ig.Type('GoogleGetUserAvailabilityRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleGetUserAvailabilityRequest" />*/

/*<BeginType Name="Infragistics.GoogleGetAccountInfo" />*/

$.ig.util.defType('GoogleGetAccountInfo', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "Google_GetAccountInfo", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetAccountInfo::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetAccountInfo::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleGetAccountInfo::ResolveAction()" />*/
	resolveAction: function () {
		return "oauth2/v3/userinfo";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGetAccountInfo::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleGetAccountInfo::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return new $.ig.GoogleAccountUserInfo(1, response);
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleGetAccountInfo::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleGetAccountInfo::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.GoogleRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleGetAccountInfo::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('GoogleGetAccountInfo', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleGetAccountInfo" />*/

/*<BeginType Name="Infragistics.GoogleSearchFilesRequest" />*/

$.ig.util.defType('GoogleSearchFilesRequest', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "GoogleSearchFiles", token, success, error);
	},
	_query: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleSearchFilesRequest::Query()" />*/
	query: function (value) {
		if (arguments.length === 1) {
			this._query = value;
			return value;
		} else {
			return this._query;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleSearchFilesRequest::Query()" />*/
	,
	_q: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleSearchFilesRequest::Q()" />*/
	q: function (value) {
		if (arguments.length === 1) {
			this._q = value;
			return value;
		} else {
			return this._q;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleSearchFilesRequest::Q()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleSearchFilesRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleSearchFilesRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleSearchFilesRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/v3/files";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleSearchFilesRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GoogleSearchFilesRequest::ResolveParams()" />*/
	resolveParams: function () {
		var query;
		if (this.q() != null) {
			query = this.q();
		} else {
			query = "name contains '" + this.query() + "' and trashed=false";
		}
		var p = $.ig.GoogleRequestBase.prototype.resolveParams.call(this);
		p.item("q", $.ig.NativeRequestUtility.prototype.utility().uRLEncodeString(query));
		$.ig.GoogleRequestBase.prototype.setFilesQueryFields(p);
		return p;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GoogleSearchFilesRequest::ResolveParams()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleSearchFilesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var files = new $.ig.Array();
		var entries = response.resolveListForKey("files");
		var count = entries.length;
		for (var i = 0; i < count; i++) {
			files.add(new $.ig.GoogleFile(1, $.ig.CPJSONObject.prototype.createFromJSONObject(entries[i]), this.tokenState().additionalIdentifier()));
		}
		return files;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleSearchFilesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleSearchFilesRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.GoogleRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleSearchFilesRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('GoogleSearchFilesRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleSearchFilesRequest" />*/

/*<BeginType Name="Infragistics.GoogleGetFileRequest" />*/

$.ig.util.defType('GoogleGetFileRequest', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "GoogleGetFileRequest", token, success, error);
	},
	_fileName: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleGetFileRequest::FileName()" />*/
	fileName: function (value) {
		if (arguments.length === 1) {
			this._fileName = value;
			return value;
		} else {
			return this._fileName;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleGetFileRequest::FileName()" />*/
	,
	_parentFolderId: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleGetFileRequest::ParentFolderId()" />*/
	parentFolderId: function (value) {
		if (arguments.length === 1) {
			this._parentFolderId = value;
			return value;
		} else {
			return this._parentFolderId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleGetFileRequest::ParentFolderId()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetFileRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetFileRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleGetFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/v3/files";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGetFileRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GoogleGetFileRequest::ResolveParams()" />*/
	resolveParams: function () {
		var p = $.ig.GoogleRequestBase.prototype.resolveParams.call(this);
		var query = "name = '" + this.fileName() + "' AND '" + this.parentFolderId() + "' IN parents AND trashed=false";
		p.item("q", $.ig.NativeRequestUtility.prototype.utility().uRLEncodeString(query));
		$.ig.GoogleRequestBase.prototype.setFilesQueryFields(p);
		return p;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GoogleGetFileRequest::ResolveParams()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleGetFileRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var files = new $.ig.Array();
		var entries = response.resolveListForKey("files");
		var count = entries.length;
		for (var i = 0; i < count; i++) {
			files.add(new $.ig.GoogleFile(1, $.ig.CPJSONObject.prototype.createFromJSONObject(entries[i]), this.tokenState().additionalIdentifier()));
		}
		return files;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleGetFileRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleGetFileRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		$.ig.GoogleRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleGetFileRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('GoogleGetFileRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleGetFileRequest" />*/

/*<BeginType Name="Infragistics.GoogleCreateFolderRequest" />*/

$.ig.util.defType('GoogleCreateFolderRequest', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "GoogleCreateFolder", token, success, error);
	},
	_newFolderName: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleCreateFolderRequest::NewFolderName()" />*/
	newFolderName: function (value) {
		if (arguments.length === 1) {
			this._newFolderName = value;
			return value;
		} else {
			return this._newFolderName;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleCreateFolderRequest::NewFolderName()" />*/
	,
	_parentFolderId: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleCreateFolderRequest::ParentFolderId()" />*/
	parentFolderId: function (value) {
		if (arguments.length === 1) {
			this._parentFolderId = value;
			return value;
		} else {
			return this._parentFolderId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleCreateFolderRequest::ParentFolderId()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleCreateFolderRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleCreateFolderRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleCreateFolderRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/v3/files";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleCreateFolderRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleCreateFolderRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var input = new $.ig.CPJSONObject(1);
		input.setValueForKey("name", this.newFolderName());
		var parentFolders = new $.ig.Array();
		parentFolders.add(this.parentFolderId());
		input.setValueForKey("parents", parentFolders);
		input.setValueForKey("mimeType", "application/vnd.google-apps.folder");
		return input.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.GoogleCreateFolderRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleCreateFolderRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return (new $.ig.GoogleFile(1, response, this.tokenState().additionalIdentifier()));
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleCreateFolderRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleCreateFolderRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.GoogleRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleCreateFolderRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('GoogleCreateFolderRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleCreateFolderRequest" />*/

/*<BeginType Name="Infragistics.GoogleDeleteFileRequest" />*/

$.ig.util.defType('GoogleDeleteFileRequest', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "GoogleDeleteFile", token, success, error);
	},
	_fileId: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleDeleteFileRequest::FileId()" />*/
	fileId: function (value) {
		if (arguments.length === 1) {
			this._fileId = value;
			return value;
		} else {
			return this._fileId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleDeleteFileRequest::FileId()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleDeleteFileRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.dELETE;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleDeleteFileRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleDeleteFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/v3/files/" + this.fileId();
	}
	/*<EndMethod Name="System.String Infragistics.GoogleDeleteFileRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleDeleteFileRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.GoogleRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleDeleteFileRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('GoogleDeleteFileRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleDeleteFileRequest" />*/

/*<BeginType Name="Infragistics.GoogleTrashFileRequest" />*/

$.ig.util.defType('GoogleTrashFileRequest', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "GoogleTrashFile", token, success, error);
	},
	_fileId: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleTrashFileRequest::FileId()" />*/
	fileId: function (value) {
		if (arguments.length === 1) {
			this._fileId = value;
			return value;
		} else {
			return this._fileId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleTrashFileRequest::FileId()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleTrashFileRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleTrashFileRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GoogleTrashFileRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var hs = new $.ig.Dictionary(0);
		hs.item("X-HTTP-Method-Override", "PATCH");
		return hs;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GoogleTrashFileRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleTrashFileRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var input = new $.ig.CPJSONObject(1);
		input.setValueForKey("trashed", true);
		return input.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.GoogleTrashFileRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleTrashFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/v3/files/" + this.fileId();
	}
	/*<EndMethod Name="System.String Infragistics.GoogleTrashFileRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleTrashFileRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.GoogleRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleTrashFileRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('GoogleTrashFileRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleTrashFileRequest" />*/

/*<BeginType Name="Infragistics.GoogleCreateUploadSessionRequest" />*/

$.ig.util.defType('GoogleCreateUploadSessionRequest', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "GoogleCreateUploadSession", token, success, error);
	},
	_title: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleCreateUploadSessionRequest::Title()" />*/
	title: function (value) {
		if (arguments.length === 1) {
			this._title = value;
			return value;
		} else {
			return this._title;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleCreateUploadSessionRequest::Title()" />*/
	,
	_parentFolderId: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleCreateUploadSessionRequest::ParentFolderId()" />*/
	parentFolderId: function (value) {
		if (arguments.length === 1) {
			this._parentFolderId = value;
			return value;
		} else {
			return this._parentFolderId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleCreateUploadSessionRequest::ParentFolderId()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleCreateUploadSessionRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleCreateUploadSessionRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.GoogleCreateUploadSessionRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.GoogleCreateUploadSessionRequest::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleCreateUploadSessionRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var input = new $.ig.CPJSONObject(1);
		input.setValueForKey("name", this.title());
		var parentFolders = new $.ig.Array();
		parentFolders.add(this.parentFolderId());
		input.setValueForKey("parents", parentFolders);
		return input.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.GoogleCreateUploadSessionRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.GoogleCreateUploadSessionRequest::ProcessHeaders(System.Int32, Infragistics.CPDictionary)" />*/
	processHeaders: function (statusCode, response) {
		this.success(response);
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.GoogleCreateUploadSessionRequest::ProcessHeaders(System.Int32, Infragistics.CPDictionary)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleCreateUploadSessionRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "upload/drive/v3/files?uploadType=resumable&fields=*";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleCreateUploadSessionRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleCreateUploadSessionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleCreateUploadSessionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleCreateUploadSessionRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.GoogleRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleCreateUploadSessionRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('GoogleCreateUploadSessionRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleCreateUploadSessionRequest" />*/

/*<BeginType Name="Infragistics.GoogleCreateOverwriteSessionRequest" />*/

$.ig.util.defType('GoogleCreateOverwriteSessionRequest', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "GoogleCreateOverwriteSessionRequest", token, success, error);
	},
	_fileId: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleCreateOverwriteSessionRequest::FileId()" />*/
	fileId: function (value) {
		if (arguments.length === 1) {
			this._fileId = value;
			return value;
		} else {
			return this._fileId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleCreateOverwriteSessionRequest::FileId()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleCreateOverwriteSessionRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleCreateOverwriteSessionRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GoogleCreateOverwriteSessionRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var hs = new $.ig.Dictionary(0);
		hs.item("X-HTTP-Method-Override", "PATCH");
		return hs;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GoogleCreateOverwriteSessionRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.GoogleCreateOverwriteSessionRequest::ProcessHeaders(System.Int32, Infragistics.CPDictionary)" />*/
	processHeaders: function (statusCode, response) {
		this.success(response);
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.GoogleCreateOverwriteSessionRequest::ProcessHeaders(System.Int32, Infragistics.CPDictionary)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleCreateOverwriteSessionRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "upload/drive/v3/files/" + this.fileId() + "?uploadType=resumable&fields=*";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleCreateOverwriteSessionRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleCreateOverwriteSessionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleCreateOverwriteSessionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleCreateOverwriteSessionRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.GoogleRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleCreateOverwriteSessionRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('GoogleCreateOverwriteSessionRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleCreateOverwriteSessionRequest" />*/

/*<BeginType Name="Infragistics.GoogleUploadDataChunkRequest" />*/

$.ig.util.defType('GoogleUploadDataChunkRequest', 'GoogleRequestBase', {
	init: function (token, success, error, uploadUrl, rangeStart, rangeEnd, totalSize, data) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "GoogleUploadDataChunkRequest", token, success, error);
		this.uploadUrl(uploadUrl);
		this.rangeStart(rangeStart);
		this.rangeEnd(rangeEnd);
		this.totalSize(totalSize);
		this.data(data);
	},
	_uploadUrl: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleUploadDataChunkRequest::UploadUrl()" />*/
	uploadUrl: function (value) {
		if (arguments.length === 1) {
			this._uploadUrl = value;
			return value;
		} else {
			return this._uploadUrl;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleUploadDataChunkRequest::UploadUrl()" />*/
	,
	_rangeStart: 0,
	/*<BeginProperty Name="System.Int64 Infragistics.GoogleUploadDataChunkRequest::RangeStart()" />*/
	rangeStart: function (value) {
		if (arguments.length === 1) {
			this._rangeStart = value;
			return value;
		} else {
			return this._rangeStart;
		}
	}
	/*<EndProperty Name="System.Int64 Infragistics.GoogleUploadDataChunkRequest::RangeStart()" />*/
	,
	_rangeEnd: 0,
	/*<BeginProperty Name="System.Int64 Infragistics.GoogleUploadDataChunkRequest::RangeEnd()" />*/
	rangeEnd: function (value) {
		if (arguments.length === 1) {
			this._rangeEnd = value;
			return value;
		} else {
			return this._rangeEnd;
		}
	}
	/*<EndProperty Name="System.Int64 Infragistics.GoogleUploadDataChunkRequest::RangeEnd()" />*/
	,
	_totalSize: 0,
	/*<BeginProperty Name="System.Int64 Infragistics.GoogleUploadDataChunkRequest::TotalSize()" />*/
	totalSize: function (value) {
		if (arguments.length === 1) {
			this._totalSize = value;
			return value;
		} else {
			return this._totalSize;
		}
	}
	/*<EndProperty Name="System.Int64 Infragistics.GoogleUploadDataChunkRequest::TotalSize()" />*/
	,
	_data: null,
	/*<BeginProperty Name="System.Array Infragistics.GoogleUploadDataChunkRequest::Data()" />*/
	data: function (value) {
		if (arguments.length === 1) {
			this._data = value;
			return value;
		} else {
			return this._data;
		}
	}
	/*<EndProperty Name="System.Array Infragistics.GoogleUploadDataChunkRequest::Data()" />*/
	,
	_chunk: null,
	/*<BeginProperty Name="System.Object Infragistics.GoogleUploadDataChunkRequest::Chunk()" />*/
	chunk: function (value) {
		if (arguments.length === 1) {
			this._chunk = value;
			return value;
		} else {
			return this._chunk;
		}
	}
	/*<EndProperty Name="System.Object Infragistics.GoogleUploadDataChunkRequest::Chunk()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleUploadDataChunkRequest::IsLast()" />*/
	isLast: function () {
		return this.totalSize() <= this.rangeEnd() + 1;
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleUploadDataChunkRequest::IsLast()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleUploadDataChunkRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pUT;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleUploadDataChunkRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleUploadDataChunkRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return this.uploadUrl();
	}
	/*<EndMethod Name="System.String Infragistics.GoogleUploadDataChunkRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleUploadDataChunkRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleUploadDataChunkRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Array Infragistics.GoogleUploadDataChunkRequest::ResolvePostContentData()" />*/
	resolvePostContentData: function () {
		return this.data();
	}
	/*<EndMethod Name="System.Array Infragistics.GoogleUploadDataChunkRequest::ResolvePostContentData()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleUploadDataChunkRequest::ResolvePostContentAsObject()" />*/
	resolvePostContentAsObject: function () {
		return this.chunk();
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleUploadDataChunkRequest::ResolvePostContentAsObject()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.GoogleUploadDataChunkRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.GoogleUploadDataChunkRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleUploadDataChunkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleUploadDataChunkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleUploadDataChunkRequest::ProcessDataResponse(System.Array)" />*/
	processDataResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleUploadDataChunkRequest::ProcessDataResponse(System.Array)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GoogleUploadDataChunkRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var headers = new $.ig.Dictionary(0);
		if (this.totalSize() > 0) {
			var contentRange = "bytes " + this.rangeStart().toString() + "-" + this.rangeEnd().toString() + "/" + this.totalSize().toString();
			headers.item("Content-Range", contentRange);
		}
		return headers;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GoogleUploadDataChunkRequest::ResolveAdditionalHeaderFields()" />*/
	,
	$type: new $.ig.Type('GoogleUploadDataChunkRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleUploadDataChunkRequest" />*/

/*<BeginType Name="Infragistics.GoogleGetEmailAddressesRequest" />*/

$.ig.util.defType('GoogleGetEmailAddressesRequest', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "GoogleGetEmailAddressesRequest", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetEmailAddressesRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetEmailAddressesRequest::ResolveHTTPMethod()" />*/
	,
	_uID: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleGetEmailAddressesRequest::UID()" />*/
	uID: function (value) {
		if (arguments.length === 1) {
			this._uID = value;
			return value;
		} else {
			return this._uID;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleGetEmailAddressesRequest::UID()" />*/
	,
	_googleProvider: null,
	/*<BeginProperty Name="Infragistics.ProviderBase Infragistics.GoogleGetEmailAddressesRequest::GoogleProvider()" />*/
	googleProvider: function (value) {
		if (arguments.length === 1) {
			this._googleProvider = value;
			return value;
		} else {
			return this._googleProvider;
		}
	}
	/*<EndProperty Name="Infragistics.ProviderBase Infragistics.GoogleGetEmailAddressesRequest::GoogleProvider()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleGetEmailAddressesRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://people.googleapis.com/v1/";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGetEmailAddressesRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleGetEmailAddressesRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "people/me/connections";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGetEmailAddressesRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GoogleGetEmailAddressesRequest::ResolveParams()" />*/
	resolveParams: function () {
		var p = $.ig.GoogleRequestBase.prototype.resolveParams.call(this);
		p.item("personFields", "names,emailAddresses");
		return p;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GoogleGetEmailAddressesRequest::ResolveParams()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleGetEmailAddressesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var result = new $.ig.Array();
		var connections = response.resolveListForKey("connections");
		var count = connections.length;
		for (var i = 0; i < count; i++) {
			var person = $.ig.CPJSONObject.prototype.createFromJSONObject(connections[i]);
			var name = "";
			var names = person.resolveListForKey("names");
			if (names != null) {
				if (names.length > 0) {
					var firstName = $.ig.CPJSONObject.prototype.createFromJSONObject(names[0]);
					name = firstName.resolveStringForKey("displayName");
				}
			}
			var emailAddresses = person.resolveListForKey("emailAddresses");
			if (names != null) {
				var countEmails = emailAddresses.length;
				for (var j = 0; j < countEmails; j++) {
					var emailAddress = $.ig.CPJSONObject.prototype.createFromJSONObject(emailAddresses[j]);
					var address = emailAddress.resolveStringForKey("value");
					var member = new $.ig.CPJSONObject(1);
					member.setValueForKey("name", name);
					member.setValueForKey("email", address);
					result.add(member);
				}
			}
		}
		return result;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleGetEmailAddressesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleGetEmailAddressesRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		$.ig.GoogleRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleGetEmailAddressesRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('GoogleGetEmailAddressesRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleGetEmailAddressesRequest" />*/

/*<BeginType Name="Infragistics.GoogleGetFilePermissionsRequest" />*/

$.ig.util.defType('GoogleGetFilePermissionsRequest', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "GoogleGetFilePermissionsRequest", token, success, error);
	},
	_fileId: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleGetFilePermissionsRequest::FileId()" />*/
	fileId: function (value) {
		if (arguments.length === 1) {
			this._fileId = value;
			return value;
		} else {
			return this._fileId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleGetFilePermissionsRequest::FileId()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetFilePermissionsRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetFilePermissionsRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleGetFilePermissionsRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://www.googleapis.com/";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGetFilePermissionsRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleGetFilePermissionsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/v3/files/" + this.fileId() + "?fields=capabilities";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGetFilePermissionsRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleGetFilePermissionsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return new $.ig.GoogleFilePermissions(response, this.tokenState().userInfo().getEmail(), this.tokenState().userInfo().getUserId());
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleGetFilePermissionsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleGetFilePermissionsRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		$.ig.GoogleRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleGetFilePermissionsRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('GoogleGetFilePermissionsRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleGetFilePermissionsRequest" />*/

/*<BeginType Name="Infragistics.GoogleListFilePermissionsRequest" />*/

$.ig.util.defType('GoogleListFilePermissionsRequest', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "GoogleListFilePermissionsRequest", token, success, error);
	},
	_fileId: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleListFilePermissionsRequest::FileId()" />*/
	fileId: function (value) {
		if (arguments.length === 1) {
			this._fileId = value;
			return value;
		} else {
			return this._fileId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleListFilePermissionsRequest::FileId()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleListFilePermissionsRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleListFilePermissionsRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleListFilePermissionsRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://www.googleapis.com/";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleListFilePermissionsRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleListFilePermissionsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/v3/files/" + this.fileId() + "?fields=permissions";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleListFilePermissionsRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleListFilePermissionsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleListFilePermissionsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleListFilePermissionsRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		$.ig.GoogleRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleListFilePermissionsRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('GoogleListFilePermissionsRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleListFilePermissionsRequest" />*/

/*<BeginType Name="Infragistics.GoogleDeleteFilePermissionsRequest" />*/

$.ig.util.defType('GoogleDeleteFilePermissionsRequest', 'GoogleRequestBase', {
	_fileId: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleDeleteFilePermissionsRequest::FileId()" />*/
	fileId: function (value) {
		if (arguments.length === 1) {
			this._fileId = value;
			return value;
		} else {
			return this._fileId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleDeleteFilePermissionsRequest::FileId()" />*/
	,
	_permissionId: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleDeleteFilePermissionsRequest::PermissionId()" />*/
	permissionId: function (value) {
		if (arguments.length === 1) {
			this._permissionId = value;
			return value;
		} else {
			return this._permissionId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleDeleteFilePermissionsRequest::PermissionId()" />*/
	,
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "GoogleDeleteFilePermissionsRequest", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleDeleteFilePermissionsRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.dELETE;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleDeleteFilePermissionsRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleDeleteFilePermissionsRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://www.googleapis.com/";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleDeleteFilePermissionsRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleDeleteFilePermissionsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/v3/files/" + this.fileId() + "/permissions/" + this.permissionId();
	}
	/*<EndMethod Name="System.String Infragistics.GoogleDeleteFilePermissionsRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleDeleteFilePermissionsRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.GoogleRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleDeleteFilePermissionsRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('GoogleDeleteFilePermissionsRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleDeleteFilePermissionsRequest" />*/

/*<BeginType Name="Infragistics.GoogleFilePermissions" />*/

$.ig.util.defType('GoogleFilePermissions', 'CloudFilePermissions', {
	__capabilities: null,
	__permissions: null,
	__email: null,
	__userId: null,
	__role: null,
	init: function (json, email, userId) {
		$.ig.CloudFilePermissions.prototype.init.call(this, 0);
		if (json != null) {
			this.__email = email;
			this.__userId = userId;
			this.__capabilities = json.resolveJSONForKey("capabilities");
			this.__permissions = json.resolveListForKey("permissions");
			this.__role = json.resolveStringForKey("role");
			this.setMembers();
		}
	},
	/*<BeginMethod Name="System.Void Infragistics.GoogleFilePermissions::SetMembers()" />*/
	setMembers: function () {
		if (this.__permissions != null) {
			for (var i = 0; i < this.__permissions.length; i++) {
				var permission = $.ig.CPJSONObject.prototype.createFromJSONObject(this.__permissions[i]);
				var permissionId = permission.resolveStringForKey("id");
				var email = permission.resolveStringForKey("emailAddress");
				var role = permission.resolveStringForKey("role");
				var name = permission.resolveStringForKey("displayName");
				if (permissionId != null && email != null && role != null) {
					if (name == null) {
						name = email;
					}
					this.setMemberInfo(email, name, permissionId, role, permissionId);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleFilePermissions::SetMembers()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleFilePermissions::SetMemberInfo(System.String, System.String, System.String, System.String, System.String)" />*/
	setMemberInfo: function (email, name, id, role, permissionId) {
		if (role == $.ig.GoogleFilePermissions.prototype._ownerKey) {
			this.setMemberPermissions(new $.ig.CloudFileMemberPermissions(1, email, name, id, permissionId, true, true, true, false));
		} else if (role == $.ig.GoogleFilePermissions.prototype._viewerKey) {
			this.setMemberPermissions(new $.ig.CloudFileMemberPermissions(1, email, name, id, permissionId, false, false, true, false));
		} else if (role == $.ig.GoogleFilePermissions.prototype._editorKey) {
			this.setMemberPermissions(new $.ig.CloudFileMemberPermissions(1, email, name, id, permissionId, false, true, false, false));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleFilePermissions::SetMemberInfo(System.String, System.String, System.String, System.String, System.String)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleFilePermissions::Share()" />*/
	share: function () {
		return this.hasRole($.ig.GoogleFilePermissions.prototype._ownerKey) || (this.__capabilities != null && this.__capabilities.resolveBoolForKey("canShare")) || this.__role == $.ig.GoogleFilePermissions.prototype._ownerKey;
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleFilePermissions::Share()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleFilePermissions::View()" />*/
	view: function () {
		return this.hasRole($.ig.GoogleFilePermissions.prototype._viewerKey) || this.__role == $.ig.GoogleFilePermissions.prototype._viewerKey || (this.__capabilities != null && this.__capabilities.getKeys().length > 0);
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleFilePermissions::View()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleFilePermissions::Edit()" />*/
	edit: function () {
		return this.hasRole($.ig.GoogleFilePermissions.prototype._editorKey) || (this.__capabilities != null && this.__capabilities.resolveBoolForKey("canEdit") || this.__role == $.ig.GoogleFilePermissions.prototype._editorKey);
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleFilePermissions::Edit()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.GoogleFilePermissions::HasRole(System.String)" />*/
	hasRole: function (role) {
		var permissions = this.resolveMemberForEmail(this.__email);
		if (this.foundRoleForPermission(role, permissions)) {
			return true;
		}
		permissions = this.resolveMemberForUserId(this.__userId);
		return this.foundRoleForPermission(role, permissions);
	}
	/*<EndMethod Name="System.Boolean Infragistics.GoogleFilePermissions::HasRole(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.GoogleFilePermissions::FoundRoleForPermission(System.String, Infragistics.CloudFileMemberPermissions)" />*/
	foundRoleForPermission: function (role, permissions) {
		if (permissions != null) {
			if (role == $.ig.GoogleFilePermissions.prototype._ownerKey) {
				return permissions.isOwner();
			} else if (role == $.ig.GoogleFilePermissions.prototype._viewerKey) {
				return permissions.isViewer();
			} else if (role == $.ig.GoogleFilePermissions.prototype._editorKey) {
				return permissions.isEditor();
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.GoogleFilePermissions::FoundRoleForPermission(System.String, Infragistics.CloudFileMemberPermissions)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleFilePermissions::Id()" />*/
	id: function () {
		return this.__capabilities != null ? this.__capabilities.resolveStringForKey("id") : null;
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFilePermissions::Id()" />*/
	,
	$type: new $.ig.Type('GoogleFilePermissions', $.ig.CloudFilePermissions.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleFilePermissions" />*/

/*<BeginType Name="Infragistics.GoogleShareObjectRequest" />*/

$.ig.util.defType('GoogleShareObjectRequest', 'GoogleRequestBase', {
	_fileId: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleShareObjectRequest::FileId()" />*/
	fileId: function (value) {
		if (arguments.length === 1) {
			this._fileId = value;
			return value;
		} else {
			return this._fileId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleShareObjectRequest::FileId()" />*/
	,
	_emailAddress: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleShareObjectRequest::EmailAddress()" />*/
	emailAddress: function (value) {
		if (arguments.length === 1) {
			this._emailAddress = value;
			return value;
		} else {
			return this._emailAddress;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleShareObjectRequest::EmailAddress()" />*/
	,
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "GoogleShareObjectRequest", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleShareObjectRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleShareObjectRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleShareObjectRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://www.googleapis.com/";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleShareObjectRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleShareObjectRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/v3/files/" + this.fileId() + "/permissions?sendNotificationEmail=false";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleShareObjectRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleShareObjectRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var json = new $.ig.CPJSONObject(1);
		json.setValueForKey("emailAddress", this.emailAddress());
		json.setValueForKey("role", "writer");
		json.setValueForKey("type", "user");
		return json.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.GoogleShareObjectRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleShareObjectRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleShareObjectRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleShareObjectRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.GoogleRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleShareObjectRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('GoogleShareObjectRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleShareObjectRequest" />*/

/*<BeginType Name="Infragistics.GoogleCreateSharedLinkRequest" />*/

$.ig.util.defType('GoogleCreateSharedLinkRequest', 'GoogleRequestBase', {
	_fileId: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleCreateSharedLinkRequest::FileId()" />*/
	fileId: function (value) {
		if (arguments.length === 1) {
			this._fileId = value;
			return value;
		} else {
			return this._fileId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleCreateSharedLinkRequest::FileId()" />*/
	,
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "GoogleCreateSharedLinkRequest", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleCreateSharedLinkRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleCreateSharedLinkRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleCreateSharedLinkRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://www.googleapis.com/";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleCreateSharedLinkRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleCreateSharedLinkRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/v3/files/" + this.fileId() + "/permissions?sendNotificationEmail=false";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleCreateSharedLinkRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleCreateSharedLinkRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var json = new $.ig.CPJSONObject(1);
		json.setValueForKey("role", "reader");
		json.setValueForKey("type", "anyone");
		return json.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.GoogleCreateSharedLinkRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleCreateSharedLinkRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.GoogleRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleCreateSharedLinkRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('GoogleCreateSharedLinkRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleCreateSharedLinkRequest" />*/

/*<BeginType Name="Infragistics.GoogleDeleteSharedLinkRequest" />*/

$.ig.util.defType('GoogleDeleteSharedLinkRequest', 'GoogleRequestBase', {
	__fileId: null,
	init: function (fileId, token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "GoogleDeleteSharedLinkRequest", token, success, error);
		this.__fileId = fileId;
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleDeleteSharedLinkRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.dELETE;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleDeleteSharedLinkRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleDeleteSharedLinkRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://www.googleapis.com/";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleDeleteSharedLinkRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleDeleteSharedLinkRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/v3/files/" + this.__fileId + "/permissions/anyoneWithLink";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleDeleteSharedLinkRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleDeleteSharedLinkRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.GoogleRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleDeleteSharedLinkRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('GoogleDeleteSharedLinkRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleDeleteSharedLinkRequest" />*/

/*<BeginType Name="Infragistics.GoogleTeamManager" />*/

$.ig.util.defType('GoogleTeamManager', 'CloudTeamManager', {
	init: function (state) {
		$.ig.CloudTeamManager.prototype.init.call(this, state);
	},
	/*<BeginMethod Name="Infragistics.OAuthRequestBase Infragistics.GoogleTeamManager::GetTeamsImMemberOf(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	getTeamsImMemberOf: function (successHandler, errorHandler) {
		var request = new $.ig.GoogleGroupsUserBelongsToRequest(this.tokenState(), successHandler, errorHandler);
		return request;
	}
	/*<EndMethod Name="Infragistics.OAuthRequestBase Infragistics.GoogleTeamManager::GetTeamsImMemberOf(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleTeamManager::GetMembers(Infragistics.CloudTeam, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	getMembers: function (team, successHandler, errorHandler) {
		var request = new $.ig.GoogleGroupMembersRequest(team, this.tokenState(), successHandler, errorHandler);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleTeamManager::GetMembers(Infragistics.CloudTeam, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleTeamManager::GetOrganization(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	getOrganization: function (successHandler, errorHandler) {
		var request = new $.ig.GoogleOrganizationRequest(this.tokenState(), successHandler, errorHandler);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleTeamManager::GetOrganization(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.GoogleTeamManager::LoadTeamMember(Infragistics.CloudTeamMember, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	loadTeamMember: function (teamMember, successHandler, errorHandler) {
		if ($.ig.GoogleTeamManager.prototype._cachedMembers == null) {
			$.ig.GoogleTeamManager.prototype._cachedMembers = new $.ig.Dictionary(0);
		}
		if ($.ig.NativeDictionaryUtility.prototype.containsKey($.ig.GoogleTeamManager.prototype._cachedMembers, teamMember.identifier())) {
			successHandler(null, $.ig.GoogleTeamManager.prototype._cachedMembers.item(teamMember.identifier()));
			return null;
		} else {
			if ($.ig.GoogleTeamManager.prototype._requestsHandlers == null) {
				$.ig.GoogleTeamManager.prototype._requestsHandlers = new $.ig.Dictionary(0);
			}
			var requestQueue;
			var request = null;
			if ($.ig.NativeDictionaryUtility.prototype.containsKey($.ig.GoogleTeamManager.prototype._requestsHandlers, teamMember.identifier())) {
				requestQueue = $.ig.GoogleTeamManager.prototype._requestsHandlers.item(teamMember.identifier());
			} else {
				requestQueue = new $.ig.Array();
				request = new $.ig.GoogleGetPersonDetailsRequest(teamMember, this.tokenState(), function (r, o) {
					$.ig.GoogleTeamManager.prototype.updateTeamMember(teamMember, r, o);
				}, errorHandler);
			}
			requestQueue.add(successHandler);
			$.ig.GoogleTeamManager.prototype._requestsHandlers.item(teamMember.identifier(), requestQueue);
			return request;
		}
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.GoogleTeamManager::LoadTeamMember(Infragistics.CloudTeamMember, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleTeamManager::UpdateTeamMember(Infragistics.CloudTeamMember, Infragistics.RequestBase, System.Object)" />*/
	updateTeamMember: function (teamMember, r, o) {
		var cloudTeamMember = o;
		$.ig.GoogleTeamManager.prototype._cachedMembers.item(cloudTeamMember.identifier(), cloudTeamMember);
		var cachedHandlers = $.ig.GoogleTeamManager.prototype._requestsHandlers.item(teamMember.identifier());
		$.ig.GoogleTeamManager.prototype._requestsHandlers.remove(teamMember.identifier());
		for (var i = 0; i < cachedHandlers.length; i++) {
			var successHandler = cachedHandlers[i];
			successHandler(r, o);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleTeamManager::UpdateTeamMember(Infragistics.CloudTeamMember, Infragistics.RequestBase, System.Object)" />*/
	,
	$type: new $.ig.Type('GoogleTeamManager', $.ig.CloudTeamManager.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleTeamManager" />*/

/*<BeginType Name="Infragistics.GoogleGroupsUserBelongsToRequest" />*/

$.ig.util.defType('GoogleGroupsUserBelongsToRequest', 'GoogleRequestBase', {
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "GoogleGroupsUserBelongsTo", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGroupsUserBelongsToRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGroupsUserBelongsToRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleGroupsUserBelongsToRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://people.googleapis.com/";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGroupsUserBelongsToRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleGroupsUserBelongsToRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "v1/contactGroups";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGroupsUserBelongsToRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleGroupsUserBelongsToRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var teams = new $.ig.Array();
		var entries = response.resolveListForKey("contactGroups");
		var count = entries.length;
		for (var i = 0; i < count; i++) {
			var jsonFile = $.ig.CPJSONObject.prototype.createFromJSONObject(entries[i]);
			jsonFile.setValueForKey("providerId", this.tokenState().additionalIdentifier());
			var team = new $.ig.GoogleTeam(1, jsonFile);
			if (team.memberCount() > 0) {
				teams.add(team);
			}
		}
		return teams;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleGroupsUserBelongsToRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('GoogleGroupsUserBelongsToRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleGroupsUserBelongsToRequest" />*/

/*<BeginType Name="Infragistics.GoogleOrganizationRequest" />*/

$.ig.util.defType('GoogleOrganizationRequest', 'GoogleGetAccountInfo', {
	init: function (token, success, error) {
		$.ig.GoogleGetAccountInfo.prototype.init.call(this, token, success, error);
	},
	/*<BeginMethod Name="System.Object Infragistics.GoogleOrganizationRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var hostedDomain = response.resolveStringForKey("hd");
		if (hostedDomain != null) {
			return new $.ig.GoogleOrganization(hostedDomain);
		} else {
			return null;
		}
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleOrganizationRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('GoogleOrganizationRequest', $.ig.GoogleGetAccountInfo.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleOrganizationRequest" />*/

/*<BeginType Name="Infragistics.GoogleGroupMembersRequest" />*/

$.ig.util.defType('GoogleGroupMembersRequest', 'GoogleRequestBase', {
	__team: null,
	init: function (team, token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "GoogleGroupMembersRequest", token, success, error);
		this.__team = team;
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGroupMembersRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGroupMembersRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleGroupMembersRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://people.googleapis.com/";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGroupMembersRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleGroupMembersRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "v1/" + this.__team.identifier() + "?maxMembers=200";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGroupMembersRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleGroupMembersRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var members = new $.ig.Array();
		var entries = response.resolveListForKey("memberResourceNames");
		var count = entries.length;
		for (var i = 0; i < count; i++) {
			var jsonFile = new $.ig.CPJSONObject(1);
			jsonFile.setValueForKey("resourceName", entries[i]);
			jsonFile.setValueForKey("providerId", this.tokenState().additionalIdentifier());
			members.add(new $.ig.GoogleTeamMember(1, jsonFile));
		}
		return members;
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleGroupMembersRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('GoogleGroupMembersRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleGroupMembersRequest" />*/

/*<BeginType Name="Infragistics.GoogleGetPersonalPhotoRequest" />*/

$.ig.util.defType('GoogleGetPersonalPhotoRequest', 'GoogleRequestBase', {
	__userKey: null,
	init: function (token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "GooglePhotoRequest", token, success, error);
		var userInfo = token.userInfo();
		this.__userKey = userInfo.resolveStringForKey("email");
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetPersonalPhotoRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetPersonalPhotoRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleGetPersonalPhotoRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://www.googleapis.com";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGetPersonalPhotoRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleGetPersonalPhotoRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "admin/directory/v1/users/" + this.__userKey + "/photos/thumbnail";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGetPersonalPhotoRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleGetPersonalPhotoRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return new $.ig.GoogleTeamMember(1, response);
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleGetPersonalPhotoRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('GoogleGetPersonalPhotoRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleGetPersonalPhotoRequest" />*/

/*<BeginType Name="Infragistics.GoogleGetPersonDetailsRequest" />*/

$.ig.util.defType('GoogleGetPersonDetailsRequest', 'GoogleRequestBase', {
	__teamMember: null,
	init: function (teamMember, token, success, error) {
		$.ig.GoogleRequestBase.prototype.init.call(this, 0, "GoogleGroupMembersRequest", token, success, error);
		this.__teamMember = teamMember;
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetPersonDetailsRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GoogleGetPersonDetailsRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleGetPersonDetailsRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://people.googleapis.com/";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGetPersonDetailsRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleGetPersonDetailsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "v1/" + this.__teamMember.identifier() + "?personFields=names,emailAddresses";
	}
	/*<EndMethod Name="System.String Infragistics.GoogleGetPersonDetailsRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GoogleGetPersonDetailsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return new $.ig.GoogleTeamMember(1, response);
	}
	/*<EndMethod Name="System.Object Infragistics.GoogleGetPersonDetailsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('GoogleGetPersonDetailsRequest', $.ig.GoogleRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleGetPersonDetailsRequest" />*/

/*<BeginType Name="Infragistics.HubspotGetAccountInfo" />*/

$.ig.util.defType('HubspotGetAccountInfo', 'OAuthRequestBase', {
	init: function (token, success, error) {
		$.ig.OAuthRequestBase.prototype.init.call(this, 0, "Hubspot_GetAccountInfo", token, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.HubspotGetAccountInfo::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return "https://api.hubapi.com/";
	}
	/*<EndMethod Name="System.String Infragistics.HubspotGetAccountInfo::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.HubspotGetAccountInfo::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.HubspotGetAccountInfo::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="Infragistics.OAuthProvider Infragistics.HubspotGetAccountInfo::ResolveProvider(Infragistics.TokenState)" />*/
	resolveProvider: function (token) {
		return new $.ig.HubspotOAuthProvider(token.providerKeys());
	}
	/*<EndMethod Name="Infragistics.OAuthProvider Infragistics.HubspotGetAccountInfo::ResolveProvider(Infragistics.TokenState)" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.HubspotGetAccountInfo::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.HubspotGetAccountInfo::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.HubspotGetAccountInfo::ResolveAction()" />*/
	resolveAction: function () {
		return "oauth/v1/access-tokens/" + this.tokenState().token().getAccessToken();
	}
	/*<EndMethod Name="System.String Infragistics.HubspotGetAccountInfo::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.HubspotGetAccountInfo::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return new $.ig.HubspotAccountUserInfo(response);
	}
	/*<EndMethod Name="System.Object Infragistics.HubspotGetAccountInfo::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.HubspotGetAccountInfo::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.OAuthRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.HubspotGetAccountInfo::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('HubspotGetAccountInfo', $.ig.OAuthRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.HubspotGetAccountInfo" />*/

/*<BeginType Name="Infragistics.HubspotOAuthProvider" />*/

$.ig.util.defType('HubspotOAuthProvider', 'OAuthProvider', {
	init: function (keys) {
		$.ig.OAuthProvider.prototype.init.call(this, keys);
	},
	/*<BeginMethod Name="System.String Infragistics.HubspotOAuthProvider::GetAuthURL()" />*/
	getAuthURL: function () {
		return "https://app.hubspot.com/oauth/";
	}
	/*<EndMethod Name="System.String Infragistics.HubspotOAuthProvider::GetAuthURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.HubspotOAuthProvider::GetTokenURL()" />*/
	getTokenURL: function () {
		return "https://api.hubapi.com/oauth/v1/";
	}
	/*<EndMethod Name="System.String Infragistics.HubspotOAuthProvider::GetTokenURL()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.HubspotOAuthProvider::CloudProvider()" />*/
	cloudProvider: function () {
		return $.ig.CloudProviderType.prototype.hubSpot;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.HubspotOAuthProvider::CloudProvider()" />*/
	,
	$type: new $.ig.Type('HubspotOAuthProvider', $.ig.OAuthProvider.prototype.$type)
}, true);

/*<EndType Name="Infragistics.HubspotOAuthProvider" />*/

/*<BeginType Name="Infragistics.InfragisticsAPIIncrementScopes" />*/

$.ig.util.defType('InfragisticsAPIIncrementScopes', 'InfragisticsAPIRequestBase', {
	init: function (teamId, providerId, redirectUrl, scopes, success, error) {
		$.ig.InfragisticsAPIRequestBase.prototype.init.call(this, 0, null, success, error);
		this.teamId(teamId);
		this.providerId(providerId);
		this.redirectUrl(redirectUrl);
		this.scopes(scopes);
	},
	_teamId: null,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsAPIIncrementScopes::TeamId()" />*/
	teamId: function (value) {
		if (arguments.length === 1) {
			this._teamId = value;
			return value;
		} else {
			return this._teamId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsAPIIncrementScopes::TeamId()" />*/
	,
	_providerId: null,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsAPIIncrementScopes::ProviderId()" />*/
	providerId: function (value) {
		if (arguments.length === 1) {
			this._providerId = value;
			return value;
		} else {
			return this._providerId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsAPIIncrementScopes::ProviderId()" />*/
	,
	_redirectUrl: null,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsAPIIncrementScopes::RedirectUrl()" />*/
	redirectUrl: function (value) {
		if (arguments.length === 1) {
			this._redirectUrl = value;
			return value;
		} else {
			return this._redirectUrl;
		}
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsAPIIncrementScopes::RedirectUrl()" />*/
	,
	_scopes: null,
	/*<BeginProperty Name="Infragistics.CPReadOnlyList Infragistics.InfragisticsAPIIncrementScopes::Scopes()" />*/
	scopes: function (value) {
		if (arguments.length === 1) {
			this._scopes = value;
			return value;
		} else {
			return this._scopes;
		}
	}
	/*<EndProperty Name="Infragistics.CPReadOnlyList Infragistics.InfragisticsAPIIncrementScopes::Scopes()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.InfragisticsAPIIncrementScopes::ResolveAction()" />*/
	resolveAction: function () {
		return "UserFile/IncrementScopes";
	}
	/*<EndMethod Name="System.String Infragistics.InfragisticsAPIIncrementScopes::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.InfragisticsAPIIncrementScopes::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.InfragisticsAPIIncrementScopes::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.InfragisticsAPIIncrementScopes::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.sTRING;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.InfragisticsAPIIncrementScopes::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.InfragisticsAPIIncrementScopes::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var c = new $.ig.CPJSONObject(1);
		c.setValueForKey("TeamId", this.teamId());
		c.setValueForKey("ProviderId", this.providerId());
		c.setValueForKey("RedirectUrl", this.redirectUrl());
		c.setValueForKey("Scopes", this.scopes());
		return c.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.InfragisticsAPIIncrementScopes::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.InfragisticsAPIIncrementScopes::ProcessStringResponse(System.String)" />*/
	processStringResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.InfragisticsAPIIncrementScopes::ProcessStringResponse(System.String)" />*/
	,
	$type: new $.ig.Type('InfragisticsAPIIncrementScopes', $.ig.InfragisticsAPIRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.InfragisticsAPIIncrementScopes" />*/

/*<BeginType Name="Infragistics.InfragisticsRefreshTokenRequest" />*/

$.ig.util.defType('InfragisticsRefreshTokenRequest', 'InfragisticsAPIRequestBase', {
	__teamId: null,
	__providerId: null,
	__elevated: false,
	init: function (teamId, providerId, elevated, success, error) {
		$.ig.InfragisticsAPIRequestBase.prototype.init.call(this, 0, "IG_Refresh_CloudToken", success, error);
		this.__teamId = teamId;
		this.__providerId = providerId;
		this.__elevated = elevated;
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.InfragisticsRefreshTokenRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.InfragisticsRefreshTokenRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.InfragisticsRefreshTokenRequest::ResolveAction()" />*/
	resolveAction: function () {
		var elevatedString = this.__elevated ? "true" : "false";
		return "UserFile/RefreshToken?teamId=" + (this.__teamId == null ? "" : this.__teamId) + "&id=" + this.__providerId + "&elevated=" + elevatedString;
	}
	/*<EndMethod Name="System.String Infragistics.InfragisticsRefreshTokenRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.InfragisticsRefreshTokenRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.InfragisticsRefreshTokenRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('InfragisticsRefreshTokenRequest', $.ig.InfragisticsAPIRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.InfragisticsRefreshTokenRequest" />*/

/*<BeginType Name="Infragistics.InfragisticsGetFilesInFolder" />*/

$.ig.util.defType('InfragisticsGetFilesInFolder', 'InfragisticsAPIRequestBase', {
	__path: null,
	init: function (path, success, error) {
		$.ig.InfragisticsAPIRequestBase.prototype.init.call(this, 0, "IG_GetFilesInFolder", success, error);
		this.__path = path;
	},
	_foldersOnly: false,
	/*<BeginProperty Name="System.Boolean Infragistics.InfragisticsGetFilesInFolder::FoldersOnly()" />*/
	foldersOnly: function (value) {
		if (arguments.length === 1) {
			this._foldersOnly = value;
			return value;
		} else {
			return this._foldersOnly;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.InfragisticsGetFilesInFolder::FoldersOnly()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.InfragisticsGetFilesInFolder::ResolveAction()" />*/
	resolveAction: function () {
		return "CloudFile/" + this.__path;
	}
	/*<EndMethod Name="System.String Infragistics.InfragisticsGetFilesInFolder::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.InfragisticsGetFilesInFolder::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.InfragisticsGetFilesInFolder::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.InfragisticsGetFilesInFolder::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var files = new $.ig.Array();
		var entries = response.resolveListForKey("files");
		var count = entries.length;
		for (var i = 0; i < count; i++) {
			var file = new $.ig.GenericCloudFile(0, $.ig.CPJSONObject.prototype.createFromJSONObject(entries[i]));
			if (this.foldersOnly() && file.isFolder() || !this.foldersOnly()) {
				files.add(file);
			}
		}
		return files;
	}
	/*<EndMethod Name="System.Object Infragistics.InfragisticsGetFilesInFolder::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('InfragisticsGetFilesInFolder', $.ig.InfragisticsAPIRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.InfragisticsGetFilesInFolder" />*/

/*<BeginType Name="Infragistics.InfragisticsWebCloudFileManager" />*/

$.ig.util.defType('InfragisticsWebCloudFileManager', 'CloudFileManager', {
	__ownerProvider: null,
	init: function (provider) {
		$.ig.CloudFileManager.prototype.init.call(this, 0, null);
		this.__ownerProvider = provider;
	},
	/*<BeginMethod Name="System.Boolean Infragistics.InfragisticsWebCloudFileManager::CanAddFileInFolder(System.String)" />*/
	canAddFileInFolder: function (fileId) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.InfragisticsWebCloudFileManager::CanAddFileInFolder(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.InfragisticsWebCloudFileManager::CanDeleteFile(System.String)" />*/
	canDeleteFile: function (fileId) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.InfragisticsWebCloudFileManager::CanDeleteFile(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::CopyFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	copyFile: function (fileId, filePath, destinationPath, progress, success, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::CopyFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::CreateFolder(System.String, System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	createFolder: function (newFolderName, remoteParentFolderId, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::CreateFolder(System.String, System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GenerateSharedLink(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	generateSharedLink: function (cloudFile, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GenerateSharedLink(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::DeleteFile(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	deleteFile: function (fileId, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::DeleteFile(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::DeleteFilePermanent(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	deleteFilePermanent: function (fileId, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::DeleteFilePermanent(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::DownloadFile(System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	downloadFile: function (file, handler, downloadHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::DownloadFile(System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::DownloadFile(System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	downloadFile1: function (file, mimeType, handler, downloadHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::DownloadFile(System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetAccountInfo(Infragistics.CloudAccountUserInfoBlock, Infragistics.CloudErrorBlock)" />*/
	getAccountInfo: function (successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetAccountInfo(Infragistics.CloudAccountUserInfoBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetDownloadLink(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	getDownloadLink: function (fileId, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetDownloadLink(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetFileByName(System.String, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFileByName: function (fileName, remoteFolderId, handler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetFileByName(System.String, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetFilePermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	getFilePermissions: function (fileId, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetFilePermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetFileMembersPermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	getFileMembersPermissions: function (fileId, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetFileMembersPermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::DeleteFileMemberPermissions(System.String, Infragistics.CloudFileMemberPermissions, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	deleteFileMemberPermissions: function (fileId, memberPermissions, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::DeleteFileMemberPermissions(System.String, Infragistics.CloudFileMemberPermissions, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::DeleteFilePermissions(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	deleteFilePermissions: function (fileId, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::DeleteFilePermissions(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetFilesFromCloudFolder(Infragistics.CloudFile, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesFromCloudFolder: function (file, handler, errorHandler) {
		return this.getFilesInFolder1((file == null) ? null : file.pathIdentifier(), handler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetFilesFromCloudFolder(Infragistics.CloudFile, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetFilesInFolder(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesInFolder1: function (folder, handler, errorHandler) {
		return this.getFilesInFolder(false, folder, handler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetFilesInFolder(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetFilesInFolder(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesInFolder: function (foldersOnly, folder, handler, errorHandler) {
		return this.getFiles(foldersOnly, folder, handler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetFilesInFolder(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetFiles(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFiles: function (getFoldersOnly, folder, handler, errorHandler) {
		var request = new $.ig.InfragisticsGetFilesInFolder(folder, function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, e) {
			if (errorHandler != null) {
				errorHandler(e);
			}
		});
		request.foldersOnly(getFoldersOnly);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetFiles(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetMetadata(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	getMetadata: function (path, handler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetMetadata(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetParentForFile(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	getParentForFile: function (fileId, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GetParentForFile(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.CloudProviderType Infragistics.InfragisticsWebCloudFileManager::GetProviderType()" />*/
	getProviderType: function () {
		return $.ig.CloudProviderType.prototype.infragistics;
	}
	/*<EndMethod Name="Infragistics.CloudProviderType Infragistics.InfragisticsWebCloudFileManager::GetProviderType()" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GrantPermissionsForFile(System.String, Infragistics.TokenState, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	grantPermissionsForFile: function (fileId, granteeTokenState, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::GrantPermissionsForFile(System.String, Infragistics.TokenState, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::MoveFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	moveFile: function (fileId, filePath, destinationPath, progress, success, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::MoveFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::OverwriteFile(System.String, System.Object, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	overwriteFile: function (fileName, file, remoteFolderId, remoteFileId, progress, success, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::OverwriteFile(System.String, System.Object, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::SearchFiles(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	searchFiles: function (searchText, handler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::SearchFiles(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::UploadFile(System.String, System.Object, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadFile: function (fileName, file, remoteFolderId, progress, success, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.InfragisticsWebCloudFileManager::UploadFile(System.String, System.Object, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	$type: new $.ig.Type('InfragisticsWebCloudFileManager', $.ig.CloudFileManager.prototype.$type)
}, true);

/*<EndType Name="Infragistics.InfragisticsWebCloudFileManager" />*/

/*<BeginType Name="Infragistics.MicrosoftOAuthProvider" />*/

$.ig.util.defType('MicrosoftOAuthProvider', 'OAuthProvider', {
	__useAzure: false,
	__subProviderType: 0,
	init: function (initNumber, keys, useAzure) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.OAuthProvider.prototype.init.call(this, keys);
		this.__useAzure = useAzure;
		this.__subProviderType = $.ig.CloudProviderType.prototype.microsoft;
	},
	init1: function (initNumber, keys, useAzure, subProviderType) {
		$.ig.OAuthProvider.prototype.init.call(this, keys);
		this.__useAzure = useAzure;
		this.__subProviderType = subProviderType;
	},
	/*<BeginMethod Name="System.String Infragistics.MicrosoftOAuthProvider::GetAuthURL()" />*/
	getAuthURL: function () {
		if (this.__useAzure) {
			return "https://login.microsoftonline.com/common/oauth2/";
		} else {
			return "https://login.microsoftonline.com/common/oauth2/v2.0/";
		}
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftOAuthProvider::GetAuthURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftOAuthProvider::GetResource()" />*/
	getResource: function () {
		if (this.__useAzure) {
			return "https://graph.microsoft.com/";
		} else {
			return null;
		}
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftOAuthProvider::GetResource()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftOAuthProvider::AddAdditionalAccessCodeParams(Infragistics.CPDictionary)" />*/
	addAdditionalAccessCodeParams: function (json) {
		json.item("prompt", "select_account");
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftOAuthProvider::AddAdditionalAccessCodeParams(Infragistics.CPDictionary)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftOAuthProvider::GetResponseMode()" />*/
	getResponseMode: function () {
		return "query";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftOAuthProvider::GetResponseMode()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.MicrosoftOAuthProvider::ShouldIncludeScopeInGetTokenRequest()" />*/
	shouldIncludeScopeInGetTokenRequest: function () {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.MicrosoftOAuthProvider::ShouldIncludeScopeInGetTokenRequest()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftOAuthProvider::GetLogoutUrl()" />*/
	getLogoutUrl: function () {
		return $.ig.MicrosoftOAuthProvider.prototype.providerLogoutUrl();
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftOAuthProvider::GetLogoutUrl()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftOAuthProvider::GetAdminLoginUrl()" />*/
	getAdminLoginUrl: function () {
		return "https://login.microsoftonline.com/common/";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftOAuthProvider::GetAdminLoginUrl()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.MicrosoftOAuthProvider::ShouldURLEncodeParams()" />*/
	shouldURLEncodeParams: function () {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.MicrosoftOAuthProvider::ShouldURLEncodeParams()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftOAuthProvider::ProviderLogoutUrl()" />*/
	providerLogoutUrl: function () {
		return "https://login.microsoftonline.com/logout.srf";
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftOAuthProvider::ProviderLogoutUrl()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.MicrosoftOAuthProvider::CloudProvider()" />*/
	cloudProvider: function () {
		return this.__subProviderType;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.MicrosoftOAuthProvider::CloudProvider()" />*/
	,
	$type: new $.ig.Type('MicrosoftOAuthProvider', $.ig.OAuthProvider.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftOAuthProvider" />*/

/*<BeginType Name="Infragistics.MicrosoftGetFilesRequest" />*/

$.ig.util.defType('MicrosoftGetFilesRequest', 'MicrosoftRequestBase', {
	init: function (token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "OneDriveGetFiles", token, success, error);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftGetFilesRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftGetFilesRequest::Path()" />*/
	,
	_foldersOnly: false,
	/*<BeginProperty Name="System.Boolean Infragistics.MicrosoftGetFilesRequest::FoldersOnly()" />*/
	foldersOnly: function (value) {
		if (arguments.length === 1) {
			this._foldersOnly = value;
			return value;
		} else {
			return this._foldersOnly;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.MicrosoftGetFilesRequest::FoldersOnly()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGetFilesRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGetFilesRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftGetFilesRequest::ResolveAction()" />*/
	resolveAction: function () {
		if (this.path() == null || this.path().length == 0) {
			return "drive/root/children";
		}
		return "drive/items/" + this.path() + "/children?$top=1000";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftGetFilesRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftGetFilesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var files = new $.ig.Array();
		var entries = response.resolveListForKey("value");
		var count = entries.length;
		if (count == 0) {
			var cloudError = this.checkFileReadAccess();
			if (cloudError != null) {
				this.error(cloudError);
				return null;
			}
		}
		for (var i = 0; i < count; i++) {
			var jsonFile = $.ig.CPJSONObject.prototype.createFromJSONObject(entries[i]);
			var jsonFolder = jsonFile.resolveJSONForKey("folder");
			if (jsonFolder != null) {
				var size = jsonFolder.resolveLongForKey("childCount");
				jsonFile.setValueForKey("size", size);
			}
			var file = new $.ig.MicrosoftFile(1, jsonFile, this.ownerUserId(), this.tokenState().additionalIdentifier());
			if (this.foldersOnly() && file.isFolder() || !this.foldersOnly()) {
				files.add(file);
			}
		}
		return files;
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftGetFilesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('MicrosoftGetFilesRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftGetFilesRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftFileManager" />*/

$.ig.util.defType('MicrosoftFileManager', 'CloudFileManager', {
	init: function (token) {
		$.ig.CloudFileManager.prototype.init.call(this, 0, token);
	},
	/*<BeginMethod Name="Infragistics.CPReadOnlyList Infragistics.MicrosoftFileManager::GetReadFilesScope()" />*/
	getReadFilesScope: function () {
		var scopes = "https://graph.microsoft.com/User.Read https://graph.microsoft.com/Files.Read";
		var arr = $.ig.NativeStringUtility.prototype.split(scopes, " ");
		return $.ig.ArrayUtility.prototype.toList(arr);
	}
	/*<EndMethod Name="Infragistics.CPReadOnlyList Infragistics.MicrosoftFileManager::GetReadFilesScope()" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.MicrosoftFileManager::HasScope(System.String, Infragistics.CPReadOnlyList)" />*/
	hasScope: function (accessToken, scope) {
		var jwtDecoder = $.ig.JWTDecoder.prototype.decode(accessToken);
		var tokenScopes = jwtDecoder.scp();
		if ($.ig.CPStringUtility.prototype.isNullOrEmpty(tokenScopes)) {
			return $.ig.util.toNullable($.ig.Boolean.prototype.$type, null);
		}
		var scopeList = $.ig.NativeStringUtility.prototype.split(tokenScopes, " ");
		for (var i = 0; i < scope.length; i++) {
			var fullPermission = scope[i];
			var shortPermission = $.ig.NativeStringUtility.prototype.replace(fullPermission, "https://graph.microsoft.com/", "");
			if ($.ig.ArrayUtility.prototype.arrayContains4(shortPermission, scopeList) == 0) {
				return $.ig.NativeNullableUtility.prototype.wrapBool(false);
			}
		}
		return $.ig.NativeNullableUtility.prototype.wrapBool(true);
	}
	/*<EndMethod Name="System.Nullable Infragistics.MicrosoftFileManager::HasScope(System.String, Infragistics.CPReadOnlyList)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPReadOnlyList Infragistics.MicrosoftFileManager::GetShareLinkScope()" />*/
	getShareLinkScope: function () {
		var scopes = "https://graph.microsoft.com/Files.ReadWrite";
		var arr = $.ig.NativeStringUtility.prototype.split(scopes, " ");
		return $.ig.ArrayUtility.prototype.toList(arr);
	}
	/*<EndMethod Name="Infragistics.CPReadOnlyList Infragistics.MicrosoftFileManager::GetShareLinkScope()" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetFilesFromCloudFolder(Infragistics.CloudFile, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesFromCloudFolder: function (file, handler, errorHandler) {
		return this.getFilesInFolder1((file == null ? null : file.pathIdentifier()), handler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetFilesFromCloudFolder(Infragistics.CloudFile, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetFilesInFolder(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesInFolder1: function (folder, handler, errorHandler) {
		return this.getFilesInFolder(false, folder, handler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetFilesInFolder(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetFilesInFolder(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesInFolder: function (foldersOnly, folder, handler, errorHandler) {
		return this.getFiles(foldersOnly, folder, handler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetFilesInFolder(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetFiles(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFiles: function (getFoldersOnly, folder, handler, errorHandler) {
		var request = new $.ig.MicrosoftGetFilesRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.path($.ig.MicrosoftFile.prototype.extractItemId(folder));
		request.foldersOnly(getFoldersOnly);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetFiles(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::DownloadFile(System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	downloadFile1: function (file, mimeType, handler, downloadHandler, errorHandler) {
		return this.downloadFile(file, handler, downloadHandler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::DownloadFile(System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::DownloadFile(System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	downloadFile: function (file, progress, downloaded, errorHandler) {
		return this.downloadFile2(file, null, null, progress, function (m, f, v) {
			if (downloaded != null) {
				downloaded(f);
			}
		}, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::DownloadFile(System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::DownloadFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedIfModifiedBlock, Infragistics.CloudErrorBlock)" />*/
	downloadFile2: function (file, lastVersion, exportType, progress, success, errorHandler) {
		var request = new $.ig.MicrosoftDownloadFileRequest(this.tokenState(), function (r, s) {
			if (success == null) {
				return;
			}
			var me = (r);
			if (me.notModified()) {
				success(false, null, null);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		}, function (r, bytes, total) {
			if (progress != null) {
				progress(bytes, total);
			}
		}, function (r, f) {
			if (success == null) {
				return;
			}
			var me = (r);
			if (!me.notModified()) {
				success(true, f, me.eTag());
			}
		});
		request.setUserIfNeeded(file);
		request.path($.ig.MicrosoftFile.prototype.extractItemId(file));
		request.lastETag(lastVersion);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::DownloadFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedIfModifiedBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::UploadFileInternal(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadFileInternal1: function (localFilePath, path, conflictBehavior, progress, success, errorHandler) {
		var $self = this;
		var requestWrapper = new $.ig.RequestWrapper();
		var request = new $.ig.MicrosoftCreateUploadSessionRequest(this.tokenState(), function (r, o) {
			var uploadUrl = (o).resolveStringForKey("uploadUrl");
			$self.uploadChunk1(requestWrapper, localFilePath, uploadUrl, 0, progress, success, errorHandler);
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.path(path);
		request.conflictBehavior(conflictBehavior);
		requestWrapper.request(request);
		return requestWrapper;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::UploadFileInternal(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftFileManager::UploadChunk(Infragistics.RequestWrapper, System.String, System.String, System.Int64, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadChunk1: function (requestWrapper, file, uploadUrl, startPosition, progress, success, errorHandler) {
		var $self = this;
		var totalSize = $.ig.NativeFileUtility.prototype.getFileSize1(file);
		var chunkSize = $.ig.MicrosoftFileManager.prototype._cHUNK_SIZE;
		if (totalSize < startPosition + $.ig.MicrosoftFileManager.prototype._cHUNK_SIZE) {
			chunkSize = (totalSize - startPosition);
		}
		var data = $.ig.NativeFileUtility.prototype.readFile1(file, startPosition, chunkSize);
		if ($.ig.NativeRequestUtility.prototype.utility().getNativeDataSize(data) > 0) {
			var uploadDataRequest = new $.ig.MicrosoftUploadDataChunkRequest(this.tokenState(), function (r, o) {
				var jsonResponse = (o);
				if (jsonResponse.containsKey("nextExpectedRanges")) {
					var currentPosition = startPosition + $.ig.NativeRequestUtility.prototype.utility().getNativeDataSize(data);
					progress(currentPosition, totalSize);
					$self.uploadChunk1(requestWrapper, file, uploadUrl, currentPosition, progress, success, errorHandler);
				} else if (jsonResponse.containsKey("file")) {
					success(new $.ig.MicrosoftFile(1, jsonResponse, $self.tokenState().userInfo().getUserId(), $self.tokenState().additionalIdentifier()));
				} else {
					var error = new $.ig.CloudError(0);
					error.errorMessage("The file was not created neither a next range was requested");
					errorHandler(error);
				}
			}, function (r, error) {
				if (errorHandler != null) {
					errorHandler(error);
				}
			}, uploadUrl, startPosition, startPosition + $.ig.NativeRequestUtility.prototype.utility().getNativeDataSize(data) - 1, totalSize, data);
			requestWrapper.request(uploadDataRequest);
			this.executeAndManage(uploadDataRequest);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftFileManager::UploadChunk(Infragistics.RequestWrapper, System.String, System.String, System.Int64, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.CloudProviderType Infragistics.MicrosoftFileManager::GetProviderType()" />*/
	getProviderType: function () {
		return this.tokenState().provider();
	}
	/*<EndMethod Name="Infragistics.CloudProviderType Infragistics.MicrosoftFileManager::GetProviderType()" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetMetadata(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	getMetadata: function (path, handler, errorHandler) {
		var request = new $.ig.MicrosoftGetMetadataRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.setUserIfNeeded(path);
		request.fileId($.ig.MicrosoftFile.prototype.extractItemId(path));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetMetadata(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::SearchFiles(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	searchFiles: function (searchText, handler, errorHandler) {
		var request = new $.ig.MicrosoftSearchFilesRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.query(searchText);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::SearchFiles(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::SearchFilesWithQuery(Infragistics.SearchQuery, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	searchFilesWithQuery: function (searchQuery, handler, errorHandler) {
		var request = new $.ig.MicrosoftSearchFilesRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.query(searchQuery._text);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::SearchFilesWithQuery(Infragistics.SearchQuery, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name=" Infragistics.MicrosoftFileManager::GetSearchCapabilities()" />*/
	getSearchCapabilities: function () {
		return [ $.ig.SearchCapabilities.prototype.searchByText ];
	}
	/*<EndMethod Name=" Infragistics.MicrosoftFileManager::GetSearchCapabilities()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.MicrosoftFileManager::HasDropCapability()" />*/
	hasDropCapability: function () {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.MicrosoftFileManager::HasDropCapability()" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::CreateFolder(System.String, System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	createFolder: function (newFolderName, remoteParentFolderId, successHandler, errorHandler) {
		var path = remoteParentFolderId;
		var requestWrapper = new $.ig.RequestWrapper();
		var request = new $.ig.MicrosoftCreateFolderRequest(this.tokenState(), function (r, o) {
			if (successHandler != null) {
				successHandler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.newFolderName(newFolderName);
		request.path(path);
		requestWrapper.request(request);
		return requestWrapper;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::CreateFolder(System.String, System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::DeleteFile(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	deleteFile: function (path, successHandler, errorHandler) {
		var r = new $.ig.MicrosoftDeleteDriveItemRequest(this.tokenState(), successHandler, function (re, e) {
			if (errorHandler != null) {
				errorHandler(e);
			}
		});
		r.itemId($.ig.MicrosoftFile.prototype.extractItemId(path));
		return r;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::DeleteFile(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::DeleteFilePermanent(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	deleteFilePermanent: function (fileId, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::DeleteFilePermanent(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetAccountInfo(Infragistics.CloudAccountUserInfoBlock, Infragistics.CloudErrorBlock)" />*/
	getAccountInfo: function (successHandler, errorHandler) {
		var request = new $.ig.MicrosoftGetAccountInfo(0, this.tokenState(), function (r, o) {
			if (successHandler != null) {
				successHandler(o);
			}
		}, function (r, e) {
			if (errorHandler != null) {
				errorHandler(e);
			}
		});
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetAccountInfo(Infragistics.CloudAccountUserInfoBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.MicrosoftFileManager::CanAddFileInFolder(System.String)" />*/
	canAddFileInFolder: function (fileId) {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.MicrosoftFileManager::CanAddFileInFolder(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.MicrosoftFileManager::CanDeleteFile(System.String)" />*/
	canDeleteFile: function (fileId) {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.MicrosoftFileManager::CanDeleteFile(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetParentForFile(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	getParentForFile: function (fileId, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetParentForFile(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetFileByName(System.String, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFileByName: function (fileName, remoteFolderId, handler, errorHandler) {
		var request = new $.ig.MicrosoftGetFilesRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				var files = o;
				var result = new $.ig.Array();
				var count = files.length;
				for (var i = 0; i < count; i++) {
					var file = files[i];
					if ($.ig.CPStringUtility.prototype.areStringsEqual(file.name().toLowerCase(), fileName.toLowerCase())) {
						result.add(file);
					}
				}
				handler(result);
			}
		}, function (r, error) {
			if (error.errorCode() == 404) {
				if (handler != null) {
					handler(new $.ig.Array());
				}
			} else {
				if (errorHandler != null) {
					errorHandler(error);
				}
			}
		});
		request.path($.ig.MicrosoftFile.prototype.extractItemId(remoteFolderId));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetFileByName(System.String, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetDownloadLink(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	getDownloadLink: function (fileId, successHandler, errorHandler) {
		var request = new $.ig.MicrosoftDownloadLinkRequest(this.tokenState(), successHandler, errorHandler);
		request.path($.ig.MicrosoftFile.prototype.extractItemId(fileId));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetDownloadLink(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.IRequest Infragistics.MicrosoftFileManager::DownloadFromLink(System.String, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	downloadFromLink: function (sharedLink, fileDownloadedHandler, errorHandler) {
		var base64Value = $.ig.NativeRequestUtility.prototype.utility().base64Encode(sharedLink);
		var encodedUrl = "u!" + $.ig.NativeStringUtility.prototype.replace($.ig.NativeStringUtility.prototype.replace($.ig.NativeStringUtility.prototype.replace(base64Value, "=", ""), "/", "_"), "+", "-");
		return $.ig.MicrosoftRequestBase.prototype.createBuilder(this.tokenState()).appendStringToURL("/shares/").appendStringToURL(encodedUrl).appendStringToURL("/driveItem/content").addHeader("Prefer", "redeemSharingLinkIfNecessary").setFileDownloadedHandler(fileDownloadedHandler).setErrorHandler(errorHandler).build();
	}
	/*<EndMethod Name="Infragistics.IRequest Infragistics.MicrosoftFileManager::DownloadFromLink(System.String, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.MicrosoftFileRequest Infragistics.MicrosoftFileManager::processFile(System.String, System.String, System.String, System.Boolean, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	processFile: function (fileId, driveId, destinationPath, copy, success, errorHandler) {
		if (destinationPath == null || destinationPath.length == 0) {
			var error = new $.ig.CloudError(0);
			error.errorMessage("Invalid destination");
			errorHandler(error);
			return null;
		}
		var internalSuccess = function (rb, o) {
			success(null);
		};
		var internalError = function (rb, e) {
			errorHandler(e);
		};
		var request;
		if (copy) {
			request = new $.ig.MicrosoftCopyFileRequest(this.tokenState(), internalSuccess, internalError);
			(request).destinationDriveId(driveId);
		} else {
			request = new $.ig.MicrosoftMoveFileRequest(this.tokenState(), internalSuccess, internalError);
		}
		request.itemId($.ig.MicrosoftFile.prototype.extractItemId(fileId));
		request.destinationPath($.ig.MicrosoftFile.prototype.extractItemId(destinationPath));
		return request;
	}
	/*<EndMethod Name="Infragistics.MicrosoftFileRequest Infragistics.MicrosoftFileManager::processFile(System.String, System.String, System.String, System.Boolean, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::CopyFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	copyFile: function (fileId, filePath, destinationPath, progress, success, errorHandler) {
		var copy = this.processFile(fileId, filePath, destinationPath, true, success, errorHandler);
		this.executeAndManage(copy);
		return copy;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::CopyFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::MoveFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	moveFile: function (fileId, filePath, destinationPath, progress, success, errorHandler) {
		var move = this.processFile(fileId, filePath, destinationPath, false, success, errorHandler);
		this.executeAndManage(move);
		return move;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::MoveFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetFilePermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	getFilePermissions: function (fileId, successHandler, errorHandler) {
		var request = new $.ig.MicrosoftItemPermissionsRequest(this.tokenState(), function (r, o) {
			successHandler(o);
		}, errorHandler);
		request.user($.ig.MicrosoftFile.prototype.extractOwnerUserId(fileId));
		request.itemId($.ig.MicrosoftFile.prototype.extractItemId(fileId));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetFilePermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetFileMembersPermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	getFileMembersPermissions: function (fileId, successHandler, errorHandler) {
		var request = this.getFilePermissions(fileId, function (p) {
			successHandler(p);
		}, errorHandler);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GetFileMembersPermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::DeleteFileMemberPermissions(System.String, Infragistics.CloudFileMemberPermissions, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	deleteFileMemberPermissions: function (fileId, memberPermission, successHandler, errorHandler) {
		if (memberPermission == null || memberPermission.permissionKey() == null) {
			return null;
		}
		var ownerUserId = $.ig.MicrosoftFile.prototype.extractOwnerUserId(fileId);
		var itemId = $.ig.MicrosoftFile.prototype.extractItemId(fileId);
		var request = this.deletePermission(successHandler, errorHandler, ownerUserId, itemId, memberPermission.permissionKey());
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::DeleteFileMemberPermissions(System.String, Infragistics.CloudFileMemberPermissions, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::DeleteFilePermissions(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	deleteFilePermissions: function (fileId, successHandler, errorHandler) {
		var $self = this;
		var ownerUserId = $.ig.MicrosoftFile.prototype.extractOwnerUserId(fileId);
		var itemId = $.ig.MicrosoftFile.prototype.extractItemId(fileId);
		var request = new $.ig.MicrosoftItemPermissionsRequest(this.tokenState(), function (r, o) {
			$self.deleteFilePermissionsSuccess(o, ownerUserId, itemId, errorHandler);
			successHandler(r, o);
		}, errorHandler);
		request.user(ownerUserId);
		request.itemId(itemId);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::DeleteFilePermissions(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftFileManager::DeleteFilePermissionsSuccess(Infragistics.MicrosoftItemPermissions, System.String, System.String, Infragistics.RequestErrorBlock)" />*/
	deleteFilePermissionsSuccess: function (itemPermissions, ownerUserId, itemId, errorHandler) {
		for (var i = 0; i < itemPermissions.permissions().length; i++) {
			var permission = $.ig.CPJSONObject.prototype.createFromJSONObject(itemPermissions.permissions()[i]);
			var grantedToUserId = permission.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("grantedTo");
				$ret.add("user");
				$ret.add("id");
				return $ret;
			}()));
			if (grantedToUserId != ownerUserId) {
				this.deletePermission1(null, errorHandler, ownerUserId, itemId, permission);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftFileManager::DeleteFilePermissionsSuccess(Infragistics.MicrosoftItemPermissions, System.String, System.String, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::DeletePermission(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock, System.String, System.String, System.String)" />*/
	deletePermission: function (successHandler, errorHandler, ownerUserId, itemId, permissionId) {
		var deleteRequest = new $.ig.MicrosoftDeleteItemPermissionsRequest(permissionId, this.tokenState(), successHandler, errorHandler);
		deleteRequest.user(ownerUserId);
		deleteRequest.itemId(itemId);
		return deleteRequest;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::DeletePermission(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock, System.String, System.String, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftFileManager::DeletePermission(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock, System.String, System.String, Infragistics.CPJSONObject)" />*/
	deletePermission1: function (successHandler, errorHandler, ownerUserId, itemId, permission) {
		var deleteRequest = this.deletePermission(successHandler, errorHandler, ownerUserId, itemId, permission.resolveStringForKey("id"));
		this.executeAndManage(deleteRequest);
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftFileManager::DeletePermission(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock, System.String, System.String, Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GrantPermissionsForFile(System.String, Infragistics.TokenState, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	grantPermissionsForFile: function (fileId, granteeTokenState, successHandler, errorHandler) {
		if (granteeTokenState.userInfo() == null || granteeTokenState.userInfo().getEmail() == null) {
			errorHandler(null, (function () {
				var $ret = new $.ig.CloudError(0);
				$ret.errorMessage("Missing user information from Microsoft.");
				return $ret;
			}()));
			return null;
		}
		var request = new $.ig.MicrosoftItemAddPermissionsRequest(this.tokenState(), function (r, o) {
			var userEmail = granteeTokenState.userInfo().getEmail();
			var displayName = granteeTokenState.userInfo().getDisplayName();
			var id = granteeTokenState.userInfo().getUserId();
			var permissions = new $.ig.MicrosoftItemPermissions(o, userEmail, displayName, id);
			successHandler(r, permissions);
		}, errorHandler);
		request.itemId($.ig.MicrosoftFile.prototype.extractItemId(fileId));
		request.addRole($.ig.MicrosoftRole.prototype.write);
		request.addEmailRecipient(granteeTokenState.userInfo().getEmail());
		request.sendInvitation(false);
		request.requireSignIn(true);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GrantPermissionsForFile(System.String, Infragistics.TokenState, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GenerateSharedLink(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	generateSharedLink: function (cloudFile, successHandler, errorHandler) {
		var $self = this;
		var request = new $.ig.MicrosoftGetSharedLinkRequest(this.tokenState(), function (r, o) {
			$self.successfulSharedEditLink(o, cloudFile, successHandler, errorHandler);
		}, function (r, e) {
			$self.failedSharedLinks(e, errorHandler);
		});
		request.path($.ig.MicrosoftFile.prototype.extractItemId(cloudFile.pathIdentifier()));
		request.permissionType("edit");
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GenerateSharedLink(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftFileManager::SuccessfulSharedEditLink(Infragistics.CPJSONObject, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	successfulSharedEditLink: function (response, cloudFile, successHandler, errorHandler) {
		var link = response.resolveJSONForKey("link");
		cloudFile.sharedEditLink(link.resolveStringForKey("webUrl"));
		var sharedLinkRequest = this.generateViewSharedLink(cloudFile, successHandler, errorHandler);
		this.executeAndManage(sharedLinkRequest);
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftFileManager::SuccessfulSharedEditLink(Infragistics.CPJSONObject, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GenerateViewSharedLink(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	generateViewSharedLink: function (cloudFile, successHandler, errorHandler) {
		var $self = this;
		var request = new $.ig.MicrosoftGetSharedLinkRequest(this.tokenState(), function (r, o) {
			$self.successfulSharedLinks(o, cloudFile, successHandler);
		}, function (r, e) {
			$self.failedSharedLinks(e, errorHandler);
		});
		request.path($.ig.MicrosoftFile.prototype.extractItemId(cloudFile.pathIdentifier()));
		request.permissionType("view");
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::GenerateViewSharedLink(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftFileManager::SuccessfulSharedLinks(Infragistics.CPJSONObject, Infragistics.CloudFile, Infragistics.CloudFileBlock)" />*/
	successfulSharedLinks: function (response, cloudFile, successHandler) {
		if (successHandler != null) {
			var link = response.resolveJSONForKey("link");
			cloudFile.sharedViewLink(link.resolveStringForKey("webUrl"));
			successHandler(cloudFile);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftFileManager::SuccessfulSharedLinks(Infragistics.CPJSONObject, Infragistics.CloudFile, Infragistics.CloudFileBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftFileManager::FailedSharedLinks(Infragistics.CloudError, Infragistics.CloudErrorBlock)" />*/
	failedSharedLinks: function (error, errorHandler) {
		if (errorHandler != null) {
			errorHandler(error);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftFileManager::FailedSharedLinks(Infragistics.CloudError, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::DownloadFileFromLink(System.String, System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	downloadFileFromLink: function (fileId, downloadLink, successHandler, errorHandler) {
		return new $.ig.MicrosoftDownloadFileFromLinkRequest(downloadLink, this.tokenState(), successHandler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::DownloadFileFromLink(System.String, System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::SimpleUploadRequest(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	simpleUploadRequest: function (path, success, errorHandler) {
		var $self = this;
		var request = new $.ig.MicrosoftFileSimpleUploadRequest(this.tokenState(), function (r, o) {
			$self.simpleUploadRequestSuccess(o, success, errorHandler);
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.path(path);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::SimpleUploadRequest(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftFileManager::SimpleUploadRequestSuccess(Infragistics.CPJSONObject, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	simpleUploadRequestSuccess: function (json, success, errorHandler) {
		if (json.containsKey("file")) {
			success(new $.ig.MicrosoftFile(1, json, this.tokenState().userInfo().getUserId(), this.tokenState().additionalIdentifier()));
		} else {
			var error = new $.ig.CloudError(0);
			error.errorMessage("Response returned successfully, but error creating file");
			errorHandler(error);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftFileManager::SimpleUploadRequestSuccess(Infragistics.CPJSONObject, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::OverwriteFile(System.String, System.Object, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	overwriteFile: function (fileName, file, remoteFolderId, remoteFileId, progress, success, errorHandler) {
		var totalSize = $.ig.NativeFileUtility.prototype.getFileSize(file);
		if (totalSize > 0) {
			var path = "drive/items/" + $.ig.MicrosoftFile.prototype.extractItemId(remoteFileId);
			return this.uploadFileInternal(file, path, "replace", progress, success, errorHandler);
		} else {
			var path1 = $.ig.MicrosoftFile.prototype.extractItemId(remoteFileId);
			return this.simpleUploadRequest(path1, success, errorHandler);
		}
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::OverwriteFile(System.String, System.Object, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::UploadFile(System.String, System.Object, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadFile: function (fileName, file, remoteFolderId, progress, success, errorHandler) {
		var totalSize = $.ig.NativeFileUtility.prototype.getFileSize(file);
		if (totalSize > 0) {
			var folderMatch = (remoteFolderId == null) ? "drive/root" : "drive/items/" + $.ig.MicrosoftFile.prototype.extractItemId(remoteFolderId);
			var path = folderMatch + ":/" + fileName + ":";
			return this.uploadFileInternal(file, path, "fail", progress, success, errorHandler);
		} else {
			var folderMatch1 = (remoteFolderId == null) ? "root" : $.ig.MicrosoftFile.prototype.extractItemId(remoteFolderId);
			var path1 = folderMatch1 + ":/" + fileName + ":";
			return this.simpleUploadRequest(path1, success, errorHandler);
		}
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::UploadFile(System.String, System.Object, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::UploadFileInternal(System.Object, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadFileInternal: function (file, path, conflictBehavior, progress, success, errorHandler) {
		var $self = this;
		var requestWrapper = new $.ig.RequestWrapper();
		var request = new $.ig.MicrosoftCreateUploadSessionRequest(this.tokenState(), function (r, o) {
			var uploadUrl = (o).resolveStringForKey("uploadUrl");
			$self.uploadChunk(requestWrapper, file, uploadUrl, 0, progress, success, errorHandler);
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.path(path);
		request.conflictBehavior(conflictBehavior);
		requestWrapper.request(request);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftFileManager::UploadFileInternal(System.Object, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftFileManager::UploadChunk(Infragistics.RequestWrapper, System.Object, System.String, System.Int64, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadChunk: function (requestWrapper, file, uploadUrl, startPosition, progress, success, errorHandler) {
		var $self = this;
		var totalSize = $.ig.NativeFileUtility.prototype.getFileSize(file);
		var chunkSize = $.ig.MicrosoftFileManager.prototype._cHUNK_SIZE;
		if (totalSize < startPosition + $.ig.MicrosoftFileManager.prototype._cHUNK_SIZE) {
			chunkSize = (totalSize - startPosition);
		}
		var readFileRequest = $.ig.NativeRequestUtility.prototype.utility().readFile(file, startPosition, chunkSize, function (r, o) {
			var data = o;
			$self.uploadChunkWithData(requestWrapper, file, data, uploadUrl, startPosition, totalSize, progress, success, errorHandler);
		}, function (r, o) {
		});
		readFileRequest.execute();
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftFileManager::UploadChunk(Infragistics.RequestWrapper, System.Object, System.String, System.Int64, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftFileManager::UploadChunkWithData(Infragistics.RequestWrapper, System.Object, System.Object, System.String, System.Int64, System.Int64, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadChunkWithData: function (requestWrapper, file, data, uploadUrl, startPosition, totalSize, progress, success, errorHandler) {
		var $self = this;
		if ($.ig.NativeRequestUtility.prototype.utility().getNativeDataSize(data) > 0) {
			var uploadDataRequest = new $.ig.MicrosoftUploadDataChunkRequest(this.tokenState(), function (r, o) {
				var jsonResponse = (o);
				if (jsonResponse.containsKey("nextExpectedRanges")) {
					var currentPosition = startPosition + $.ig.NativeRequestUtility.prototype.utility().getNativeDataSize(data);
					progress(currentPosition, totalSize);
					$self.uploadChunk(requestWrapper, file, uploadUrl, currentPosition, progress, success, errorHandler);
				} else if (jsonResponse.containsKey("file")) {
					success(new $.ig.MicrosoftFile(1, jsonResponse, $self.tokenState().userInfo().getUserId(), $self.tokenState().additionalIdentifier()));
				} else {
					var error = new $.ig.CloudError(0);
					error.errorMessage("The file was not created neither a next range was requested");
					errorHandler(error);
				}
			}, function (r, error) {
				if (errorHandler != null) {
					errorHandler(error);
				}
			}, uploadUrl, startPosition, startPosition + $.ig.NativeRequestUtility.prototype.utility().getNativeDataSize(data) - 1, totalSize, null);
			uploadDataRequest.chunk(data);
			requestWrapper.request(uploadDataRequest);
			uploadDataRequest.execute();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftFileManager::UploadChunkWithData(Infragistics.RequestWrapper, System.Object, System.Object, System.String, System.Int64, System.Int64, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	$type: new $.ig.Type('MicrosoftFileManager', $.ig.CloudFileManager.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftFileManager" />*/

/*<BeginType Name="Infragistics.MicrosoftDeleteDriveItemRequest" />*/

$.ig.util.defType('MicrosoftDeleteDriveItemRequest', 'MicrosoftRequestBase', {
	init: function (token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "MSDeleteDriveItem", token, success, error);
	},
	_itemId: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftDeleteDriveItemRequest::ItemId()" />*/
	itemId: function (value) {
		if (arguments.length === 1) {
			this._itemId = value;
			return value;
		} else {
			return this._itemId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftDeleteDriveItemRequest::ItemId()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftDeleteDriveItemRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/items/" + this.itemId();
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftDeleteDriveItemRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftDeleteDriveItemRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.dELETE;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftDeleteDriveItemRequest::ResolveHTTPMethod()" />*/
	,
	$type: new $.ig.Type('MicrosoftDeleteDriveItemRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftDeleteDriveItemRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftGetUserAvailabilityRequest" />*/

$.ig.util.defType('MicrosoftGetUserAvailabilityRequest', 'MicrosoftRequestBase', {
	init: function (keys, token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "MSGetAvail", token, success, error);
	},
	_start: new Date(),
	/*<BeginProperty Name="System.DateTime Infragistics.MicrosoftGetUserAvailabilityRequest::Start()" />*/
	start: function (value) {
		if (arguments.length === 1) {
			this._start = value;
			return value;
		} else {
			return this._start;
		}
	}
	/*<EndProperty Name="System.DateTime Infragistics.MicrosoftGetUserAvailabilityRequest::Start()" />*/
	,
	_end: new Date(),
	/*<BeginProperty Name="System.DateTime Infragistics.MicrosoftGetUserAvailabilityRequest::End()" />*/
	end: function (value) {
		if (arguments.length === 1) {
			this._end = value;
			return value;
		} else {
			return this._end;
		}
	}
	/*<EndProperty Name="System.DateTime Infragistics.MicrosoftGetUserAvailabilityRequest::End()" />*/
	,
	_attendees: null,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.MicrosoftGetUserAvailabilityRequest::Attendees()" />*/
	attendees: function (value) {
		if (arguments.length === 1) {
			this._attendees = value;
			return value;
		} else {
			return this._attendees;
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.MicrosoftGetUserAvailabilityRequest::Attendees()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGetUserAvailabilityRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGetUserAvailabilityRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftGetUserAvailabilityRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "findmeetingtimes";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftGetUserAvailabilityRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftGetUserAvailabilityRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		var attendeesJSON = new $.ig.Array();
		for (var i = 0; i < this.attendees().length; i++) {
			var attendeeContent = new $.ig.CPJSONObject(1);
			var email = new $.ig.CPJSONObject(1);
			email.setValueForKey("address", this.attendees()[i]);
			attendeeContent.setJSONForKey("emailAddress", email);
			attendeesJSON.add(attendeeContent.jSONObject());
		}
		content.setValueForKey("attendees", attendeesJSON);
		var location = new $.ig.CPJSONObject(1);
		location.setValueForKey("suggestLocation", false);
		content.setJSONForKey("locationConstraint", location);
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftGetUserAvailabilityRequest::ResolvePostContent()" />*/
	,
	$type: new $.ig.Type('MicrosoftGetUserAvailabilityRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftGetUserAvailabilityRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftListDirectoryRequest" />*/

$.ig.util.defType('MicrosoftListDirectoryRequest', 'MicrosoftRequestBase', {
	init: function (token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "MSListPeople", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftListDirectoryRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftListDirectoryRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftListDirectoryRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "people?$top=1000";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftListDirectoryRequest::ResolveAction()" />*/
	,
	$type: new $.ig.Type('MicrosoftListDirectoryRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftListDirectoryRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftListRoomsRequest" />*/

$.ig.util.defType('MicrosoftListRoomsRequest', 'MicrosoftRequestBase', {
	init: function (token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "ListRooms", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftListRoomsRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftListRoomsRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftListRoomsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "people?$top=1000&$filter=personType%20eq%20'Room'";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftListRoomsRequest::ResolveAction()" />*/
	,
	$type: new $.ig.Type('MicrosoftListRoomsRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftListRoomsRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftGetAppointmentsRequest" />*/

$.ig.util.defType('MicrosoftGetAppointmentsRequest', 'MicrosoftRequestBase', {
	init: function (token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "MSGetAppointments", token, success, error);
	},
	_start: new Date(),
	/*<BeginProperty Name="System.DateTime Infragistics.MicrosoftGetAppointmentsRequest::Start()" />*/
	start: function (value) {
		if (arguments.length === 1) {
			this._start = value;
			return value;
		} else {
			return this._start;
		}
	}
	/*<EndProperty Name="System.DateTime Infragistics.MicrosoftGetAppointmentsRequest::Start()" />*/
	,
	_end: new Date(),
	/*<BeginProperty Name="System.DateTime Infragistics.MicrosoftGetAppointmentsRequest::End()" />*/
	end: function (value) {
		if (arguments.length === 1) {
			this._end = value;
			return value;
		} else {
			return this._end;
		}
	}
	/*<EndProperty Name="System.DateTime Infragistics.MicrosoftGetAppointmentsRequest::End()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGetAppointmentsRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGetAppointmentsRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftGetAppointmentsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "calendarView?startDateTime=" + $.ig.DateUtility.prototype.convertDateToISO8601($.ig.DateUtility.prototype.convertLocalTimeToUTC(this.start())) + "&endDateTime=" + $.ig.DateUtility.prototype.convertDateToISO8601($.ig.DateUtility.prototype.convertLocalTimeToUTC(this.end()));
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftGetAppointmentsRequest::ResolveAction()" />*/
	,
	$type: new $.ig.Type('MicrosoftGetAppointmentsRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftGetAppointmentsRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftGetUserPhoto" />*/

$.ig.util.defType('MicrosoftGetUserPhoto', 'MicrosoftRequestBase', {
	init: function (token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "MSGetUserPhoto", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGetUserPhoto::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGetUserPhoto::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftGetUserPhoto::ResolveAction()" />*/
	resolveAction: function () {
		return "photo/$value";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftGetUserPhoto::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.MicrosoftGetUserPhoto::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.dATA;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.MicrosoftGetUserPhoto::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftGetUserPhoto::ProcessDataResponse(System.Array)" />*/
	processDataResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftGetUserPhoto::ProcessDataResponse(System.Array)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftGetUserPhoto::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.MicrosoftRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftGetUserPhoto::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('MicrosoftGetUserPhoto', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftGetUserPhoto" />*/

/*<BeginType Name="Infragistics.MicrosoftFileSimpleUploadRequest" />*/

$.ig.util.defType('MicrosoftFileSimpleUploadRequest', 'MicrosoftRequestBase', {
	init: function (token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "OneDriveFileSimpleUpload", token, success, error);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftFileSimpleUploadRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftFileSimpleUploadRequest::Path()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftFileSimpleUploadRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pUT;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftFileSimpleUploadRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftFileSimpleUploadRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/items/" + this.path() + "/content";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftFileSimpleUploadRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftFileSimpleUploadRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftFileSimpleUploadRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('MicrosoftFileSimpleUploadRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftFileSimpleUploadRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftDownloadFileRequest" />*/

$.ig.util.defType('MicrosoftDownloadFileRequest', 'MicrosoftRequestBase', {
	init: function (token, success, error, progress, downloaded) {
		$.ig.MicrosoftRequestBase.prototype.init1.call(this, 1, "OneDriveDownloadFile", token, success, error, progress, downloaded);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftDownloadFileRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftDownloadFileRequest::Path()" />*/
	,
	_lastETag: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftDownloadFileRequest::LastETag()" />*/
	lastETag: function (value) {
		if (arguments.length === 1) {
			this._lastETag = value;
			return value;
		} else {
			return this._lastETag;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftDownloadFileRequest::LastETag()" />*/
	,
	_eTag: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftDownloadFileRequest::ETag()" />*/
	eTag: function (value) {
		if (arguments.length === 1) {
			this._eTag = value;
			return value;
		} else {
			return this._eTag;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftDownloadFileRequest::ETag()" />*/
	,
	_notModified: false,
	/*<BeginProperty Name="System.Boolean Infragistics.MicrosoftDownloadFileRequest::NotModified()" />*/
	notModified: function (value) {
		if (arguments.length === 1) {
			this._notModified = value;
			return value;
		} else {
			return this._notModified;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.MicrosoftDownloadFileRequest::NotModified()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftDownloadFileRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftDownloadFileRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftDownloadFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/items/" + this.path() + "/content";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftDownloadFileRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionTaskType Infragistics.MicrosoftDownloadFileRequest::ResolveTaskType()" />*/
	resolveTaskType: function () {
		return $.ig.SessionTaskType.prototype.download;
	}
	/*<EndMethod Name="Infragistics.SessionTaskType Infragistics.MicrosoftDownloadFileRequest::ResolveTaskType()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.MicrosoftDownloadFileRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var headers = new $.ig.Dictionary(0);
		if (this.lastETag() != null && this.lastETag().length > 0) {
			headers.item("If-None-Match", this.lastETag());
		}
		return headers;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.MicrosoftDownloadFileRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.MicrosoftDownloadFileRequest::ProcessHeaders(System.Int32, Infragistics.CPDictionary)" />*/
	processHeaders: function (statusCode, response) {
		this.eTag($.ig.RQHTTPUtils.prototype.getHeaderValue(response, "ETag"));
		this.notModified(statusCode == 304);
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.MicrosoftDownloadFileRequest::ProcessHeaders(System.Int32, Infragistics.CPDictionary)" />*/
	,
	$type: new $.ig.Type('MicrosoftDownloadFileRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftDownloadFileRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftDownloadLinkRequest" />*/

$.ig.util.defType('MicrosoftDownloadLinkRequest', 'MicrosoftRequestBase', {
	init: function (token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "OneDriveDownloadLink", token, success, error);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftDownloadLinkRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftDownloadLinkRequest::Path()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.MicrosoftDownloadLinkRequest::IsBeta()" />*/
	isBeta: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.MicrosoftDownloadLinkRequest::IsBeta()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftDownloadLinkRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftDownloadLinkRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftDownloadLinkRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/items/" + this.path();
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftDownloadLinkRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.MicrosoftDownloadLinkRequest::ResolveAllowAutoRedirect()" />*/
	resolveAllowAutoRedirect: function () {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.MicrosoftDownloadLinkRequest::ResolveAllowAutoRedirect()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftDownloadLinkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response.resolveStringForKey("@microsoft.graph.downloadUrl");
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftDownloadLinkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftDownloadLinkRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		$.ig.MicrosoftRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftDownloadLinkRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('MicrosoftDownloadLinkRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftDownloadLinkRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftDownloadFileFromLinkRequest" />*/

$.ig.util.defType('MicrosoftDownloadFileFromLinkRequest', 'MicrosoftRequestBase', {
	__downloadLink: null,
	init: function (downloadLink, token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "OneDriveDownloadFileFromLink", token, success, error);
		this.__downloadLink = downloadLink;
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftDownloadFileFromLinkRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftDownloadFileFromLinkRequest::Path()" />*/
	,
	_lastETag: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftDownloadFileFromLinkRequest::LastETag()" />*/
	lastETag: function (value) {
		if (arguments.length === 1) {
			this._lastETag = value;
			return value;
		} else {
			return this._lastETag;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftDownloadFileFromLinkRequest::LastETag()" />*/
	,
	_eTag: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftDownloadFileFromLinkRequest::ETag()" />*/
	eTag: function (value) {
		if (arguments.length === 1) {
			this._eTag = value;
			return value;
		} else {
			return this._eTag;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftDownloadFileFromLinkRequest::ETag()" />*/
	,
	_notModified: false,
	/*<BeginProperty Name="System.Boolean Infragistics.MicrosoftDownloadFileFromLinkRequest::NotModified()" />*/
	notModified: function (value) {
		if (arguments.length === 1) {
			this._notModified = value;
			return value;
		} else {
			return this._notModified;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.MicrosoftDownloadFileFromLinkRequest::NotModified()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftDownloadFileFromLinkRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftDownloadFileFromLinkRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftDownloadFileFromLinkRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return this.__downloadLink;
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftDownloadFileFromLinkRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftDownloadFileFromLinkRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftDownloadFileFromLinkRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionTaskType Infragistics.MicrosoftDownloadFileFromLinkRequest::ResolveTaskType()" />*/
	resolveTaskType: function () {
		return $.ig.SessionTaskType.prototype.data;
	}
	/*<EndMethod Name="Infragistics.SessionTaskType Infragistics.MicrosoftDownloadFileFromLinkRequest::ResolveTaskType()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.MicrosoftDownloadFileFromLinkRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.dATA;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.MicrosoftDownloadFileFromLinkRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.MicrosoftDownloadFileFromLinkRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.none;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.MicrosoftDownloadFileFromLinkRequest::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.MicrosoftDownloadFileFromLinkRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var headers = new $.ig.Dictionary(0);
		if (this.lastETag() != null && this.lastETag().length > 0) {
			headers.item("If-None-Match", this.lastETag());
		}
		return headers;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.MicrosoftDownloadFileFromLinkRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.MicrosoftDownloadFileFromLinkRequest::ProcessHeaders(System.Int32, Infragistics.CPDictionary)" />*/
	processHeaders: function (statusCode, response) {
		this.eTag($.ig.RQHTTPUtils.prototype.getHeaderValue(response, "ETag"));
		this.notModified(statusCode == 304);
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.MicrosoftDownloadFileFromLinkRequest::ProcessHeaders(System.Int32, Infragistics.CPDictionary)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftDownloadFileFromLinkRequest::ProcessDataResponse(System.Array)" />*/
	processDataResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftDownloadFileFromLinkRequest::ProcessDataResponse(System.Array)" />*/
	,
	$type: new $.ig.Type('MicrosoftDownloadFileFromLinkRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftDownloadFileFromLinkRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftCreateUploadSessionRequest" />*/

$.ig.util.defType('MicrosoftCreateUploadSessionRequest', 'MicrosoftRequestBase', {
	init: function (token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "OneDriveCreateUploadSession", token, success, error);
		this.conflictBehavior("rename");
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftCreateUploadSessionRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftCreateUploadSessionRequest::Path()" />*/
	,
	_conflictBehavior: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftCreateUploadSessionRequest::ConflictBehavior()" />*/
	conflictBehavior: function (value) {
		if (arguments.length === 1) {
			this._conflictBehavior = value;
			return value;
		} else {
			return this._conflictBehavior;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftCreateUploadSessionRequest::ConflictBehavior()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftCreateUploadSessionRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftCreateUploadSessionRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.MicrosoftCreateUploadSessionRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.MicrosoftCreateUploadSessionRequest::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftCreateUploadSessionRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var json = new $.ig.CPJSONObject(1);
		var itemDict = new $.ig.CPJSONObject(1);
		itemDict.setValueForKey("@microsoft.graph.conflictBehavior", this.conflictBehavior());
		json.setJSONForKey("item", itemDict);
		return json.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftCreateUploadSessionRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftCreateUploadSessionRequest::ResolveAction()" />*/
	resolveAction: function () {
		return this.path() + "/createUploadSession";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftCreateUploadSessionRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftCreateUploadSessionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftCreateUploadSessionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('MicrosoftCreateUploadSessionRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftCreateUploadSessionRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftUploadDataChunkRequest" />*/

$.ig.util.defType('MicrosoftUploadDataChunkRequest', 'MicrosoftRequestBase', {
	init: function (token, success, error, uploadUrl, rangeStart, rangeEnd, totalSize, data) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "OneDriveUploadDataChunk", token, success, error);
		this.uploadUrl(uploadUrl);
		this.rangeStart(rangeStart);
		this.rangeEnd(rangeEnd);
		this.totalSize(totalSize);
		this.data(data);
	},
	_uploadUrl: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftUploadDataChunkRequest::UploadUrl()" />*/
	uploadUrl: function (value) {
		if (arguments.length === 1) {
			this._uploadUrl = value;
			return value;
		} else {
			return this._uploadUrl;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftUploadDataChunkRequest::UploadUrl()" />*/
	,
	_rangeStart: 0,
	/*<BeginProperty Name="System.Int64 Infragistics.MicrosoftUploadDataChunkRequest::RangeStart()" />*/
	rangeStart: function (value) {
		if (arguments.length === 1) {
			this._rangeStart = value;
			return value;
		} else {
			return this._rangeStart;
		}
	}
	/*<EndProperty Name="System.Int64 Infragistics.MicrosoftUploadDataChunkRequest::RangeStart()" />*/
	,
	_rangeEnd: 0,
	/*<BeginProperty Name="System.Int64 Infragistics.MicrosoftUploadDataChunkRequest::RangeEnd()" />*/
	rangeEnd: function (value) {
		if (arguments.length === 1) {
			this._rangeEnd = value;
			return value;
		} else {
			return this._rangeEnd;
		}
	}
	/*<EndProperty Name="System.Int64 Infragistics.MicrosoftUploadDataChunkRequest::RangeEnd()" />*/
	,
	_totalSize: 0,
	/*<BeginProperty Name="System.Int64 Infragistics.MicrosoftUploadDataChunkRequest::TotalSize()" />*/
	totalSize: function (value) {
		if (arguments.length === 1) {
			this._totalSize = value;
			return value;
		} else {
			return this._totalSize;
		}
	}
	/*<EndProperty Name="System.Int64 Infragistics.MicrosoftUploadDataChunkRequest::TotalSize()" />*/
	,
	_data: null,
	/*<BeginProperty Name="System.Array Infragistics.MicrosoftUploadDataChunkRequest::Data()" />*/
	data: function (value) {
		if (arguments.length === 1) {
			this._data = value;
			return value;
		} else {
			return this._data;
		}
	}
	/*<EndProperty Name="System.Array Infragistics.MicrosoftUploadDataChunkRequest::Data()" />*/
	,
	_chunk: null,
	/*<BeginProperty Name="System.Object Infragistics.MicrosoftUploadDataChunkRequest::Chunk()" />*/
	chunk: function (value) {
		if (arguments.length === 1) {
			this._chunk = value;
			return value;
		} else {
			return this._chunk;
		}
	}
	/*<EndProperty Name="System.Object Infragistics.MicrosoftUploadDataChunkRequest::Chunk()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftUploadDataChunkRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pUT;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftUploadDataChunkRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftUploadDataChunkRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return this.uploadUrl();
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftUploadDataChunkRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftUploadDataChunkRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftUploadDataChunkRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Array Infragistics.MicrosoftUploadDataChunkRequest::ResolvePostContentData()" />*/
	resolvePostContentData: function () {
		return this.data();
	}
	/*<EndMethod Name="System.Array Infragistics.MicrosoftUploadDataChunkRequest::ResolvePostContentData()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftUploadDataChunkRequest::ResolvePostContentAsObject()" />*/
	resolvePostContentAsObject: function () {
		return this.chunk();
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftUploadDataChunkRequest::ResolvePostContentAsObject()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftUploadDataChunkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftUploadDataChunkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.MicrosoftUploadDataChunkRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var headers = new $.ig.Dictionary(0);
		var contentRange = "bytes " + this.rangeStart().toString() + "-" + this.rangeEnd().toString() + "/" + this.totalSize().toString();
		headers.item("Content-Range", contentRange);
		return headers;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.MicrosoftUploadDataChunkRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftUploadDataChunkRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.MicrosoftRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftUploadDataChunkRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('MicrosoftUploadDataChunkRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftUploadDataChunkRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftCreateFolderRequest" />*/

$.ig.util.defType('MicrosoftCreateFolderRequest', 'MicrosoftRequestBase', {
	init: function (token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "SharePointCreateFolder", token, success, error);
		this.conflictBehavior("rename");
	},
	_newFolderName: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftCreateFolderRequest::NewFolderName()" />*/
	newFolderName: function (value) {
		if (arguments.length === 1) {
			this._newFolderName = value;
			return value;
		} else {
			return this._newFolderName;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftCreateFolderRequest::NewFolderName()" />*/
	,
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftCreateFolderRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftCreateFolderRequest::Path()" />*/
	,
	_conflictBehavior: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftCreateFolderRequest::ConflictBehavior()" />*/
	conflictBehavior: function (value) {
		if (arguments.length === 1) {
			this._conflictBehavior = value;
			return value;
		} else {
			return this._conflictBehavior;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftCreateFolderRequest::ConflictBehavior()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftCreateFolderRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftCreateFolderRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.MicrosoftCreateFolderRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.MicrosoftCreateFolderRequest::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftCreateFolderRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var json = new $.ig.CPJSONObject(1);
		json.setValueForKey("name", this.newFolderName());
		json.setJSONForKey("folder", new $.ig.CPJSONObject(1));
		json.setValueForKey("@microsoft.graph.conflictBehavior", this.conflictBehavior());
		return json.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftCreateFolderRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftCreateFolderRequest::ResolveAction()" />*/
	resolveAction: function () {
		if (this.path() != null && this.path().length > 0) {
			var folderId = $.ig.MicrosoftFile.prototype.extractItemId(this.path());
			return "drive/items/" + folderId + "/children";
		}
		return "drive/root/children";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftCreateFolderRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftCreateFolderRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return (new $.ig.MicrosoftFile(1, response, this.ownerUserId(), this.tokenState().additionalIdentifier()));
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftCreateFolderRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('MicrosoftCreateFolderRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftCreateFolderRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftGetMetadataRequest" />*/

$.ig.util.defType('MicrosoftGetMetadataRequest', 'MicrosoftRequestBase', {
	init: function (token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "Microsoft_GetMetadata", token, success, error);
	},
	_fileId: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftGetMetadataRequest::FileId()" />*/
	fileId: function (value) {
		if (arguments.length === 1) {
			this._fileId = value;
			return value;
		} else {
			return this._fileId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftGetMetadataRequest::FileId()" />*/
	,
	_filePath: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftGetMetadataRequest::FilePath()" />*/
	filePath: function (value) {
		if (arguments.length === 1) {
			this._filePath = value;
			return value;
		} else {
			return this._filePath;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftGetMetadataRequest::FilePath()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftGetMetadataRequest::ResolveAction()" />*/
	resolveAction: function () {
		if (this.filePath() != null && this.filePath().length > 0) {
			return "drive/root:/" + this.filePath();
		}
		return "/drive/items/" + (this.fileId() == null ? "" : this.fileId());
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftGetMetadataRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGetMetadataRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGetMetadataRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftGetMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return (new $.ig.MicrosoftFile(1, response, this.ownerUserId(), this.tokenState().additionalIdentifier()));
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftGetMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftGetMetadataRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		if (error.errorCode() == 404) {
			var authError = this.checkFileReadAccess();
			if (authError != null) {
				$.ig.MicrosoftRequestBase.prototype.error.call(this, authError);
				return;
			}
		}
		$.ig.MicrosoftRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftGetMetadataRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('MicrosoftGetMetadataRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftGetMetadataRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftSearchFilesRequest" />*/

$.ig.util.defType('MicrosoftSearchFilesRequest', 'MicrosoftRequestBase', {
	init: function (token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "OneDriveSearchFiles", token, success, error);
	},
	_query: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftSearchFilesRequest::Query()" />*/
	query: function (value) {
		if (arguments.length === 1) {
			this._query = value;
			return value;
		} else {
			return this._query;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftSearchFilesRequest::Query()" />*/
	,
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftSearchFilesRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftSearchFilesRequest::Path()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftSearchFilesRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftSearchFilesRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftSearchFilesRequest::ResolveAction()" />*/
	resolveAction: function () {
		if (this.path() == null || this.path().length == 0) {
			return "drive/root/search(q='" + this.query() + "')";
		}
		return "drive/items/" + this.path() + "/search(q='" + this.query() + "')";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftSearchFilesRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftSearchFilesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var files = new $.ig.Array();
		var entries = response.resolveListForKey("value");
		var count = entries.length;
		for (var i = 0; i < count; i++) {
			files.add(new $.ig.MicrosoftFile(1, $.ig.CPJSONObject.prototype.createFromJSONObject(entries[i]), this.ownerUserId(), this.tokenState().additionalIdentifier()));
		}
		return files;
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftSearchFilesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftSearchFilesRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.MicrosoftRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftSearchFilesRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('MicrosoftSearchFilesRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftSearchFilesRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftGetSharedLinkRequest" />*/

$.ig.util.defType('MicrosoftGetSharedLinkRequest', 'MicrosoftRequestBase', {
	init: function (token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "OneDriveGetSharedLink", token, success, error);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftGetSharedLinkRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftGetSharedLinkRequest::Path()" />*/
	,
	_permissionType: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftGetSharedLinkRequest::PermissionType()" />*/
	permissionType: function (value) {
		if (arguments.length === 1) {
			this._permissionType = value;
			return value;
		} else {
			return this._permissionType;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftGetSharedLinkRequest::PermissionType()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGetSharedLinkRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGetSharedLinkRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftGetSharedLinkRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/items/" + this.path() + "/createLink";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftGetSharedLinkRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.MicrosoftGetSharedLinkRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.MicrosoftGetSharedLinkRequest::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftGetSharedLinkRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("type", this.permissionType());
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftGetSharedLinkRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftGetSharedLinkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftGetSharedLinkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('MicrosoftGetSharedLinkRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftGetSharedLinkRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftGetAccountInfo" />*/

$.ig.util.defType('MicrosoftGetAccountInfo', 'MicrosoftRequestBase', {
	__useOnlyIdToken: false,
	init: function (initNumber, token, success, error) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.MicrosoftGetAccountInfo.prototype.init1.call(this, 1, token, false, success, error);
	},
	init1: function (initNumber, token, useOnlyIdToken, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "MS_GetAccount", token, success, error);
		this.__useOnlyIdToken = useOnlyIdToken;
	},
	/*<BeginProperty Name="System.Boolean Infragistics.MicrosoftGetAccountInfo::IsBeta()" />*/
	isBeta: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.MicrosoftGetAccountInfo::IsBeta()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGetAccountInfo::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGetAccountInfo::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftGetAccountInfo::ResolveAction()" />*/
	resolveAction: function () {
		return "";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftGetAccountInfo::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.MicrosoftGetAccountInfo::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.none;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.MicrosoftGetAccountInfo::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftGetAccountInfo::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var userInfo = new $.ig.MicrosoftAccountUserInfo(0, response);
		if (userInfo.getEmail() == null) {
			var idTokenData = this.decodeIdTokenData();
			if (idTokenData != null) {
				if (idTokenData.containsKey("email")) {
					userInfo.setValueForKey("mail", idTokenData.resolveObjectForKey("email"));
				}
			}
		}
		return userInfo;
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftGetAccountInfo::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftGetAccountInfo::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.MicrosoftRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftGetAccountInfo::Error(Infragistics.CloudError)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftGetAccountInfo::Execute()" />*/
	execute: function () {
		if (this.__useOnlyIdToken) {
			var idTokenData = this.decodeIdTokenData();
			if (idTokenData == null) {
				this.error(new $.ig.CloudError(1, "Cannot get user information since id_token is missing or invalid", null));
				return;
			}
			var userInfo = new $.ig.MicrosoftAccountUserInfo(1, idTokenData.resolveStringForKey("sub"), idTokenData.resolveStringForKey("email"));
			this.success(userInfo);
		} else {
			$.ig.MicrosoftRequestBase.prototype.execute.call(this);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftGetAccountInfo::Execute()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPJSONObject Infragistics.MicrosoftGetAccountInfo::DecodeIdTokenData()" />*/
	decodeIdTokenData: function () {
		var idToken = this.tokenState().token().getIDToken();
		if (idToken == null) {
			return null;
		}
		return $.ig.TokenState.prototype.convertPayloadToJSON(idToken);
	}
	/*<EndMethod Name="Infragistics.CPJSONObject Infragistics.MicrosoftGetAccountInfo::DecodeIdTokenData()" />*/
	,
	$type: new $.ig.Type('MicrosoftGetAccountInfo', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftGetAccountInfo" />*/

/*<BeginType Name="Infragistics.MicrosoftFileRequest" />*/

$.ig.util.defType('MicrosoftFileRequest', 'MicrosoftRequestBase', {
	_itemId: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftFileRequest::ItemId()" />*/
	itemId: function (value) {
		if (arguments.length === 1) {
			this._itemId = value;
			return value;
		} else {
			return this._itemId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftFileRequest::ItemId()" />*/
	,
	_destinationPath: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftFileRequest::DestinationPath()" />*/
	destinationPath: function (value) {
		if (arguments.length === 1) {
			this._destinationPath = value;
			return value;
		} else {
			return this._destinationPath;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftFileRequest::DestinationPath()" />*/
	,
	init: function (key, token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, key, token, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.MicrosoftFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "drive/items/" + this.itemId();
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftFileRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.MicrosoftFileRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.MicrosoftFileRequest::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftFileRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftFileRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('MicrosoftFileRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftFileRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftMoveFileRequest" />*/

$.ig.util.defType('MicrosoftMoveFileRequest', 'MicrosoftFileRequest', {
	init: function (token, success, error) {
		$.ig.MicrosoftFileRequest.prototype.init.call(this, "MS_MoveFile", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftMoveFileRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pATCH;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftMoveFileRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftMoveFileRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		return "{\"parentReference\": {\"id\": \"" + this.destinationPath() + "\"}}";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftMoveFileRequest::ResolvePostContent()" />*/
	,
	$type: new $.ig.Type('MicrosoftMoveFileRequest', $.ig.MicrosoftFileRequest.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftMoveFileRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftCopyFileRequest" />*/

$.ig.util.defType('MicrosoftCopyFileRequest', 'MicrosoftFileRequest', {
	_destinationDriveId: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftCopyFileRequest::DestinationDriveId()" />*/
	destinationDriveId: function (value) {
		if (arguments.length === 1) {
			this._destinationDriveId = value;
			return value;
		} else {
			return this._destinationDriveId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftCopyFileRequest::DestinationDriveId()" />*/
	,
	init: function (token, success, error) {
		$.ig.MicrosoftFileRequest.prototype.init.call(this, "MS_CopyFile", token, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.MicrosoftCopyFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return $.ig.MicrosoftFileRequest.prototype.resolveAction.call(this) + "/copy";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftCopyFileRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftCopyFileRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftCopyFileRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftCopyFileRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return new $.ig.MicrosoftAccountUserInfo(0, response);
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftCopyFileRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftCopyFileRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		return "{\"parentReference\": {\"id\": \"" + this.destinationPath() + "\"}, \"driveId\": \"" + this.destinationDriveId() + "\"}}";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftCopyFileRequest::ResolvePostContent()" />*/
	,
	$type: new $.ig.Type('MicrosoftCopyFileRequest', $.ig.MicrosoftFileRequest.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftCopyFileRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftSendEmailRequest" />*/

$.ig.util.defType('MicrosoftSendEmailRequest', 'MicrosoftRequestBase', {
	init: function (token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "MicrosoftSendEmailRequest", token, success, error);
	},
	_to: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftSendEmailRequest::To()" />*/
	to: function (value) {
		if (arguments.length === 1) {
			this._to = value;
			return value;
		} else {
			return this._to;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftSendEmailRequest::To()" />*/
	,
	_subject: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftSendEmailRequest::Subject()" />*/
	subject: function (value) {
		if (arguments.length === 1) {
			this._subject = value;
			return value;
		} else {
			return this._subject;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftSendEmailRequest::Subject()" />*/
	,
	_body: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftSendEmailRequest::Body()" />*/
	body: function (value) {
		if (arguments.length === 1) {
			this._body = value;
			return value;
		} else {
			return this._body;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftSendEmailRequest::Body()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftSendEmailRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftSendEmailRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftSendEmailRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "sendMail";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftSendEmailRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftSendEmailRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		var message = new $.ig.CPJSONObject(1);
		message.setValueForKey("subject", this.subject());
		var body = new $.ig.CPJSONObject(1);
		body.setValueForKey("contentType", "HTML");
		body.setValueForKey("content", this.body());
		message.setJSONForKey("body", body);
		var address = new $.ig.CPJSONObject(1);
		address.setValueForKey("address", this.to());
		var emailAddress = new $.ig.CPJSONObject(1);
		emailAddress.setJSONForKey("emailAddress", address);
		var recepients = new $.ig.Array();
		recepients.add(emailAddress.jSONObject());
		message.setValueForKey("toRecipients", recepients);
		content.setJSONForKey("message", message);
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftSendEmailRequest::ResolvePostContent()" />*/
	,
	$type: new $.ig.Type('MicrosoftSendEmailRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftSendEmailRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftGetEmailAddressesRequest" />*/

$.ig.util.defType('MicrosoftGetEmailAddressesRequest', 'MicrosoftRequestBase', {
	_searchPattern: null,
	init: function (token, success, error) {
		this._searchPattern = "^([^`~!@#$%^&*()\\-_\\+=<>,./?\"'|\\\\])+$";
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "MicrosoftGetEmailAddressesRequest", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGetEmailAddressesRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGetEmailAddressesRequest::ResolveHTTPMethod()" />*/
	,
	_uID: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftGetEmailAddressesRequest::UID()" />*/
	uID: function (value) {
		if (arguments.length === 1) {
			this._uID = value;
			return value;
		} else {
			return this._uID;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftGetEmailAddressesRequest::UID()" />*/
	,
	_search: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftGetEmailAddressesRequest::Search()" />*/
	search: function (value) {
		if (arguments.length === 1) {
			this._search = value;
			return value;
		} else {
			return this._search;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftGetEmailAddressesRequest::Search()" />*/
	,
	_microsoftProvider: null,
	/*<BeginProperty Name="Infragistics.ProviderBase Infragistics.MicrosoftGetEmailAddressesRequest::MicrosoftProvider()" />*/
	microsoftProvider: function (value) {
		if (arguments.length === 1) {
			this._microsoftProvider = value;
			return value;
		} else {
			return this._microsoftProvider;
		}
	}
	/*<EndProperty Name="Infragistics.ProviderBase Infragistics.MicrosoftGetEmailAddressesRequest::MicrosoftProvider()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftGetEmailAddressesRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "people";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftGetEmailAddressesRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.MicrosoftGetEmailAddressesRequest::ResolveParams()" />*/
	resolveParams: function () {
		var result = new $.ig.Dictionary(0);
		result.item("$select", "displayName,emailAddresses,personType");
		if (this.search() != null) {
			result.item("$search", this.search());
		}
		return result;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.MicrosoftGetEmailAddressesRequest::ResolveParams()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.MicrosoftGetEmailAddressesRequest::ParamsInRequestURL()" />*/
	paramsInRequestURL: function () {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.MicrosoftGetEmailAddressesRequest::ParamsInRequestURL()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.MicrosoftGetEmailAddressesRequest::URLEncodeParams()" />*/
	uRLEncodeParams: function () {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.MicrosoftGetEmailAddressesRequest::URLEncodeParams()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftGetEmailAddressesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var result = new $.ig.Array();
		var entries = response.resolveListForKey("value");
		var count = entries.length;
		for (var i = 0; i < count; i++) {
			var person = $.ig.CPJSONObject.prototype.createFromJSONObject(entries[i]);
			var personType = person.resolveStringForKey("personType");
			if (personType != null && personType == "Person") {
				var emailAddresses = person.resolveListForKey("emailAddresses");
				if (emailAddresses != null) {
					var countEmails = emailAddresses.length;
					for (var j = 0; j < countEmails; j++) {
						var emailAddress = $.ig.CPJSONObject.prototype.createFromJSONObject(emailAddresses[j]);
						var address = emailAddress.resolveStringForKey("address");
						var member = new $.ig.CPJSONObject(1);
						member.setValueForKey("name", person.resolveStringForKey("displayName"));
						member.setValueForKey("email", address);
						result.add(member);
					}
				}
			}
		}
		return result;
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftGetEmailAddressesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftGetEmailAddressesRequest::Execute()" />*/
	execute: function () {
		if (this.search() != null) {
			if (!$.ig.NativeStringUtility.prototype.regexMatch(this._searchPattern, this.search())) {
				this.error((function () {
					var $ret = new $.ig.CloudError(0);
					$ret.errorMessage("Not supported character");
					return $ret;
				}()));
				return;
			}
		}
		$.ig.MicrosoftRequestBase.prototype.execute.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftGetEmailAddressesRequest::Execute()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftGetEmailAddressesRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		$.ig.MicrosoftRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftGetEmailAddressesRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('MicrosoftGetEmailAddressesRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftGetEmailAddressesRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftDeleteItemPermissionsRequest" />*/

$.ig.util.defType('MicrosoftDeleteItemPermissionsRequest', 'MicrosoftFileRequest', {
	_permissionId: null,
	init: function (permissionId, token, success, error) {
		$.ig.MicrosoftFileRequest.prototype.init.call(this, "MS_ItemPermissions", token, success, error);
		this._permissionId = permissionId;
	},
	/*<BeginMethod Name="System.String Infragistics.MicrosoftDeleteItemPermissionsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return $.ig.MicrosoftFileRequest.prototype.resolveAction.call(this) + "/permissions/" + this._permissionId;
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftDeleteItemPermissionsRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftDeleteItemPermissionsRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.dELETE;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftDeleteItemPermissionsRequest::ResolveHTTPMethod()" />*/
	,
	$type: new $.ig.Type('MicrosoftDeleteItemPermissionsRequest', $.ig.MicrosoftFileRequest.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftDeleteItemPermissionsRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftItemPermissionsRequest" />*/

$.ig.util.defType('MicrosoftItemPermissionsRequest', 'MicrosoftFileRequest', {
	init: function (token, success, error) {
		$.ig.MicrosoftFileRequest.prototype.init.call(this, "MS_ItemPermissions", token, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.MicrosoftItemPermissionsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return $.ig.MicrosoftFileRequest.prototype.resolveAction.call(this) + "/permissions";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftItemPermissionsRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftItemPermissionsRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftItemPermissionsRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftItemPermissionsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var userEmail = this.tokenState().userInfo().getEmail();
		var displayName = this.tokenState().userInfo().getDisplayName();
		var id = this.tokenState().userInfo().getUserId();
		return new $.ig.MicrosoftItemPermissions(response, userEmail, displayName, id);
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftItemPermissionsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('MicrosoftItemPermissionsRequest', $.ig.MicrosoftFileRequest.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftItemPermissionsRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftItemPermissions" />*/

$.ig.util.defType('MicrosoftItemPermissions', 'CloudFilePermissions', {
	__permissions: null,
	__email: null,
	__displayName: null,
	__userId: null,
	__foundOwner: false,
	init: function (json, email, displayName, userId) {
		$.ig.CloudFilePermissions.prototype.init.call(this, 0);
		this.__foundOwner = false;
		this.__email = email;
		this.__displayName = displayName;
		this.__userId = userId;
		if (json != null) {
			this.__permissions = json.resolveListForKey("value");
			this.setMembers();
		}
	},
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftItemPermissions::SetMembers()" />*/
	setMembers: function () {
		for (var i = 0; i < this.permissions().length; i++) {
			var permission = $.ig.CPJSONObject.prototype.createFromJSONObject(this.permissions()[i]);
			var permissionId = permission.resolveStringForKey("id");
			var grantedToEmail = permission.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("grantedTo");
				$ret.add("user");
				$ret.add("email");
				return $ret;
			}()));
			var grantedToName = permission.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("grantedTo");
				$ret.add("user");
				$ret.add("displayName");
				return $ret;
			}()));
			var grantedToId = permission.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("grantedTo");
				$ret.add("user");
				$ret.add("id");
				return $ret;
			}()));
			var grantedToIdentitiesList = permission.resolveListForKey("grantedToIdentities");
			var invitationEmail = permission.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("invitation");
				$ret.add("email");
				return $ret;
			}()));
			var roles = permission.resolveListForKey("roles");
			var linkType = permission.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("link");
				$ret.add("type");
				return $ret;
			}()));
			var accessLink = permission.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("link");
				$ret.add("webUrl");
				return $ret;
			}()));
			var scope = permission.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("link");
				$ret.add("scope");
				return $ret;
			}()));
			if (!$.ig.CPStringUtility.prototype.isNullOrEmpty(permissionId) && !$.ig.CPStringUtility.prototype.isNullOrEmpty(grantedToEmail) && roles != null && roles.length > 0) {
				this.setMemberInfo(grantedToEmail, grantedToName, grantedToId, roles[0], permissionId, false);
			} else if (grantedToIdentitiesList != null && grantedToIdentitiesList.length > 0 && roles != null && roles.length > 0) {
				for (var j = 0; j < grantedToIdentitiesList.length; j++) {
					var identityObj = $.ig.CPJSONObject.prototype.createFromJSONObject(grantedToIdentitiesList[j]);
					var identityEmail = identityObj.resolveStringForKeyPath((function () {
						var $ret = new $.ig.Array();
						$ret.add("user");
						$ret.add("email");
						return $ret;
					}()));
					var identityName = identityObj.resolveStringForKeyPath((function () {
						var $ret = new $.ig.Array();
						$ret.add("user");
						$ret.add("displayName");
						return $ret;
					}()));
					if (!$.ig.CPStringUtility.prototype.isNullOrEmpty(identityEmail)) {
						if (!$.ig.CPStringUtility.prototype.isNullOrEmpty(permissionId)) {
							this.setMemberInfo(identityEmail, identityName, permissionId, roles[0], permissionId, true);
						}
						if (identityEmail.toLowerCase().equals(this.__email.toLowerCase())) {
							this.setAccessLinks(accessLink, linkType, scope);
						}
					}
				}
			} else if (!$.ig.CPStringUtility.prototype.isNullOrEmpty(permissionId) && !$.ig.CPStringUtility.prototype.isNullOrEmpty(invitationEmail)) {
				this.setMemberInfo(invitationEmail, invitationEmail, null, roles[0], permissionId, true);
			} else {
				this.setAccessLinks(accessLink, linkType, scope);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftItemPermissions::SetMembers()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.MicrosoftItemPermissions::FindMyRole(System.String)" />*/
	findMyRole: function (role) {
		for (var i = 0; i < this.permissions().length; i++) {
			var permission = $.ig.CPJSONObject.prototype.createFromJSONObject(this.permissions()[i]);
			var grantedToEmail = permission.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("grantedTo");
				$ret.add("user");
				$ret.add("email");
				return $ret;
			}()));
			var grantedToId = permission.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("grantedTo");
				$ret.add("user");
				$ret.add("id");
				return $ret;
			}()));
			var grantedToIdentitiesList = permission.resolveListForKey("grantedToIdentities");
			var invitationEmail = permission.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("invitation");
				$ret.add("email");
				return $ret;
			}()));
			var roles = permission.resolveListForKey("roles");
			var linkType = permission.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("link");
				$ret.add("type");
				return $ret;
			}()));
			var accessLink = permission.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("link");
				$ret.add("webUrl");
				return $ret;
			}()));
			var scope = permission.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("link");
				$ret.add("scope");
				return $ret;
			}()));
			if (roles != null && roles.length > 0 && roles.contains(role)) {
				if ((!$.ig.CPStringUtility.prototype.isNullOrEmpty(grantedToId) && grantedToId == this.__userId) || (!$.ig.CPStringUtility.prototype.isNullOrEmpty(grantedToEmail) && grantedToEmail.toLowerCase().equals(this.__email.toLowerCase())) || (!$.ig.CPStringUtility.prototype.isNullOrEmpty(invitationEmail) && invitationEmail.toLowerCase().equals(this.__email.toLowerCase()))) {
					return true;
				} else if (grantedToIdentitiesList != null && grantedToIdentitiesList.length > 0) {
					for (var j = 0; j < grantedToIdentitiesList.length; j++) {
						var identityObj = $.ig.CPJSONObject.prototype.createFromJSONObject(grantedToIdentitiesList[j]);
						var identityEmail = identityObj.resolveStringForKeyPath((function () {
							var $ret = new $.ig.Array();
							$ret.add("user");
							$ret.add("email");
							return $ret;
						}()));
						if (!$.ig.CPStringUtility.prototype.isNullOrEmpty(identityEmail) && identityEmail.toLowerCase().equals(this.__email.toLowerCase())) {
							this.setAccessLinks(accessLink, linkType, scope);
							return true;
						}
					}
				} else {
					this.setAccessLinks(accessLink, linkType, scope);
				}
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.MicrosoftItemPermissions::FindMyRole(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftItemPermissions::SetAccessLinks(System.String, System.String, System.String)" />*/
	setAccessLinks: function (accessLink, linkType, scope) {
		if (!$.ig.CPStringUtility.prototype.isNullOrEmpty(linkType) && !$.ig.CPStringUtility.prototype.isNullOrEmpty(accessLink)) {
			if (linkType.equals("edit") && $.ig.CPStringUtility.prototype.isNullOrEmpty(this.__editAccessLink)) {
				this.__editAccessLink = accessLink;
			}
			if (linkType.equals("view") && $.ig.CPStringUtility.prototype.isNullOrEmpty(this.__viewAccessLink)) {
				this.__viewAccessLink = accessLink;
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftItemPermissions::SetAccessLinks(System.String, System.String, System.String)" />*/
	,
	__viewAccessLink: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftItemPermissions::ViewAccessLink()" />*/
	viewAccessLink: function () {
		return this.__viewAccessLink;
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftItemPermissions::ViewAccessLink()" />*/
	,
	__editAccessLink: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftItemPermissions::EditAccessLink()" />*/
	editAccessLink: function () {
		return this.__editAccessLink;
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftItemPermissions::EditAccessLink()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftItemPermissions::SetMemberInfo(System.String, System.String, System.String, System.String, System.String, System.Boolean)" />*/
	setMemberInfo: function (email, name, id, role, permissionId, isExternal) {
		if (role == $.ig.MicrosoftItemPermissions.prototype._ownerKey) {
			this.__foundOwner = true;
			this.setMemberPermissions(new $.ig.CloudFileMemberPermissions(1, email, name, id, permissionId, true, true, true, isExternal));
		} else if (role == $.ig.MicrosoftItemPermissions.prototype._editorKey) {
			this.setMemberPermissions(new $.ig.CloudFileMemberPermissions(1, email, name, id, permissionId, false, true, false, isExternal));
		} else if (role == $.ig.MicrosoftItemPermissions.prototype._viewerKey) {
			this.setMemberPermissions(new $.ig.CloudFileMemberPermissions(1, email, name, id, permissionId, false, false, true, isExternal));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftItemPermissions::SetMemberInfo(System.String, System.String, System.String, System.String, System.String, System.Boolean)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.MicrosoftItemPermissions::Share()" />*/
	share: function () {
		return this.hasRole($.ig.MicrosoftItemPermissions.prototype._ownerKey);
	}
	/*<EndProperty Name="System.Boolean Infragistics.MicrosoftItemPermissions::Share()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.MicrosoftItemPermissions::View()" />*/
	view: function () {
		return this.hasRole($.ig.MicrosoftItemPermissions.prototype._ownerKey) || this.hasRole($.ig.MicrosoftItemPermissions.prototype._editorKey) || this.hasRole($.ig.MicrosoftItemPermissions.prototype._viewerKey);
	}
	/*<EndProperty Name="System.Boolean Infragistics.MicrosoftItemPermissions::View()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.MicrosoftItemPermissions::Edit()" />*/
	edit: function () {
		return this.hasRole($.ig.MicrosoftItemPermissions.prototype._ownerKey) || this.hasRole($.ig.MicrosoftItemPermissions.prototype._editorKey);
	}
	/*<EndProperty Name="System.Boolean Infragistics.MicrosoftItemPermissions::Edit()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.MicrosoftItemPermissions::HasRole(System.String)" />*/
	hasRole: function (role) {
		var permissions = this.resolveMemberForEmail(this.__email);
		if (this.foundRoleForPermission(role, permissions)) {
			return true;
		}
		permissions = this.resolveMemberForUserId(this.__userId);
		if (this.foundRoleForPermission(role, permissions)) {
			return true;
		}
		return this.findMyRole(role);
	}
	/*<EndMethod Name="System.Boolean Infragistics.MicrosoftItemPermissions::HasRole(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.MicrosoftItemPermissions::FoundRoleForPermission(System.String, Infragistics.CloudFileMemberPermissions)" />*/
	foundRoleForPermission: function (role, permissions) {
		if (permissions != null) {
			if (role == $.ig.MicrosoftItemPermissions.prototype._ownerKey) {
				return permissions.isOwner();
			} else if (role == $.ig.MicrosoftItemPermissions.prototype._viewerKey) {
				return permissions.isViewer();
			} else if (role == $.ig.MicrosoftItemPermissions.prototype._editorKey) {
				return permissions.isEditor();
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.MicrosoftItemPermissions::FoundRoleForPermission(System.String, Infragistics.CloudFileMemberPermissions)" />*/
	,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.MicrosoftItemPermissions::Permissions()" />*/
	permissions: function () {
		if (this.__permissions == null) {
			this.__permissions = new $.ig.Array();
		}
		return this.__permissions;
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.MicrosoftItemPermissions::Permissions()" />*/
	,
	$type: new $.ig.Type('MicrosoftItemPermissions', $.ig.CloudFilePermissions.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftItemPermissions" />*/

/*<BeginType Name="Infragistics.MicrosoftItemAddPermissionsRequest" />*/

$.ig.util.defType('MicrosoftItemAddPermissionsRequest', 'MicrosoftFileRequest', {
	__emailRecipients: null,
	__roles: null,
	init: function (token, success, error) {
		$.ig.MicrosoftFileRequest.prototype.init.call(this, "MS_ItemAddPermissions", token, success, error);
		this.__emailRecipients = new $.ig.Array();
		this.__roles = new $.ig.Array();
	},
	_requireSignIn: false,
	/*<BeginProperty Name="System.Boolean Infragistics.MicrosoftItemAddPermissionsRequest::RequireSignIn()" />*/
	requireSignIn: function (value) {
		if (arguments.length === 1) {
			this._requireSignIn = value;
			return value;
		} else {
			return this._requireSignIn;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.MicrosoftItemAddPermissionsRequest::RequireSignIn()" />*/
	,
	_sendInvitation: false,
	/*<BeginProperty Name="System.Boolean Infragistics.MicrosoftItemAddPermissionsRequest::SendInvitation()" />*/
	sendInvitation: function (value) {
		if (arguments.length === 1) {
			this._sendInvitation = value;
			return value;
		} else {
			return this._sendInvitation;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.MicrosoftItemAddPermissionsRequest::SendInvitation()" />*/
	,
	_message: null,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftItemAddPermissionsRequest::Message()" />*/
	message: function (value) {
		if (arguments.length === 1) {
			this._message = value;
			return value;
		} else {
			return this._message;
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftItemAddPermissionsRequest::Message()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftItemAddPermissionsRequest::AddEmailRecipient(System.String)" />*/
	addEmailRecipient: function (email) {
		var recipient = new $.ig.CPJSONObject(1);
		recipient.setValueForKey("email", email);
		this.__emailRecipients.add(recipient.jSONObject());
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftItemAddPermissionsRequest::AddEmailRecipient(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftItemAddPermissionsRequest::AddRole(Infragistics.MicrosoftRole)" />*/
	addRole: function (role) {
		this.__roles.add($.ig.MicrosoftRoleUtility.prototype.convertToString(role));
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftItemAddPermissionsRequest::AddRole(Infragistics.MicrosoftRole)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftItemAddPermissionsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return $.ig.MicrosoftFileRequest.prototype.resolveAction.call(this) + "/invite";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftItemAddPermissionsRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftItemAddPermissionsRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftItemAddPermissionsRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftItemAddPermissionsRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var content = new $.ig.CPJSONObject(1);
		content.setValueForKey("requireSignIn", this.requireSignIn());
		content.setValueForKey("sendInvitation", this.sendInvitation());
		content.setValueForKey("message", this.message());
		content.setValueForKey("recipients", this.__emailRecipients);
		content.setValueForKey("roles", this.__roles);
		return content.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftItemAddPermissionsRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftItemAddPermissionsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftItemAddPermissionsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('MicrosoftItemAddPermissionsRequest', $.ig.MicrosoftFileRequest.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftItemAddPermissionsRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftRoleUtility" />*/

$.ig.util.defType('MicrosoftRoleUtility', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.String Infragistics.MicrosoftRoleUtility::ConvertToString(Infragistics.MicrosoftRole)" />*/
	convertToString: function (value) {
		if (value == $.ig.MicrosoftRole.prototype.read) {
			return "read";
		} else if (value == $.ig.MicrosoftRole.prototype.write) {
			return "write";
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftRoleUtility::ConvertToString(Infragistics.MicrosoftRole)" />*/
	,
	$type: new $.ig.Type('MicrosoftRoleUtility', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftRoleUtility" />*/

/*<BeginType Name="Infragistics.MicrosoftTeamManager" />*/

$.ig.util.defType('MicrosoftTeamManager', 'CloudTeamManager', {
	init: function (state) {
		$.ig.CloudTeamManager.prototype.init.call(this, state);
	},
	/*<BeginMethod Name="Infragistics.OAuthRequestBase Infragistics.MicrosoftTeamManager::GetTeamsImMemberOf(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	getTeamsImMemberOf: function (successHandler, errorHandler) {
		var request = new $.ig.MicrosoftGroupsUserBelongsToRequest(this.tokenState(), successHandler, errorHandler);
		return request;
	}
	/*<EndMethod Name="Infragistics.OAuthRequestBase Infragistics.MicrosoftTeamManager::GetTeamsImMemberOf(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftTeamManager::GetMembers(Infragistics.CloudTeam, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	getMembers: function (team, successHandler, errorHandler) {
		var request = new $.ig.MicrosoftGroupMembersRequest(team, this.tokenState(), successHandler, errorHandler);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftTeamManager::GetMembers(Infragistics.CloudTeam, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftTeamManager::GetOrganization(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	getOrganization: function (successHandler, errorHandler) {
		var request = new $.ig.MicrosoftOrganizationRequest(this.tokenState(), successHandler, errorHandler);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftTeamManager::GetOrganization(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.MicrosoftTeamManager::LoadTeamMember(Infragistics.CloudTeamMember, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	loadTeamMember: function (teamMember, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.MicrosoftTeamManager::LoadTeamMember(Infragistics.CloudTeamMember, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	$type: new $.ig.Type('MicrosoftTeamManager', $.ig.CloudTeamManager.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftTeamManager" />*/

/*<BeginType Name="Infragistics.MicrosoftGroupsUserBelongsToRequest" />*/

$.ig.util.defType('MicrosoftGroupsUserBelongsToRequest', 'MicrosoftRequestBase', {
	init: function (token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "GroupsUserBelongsTo", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGroupsUserBelongsToRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGroupsUserBelongsToRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftGroupsUserBelongsToRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "memberOf";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftGroupsUserBelongsToRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.MicrosoftGroupsUserBelongsToRequest::RequireElevatedPermissions()" />*/
	requireElevatedPermissions: function () {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.MicrosoftGroupsUserBelongsToRequest::RequireElevatedPermissions()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftGroupsUserBelongsToRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var teams = new $.ig.Array();
		var entries = response.resolveListForKey("value");
		var count = entries.length;
		for (var i = 0; i < count; i++) {
			var jsonFile = $.ig.CPJSONObject.prototype.createFromJSONObject(entries[i]);
			jsonFile.setValueForKey("providerId", this.tokenState().additionalIdentifier());
			teams.add(new $.ig.MicrosoftTeam(1, jsonFile));
		}
		return teams;
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftGroupsUserBelongsToRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('MicrosoftGroupsUserBelongsToRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftGroupsUserBelongsToRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftOrganizationRequest" />*/

$.ig.util.defType('MicrosoftOrganizationRequest', 'MicrosoftRequestBase', {
	init: function (token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "Organization", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftOrganizationRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftOrganizationRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftOrganizationRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return $.ig.MicrosoftRequestBase.prototype.graphURL + "v1.0/";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftOrganizationRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftOrganizationRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "organization";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftOrganizationRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftOrganizationRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var value = response.resolveListForKey("value");
		if (value.length == 0) {
			return null;
		}
		var json = $.ig.CPJSONObject.prototype.createFromJSONObject(value[0]);
		return new $.ig.MicrosoftOrganization(1, json);
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftOrganizationRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('MicrosoftOrganizationRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftOrganizationRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftGroupMembersRequest" />*/

$.ig.util.defType('MicrosoftGroupMembersRequest', 'MicrosoftRequestBase', {
	__team: null,
	init: function (team, token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "GroupsUserBelongsTo", token, success, error);
		this.__team = team;
	},
	/*<BeginProperty Name="System.Boolean Infragistics.MicrosoftGroupMembersRequest::IsBeta()" />*/
	isBeta: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.MicrosoftGroupMembersRequest::IsBeta()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGroupMembersRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.MicrosoftGroupMembersRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftGroupMembersRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return $.ig.MicrosoftRequestBase.prototype.graphURL + this.version();
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftGroupMembersRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftGroupMembersRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "/groups/" + this.__team.identifier() + "/members";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftGroupMembersRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.MicrosoftGroupMembersRequest::RequireElevatedPermissions()" />*/
	requireElevatedPermissions: function () {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.MicrosoftGroupMembersRequest::RequireElevatedPermissions()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftGroupMembersRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var members = new $.ig.Array();
		var entries = response.resolveListForKey("value");
		var count = entries.length;
		for (var i = 0; i < count; i++) {
			var jsonFile = $.ig.CPJSONObject.prototype.createFromJSONObject(entries[i]);
			jsonFile.setValueForKey("providerId", this.tokenState().additionalIdentifier());
			members.add(new $.ig.MicrosoftTeamMember(1, jsonFile));
		}
		return members;
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftGroupMembersRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('MicrosoftGroupMembersRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftGroupMembersRequest" />*/

/*<BeginType Name="Infragistics.MicrosoftGetRootSiteRequest" />*/

$.ig.util.defType('MicrosoftGetRootSiteRequest', 'MicrosoftRequestBase', {
	init: function (token, success, error) {
		$.ig.MicrosoftRequestBase.prototype.init.call(this, 0, "GetRootSite", token, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.MicrosoftGetRootSiteRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return $.ig.MicrosoftRequestBase.prototype.graphURL + this.version() + "/";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftGetRootSiteRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftGetRootSiteRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "sites/root";
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftGetRootSiteRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.MicrosoftGetRootSiteRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return new $.ig.SharePointSiteGraphObject(response);
	}
	/*<EndMethod Name="System.Object Infragistics.MicrosoftGetRootSiteRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftGetRootSiteRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.MicrosoftRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftGetRootSiteRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('MicrosoftGetRootSiteRequest', $.ig.MicrosoftRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftGetRootSiteRequest" />*/

/*<BeginType Name="Infragistics.Token" />*/

$.ig.util.defType('Token', 'BackingStoreObjectBase', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.BackingStoreObjectBase.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json) {
		$.ig.BackingStoreObjectBase.prototype.init1.call(this, 1, json);
	},
	/*<BeginMethod Name="System.Void Infragistics.Token::JSONSet()" />*/
	jSONSet: function () {
		$.ig.BackingStoreObjectBase.prototype.jSONSet.call(this);
		if (!this.containsKey($.ig.Token.prototype._eXPIRATION_TIME_KEY)) {
			var expirationInSeconds = this.resolveIntegerForKey("expires_in");
			if (expirationInSeconds != 0) {
				this.setValueForKey($.ig.Token.prototype._eXPIRATION_TIME_KEY, $.ig.NativeRequestUtility.prototype.utility().getCurrentTimeInSeconds() + expirationInSeconds);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.Token::JSONSet()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Token::GetAccessToken()" />*/
	getAccessToken: function () {
		return this.resolveStringForKey($.ig.Token.prototype._aCCESS_TOKEN_KEY);
	}
	/*<EndMethod Name="System.String Infragistics.Token::GetAccessToken()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Token::SetAccessToken(System.String)" />*/
	setAccessToken: function (accessToken) {
		this.setValueForKey($.ig.Token.prototype._aCCESS_TOKEN_KEY, accessToken);
	}
	/*<EndMethod Name="System.Void Infragistics.Token::SetAccessToken(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Token::GetIDToken()" />*/
	getIDToken: function () {
		return this.resolveStringForKey("id_token");
	}
	/*<EndMethod Name="System.String Infragistics.Token::GetIDToken()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Token::GetRefreshToken()" />*/
	getRefreshToken: function () {
		return this.resolveStringForKey("refresh_token");
	}
	/*<EndMethod Name="System.String Infragistics.Token::GetRefreshToken()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Token::GetTokenType()" />*/
	getTokenType: function () {
		return this.resolveStringForKey("token_type");
	}
	/*<EndMethod Name="System.String Infragistics.Token::GetTokenType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Token::GetResource()" />*/
	getResource: function () {
		return this.resolveStringForKey("resource");
	}
	/*<EndMethod Name="System.String Infragistics.Token::GetResource()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Token::GetResourceTitle()" />*/
	getResourceTitle: function () {
		return this.resolveStringForKey("resourceTitle");
	}
	/*<EndMethod Name="System.String Infragistics.Token::GetResourceTitle()" />*/
	,
	/*<BeginMethod Name="System.Int64 Infragistics.Token::GetExpirationTime()" />*/
	getExpirationTime: function () {
		return this.resolveLongForKey($.ig.Token.prototype._eXPIRATION_TIME_KEY);
	}
	/*<EndMethod Name="System.Int64 Infragistics.Token::GetExpirationTime()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.Token::SetExpirationTime(System.Object)" />*/
	setExpirationTime: function (value) {
		this.setValueForKey($.ig.Token.prototype._eXPIRATION_TIME_KEY, value);
	}
	/*<EndMethod Name="System.Void Infragistics.Token::SetExpirationTime(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Token::isExpired()" />*/
	isExpired: function () {
		if (!this.containsKey($.ig.Token.prototype._eXPIRATION_TIME_KEY)) {
			return false;
		}
		var expirationTime = this.resolveLongForKey($.ig.Token.prototype._eXPIRATION_TIME_KEY);
		if (expirationTime == 0) {
			return false;
		}
		var currentTime = $.ig.NativeRequestUtility.prototype.utility().getCurrentTimeInSeconds();
		return expirationTime < currentTime;
	}
	/*<EndMethod Name="System.Boolean Infragistics.Token::isExpired()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.Token::GetEndPoint()" />*/
	getEndPoint: function () {
		return this.resolveStringForKey("resource");
	}
	/*<EndMethod Name="System.String Infragistics.Token::GetEndPoint()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.Token::IsSharePointSubsiteToken()" />*/
	isSharePointSubsiteToken: function () {
		return this.resolveBoolForKey("isSharePointSubsiteToken");
	}
	/*<EndMethod Name="System.Boolean Infragistics.Token::IsSharePointSubsiteToken()" />*/
	,
	$type: new $.ig.Type('Token', $.ig.BackingStoreObjectBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.Token" />*/

/*<BeginType Name="Infragistics.BoxAccountUserInfo" />*/

$.ig.util.defType('BoxAccountUserInfo', 'CloudAccountUserInfo', {
	init: function (json) {
		$.ig.CloudAccountUserInfo.prototype.init1.call(this, 1, json);
	},
	/*<BeginMethod Name="System.String Infragistics.BoxAccountUserInfo::GetDisplayName()" />*/
	getDisplayName: function () {
		return this.resolveStringForKey("name");
	}
	/*<EndMethod Name="System.String Infragistics.BoxAccountUserInfo::GetDisplayName()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxAccountUserInfo::GetEmail()" />*/
	getEmail: function () {
		return this.resolveStringForKey("login");
	}
	/*<EndMethod Name="System.String Infragistics.BoxAccountUserInfo::GetEmail()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxAccountUserInfo::GetUserId()" />*/
	getUserId: function () {
		return this.resolveStringForKey("id");
	}
	/*<EndMethod Name="System.String Infragistics.BoxAccountUserInfo::GetUserId()" />*/
	,
	$type: new $.ig.Type('BoxAccountUserInfo', $.ig.CloudAccountUserInfo.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxAccountUserInfo" />*/

/*<BeginType Name="Infragistics.LinkedDocument" />*/

$.ig.util.defType('LinkedDocument', 'ActivityTrackingBackingStore', {
	init: function (initNumber, json) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.ActivityTrackingBackingStore.prototype.init1.call(this, 1, json);
		this.__timeStamp = -1;
	},
	init1: function (initNumber) {
		$.ig.ActivityTrackingBackingStore.prototype.init.call(this, 0);
		this.__timeStamp = -1;
	},
	/*<BeginMethod Name="System.String Infragistics.LinkedDocument::ResolvedAlternateIdentifer()" />*/
	resolvedAlternateIdentifer: function () {
		return this.identifier();
	}
	/*<EndMethod Name="System.String Infragistics.LinkedDocument::ResolvedAlternateIdentifer()" />*/
	,
	_treatAsInfo: false,
	/*<BeginProperty Name="System.Boolean Infragistics.LinkedDocument::TreatAsInfo()" />*/
	treatAsInfo: function (value) {
		if (arguments.length === 1) {
			this._treatAsInfo = value;
			return value;
		} else {
			return this._treatAsInfo;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.LinkedDocument::TreatAsInfo()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.LinkedDocument::DocType()" />*/
	docType: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey($.ig.LinkedDocument.prototype.documentTypeKey, value);
			return value;
		} else {
			return this.resolveStringForKey($.ig.LinkedDocument.prototype.documentTypeKey);
		}
	}
	/*<EndProperty Name="System.String Infragistics.LinkedDocument::DocType()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.LinkedDocument::Action()" />*/
	action: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("action", value);
			return value;
		} else {
			return this.resolveStringForKey("action");
		}
	}
	/*<EndProperty Name="System.String Infragistics.LinkedDocument::Action()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.LinkedDocument::IsNewDocument()" />*/
	isNewDocument: function (value) {
		if (arguments.length === 1) {
			this.setBoolProperty("newDocument", value, null);
			return value;
		} else {
			return this.resolveBoolForKey("newDocument");
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.LinkedDocument::IsNewDocument()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.LinkedDocument::AwaitLinksUpdate()" />*/
	awaitLinksUpdate: function (value) {
		if (arguments.length === 1) {
			this.setBoolProperty("awaitLinksUpdate", value, null);
			return value;
		} else {
			return this.resolveBoolForKey("awaitLinksUpdate");
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.LinkedDocument::AwaitLinksUpdate()" />*/
	,
	__timeStamp: 0,
	/*<BeginProperty Name="System.Int64 Infragistics.LinkedDocument::TimeStamp()" />*/
	timeStamp: function (value) {
		if (arguments.length === 1) {
			this.__timeStamp = value;
			this.setValueForKey("_ts", value);
			return value;
		} else {
			if (this.__timeStamp == -1) {
				this.__timeStamp = this.resolveLongForKey("_ts");
			}
			return this.__timeStamp;
		}
	}
	/*<EndProperty Name="System.Int64 Infragistics.LinkedDocument::TimeStamp()" />*/
	,
	__links: null,
	__sharedLinks: null,
	__parentLinks: null,
	__nonSharedLinks: null,
	__teamIds: null,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.LinkedDocument::Links()" />*/
	links: function () {
		this.ensureLinks();
		return this.__links;
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.LinkedDocument::Links()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.LinkedDocument::ContainsLinkTo(System.String)" />*/
	containsLinkTo: function (parentId) {
		var list = this.resolveListForKey("links");
		for (var i = 0; i < list.length; i++) {
			var json = $.ig.CPJSONObject.prototype.createFromJSONObject(list[i]);
			if (json.resolveStringForKey($.ig.ActivityTrackingBackingStore.prototype.iDKey) == parentId) {
				return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.LinkedDocument::ContainsLinkTo(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::AddLink(Infragistics.DocumentLink)" />*/
	addLink: function (link) {
		if (link.identifier() != null) {
			this.removeLink(link.identifier(), true);
		}
		var list = this.resolveListForKey("links");
		list.add(link.jSONObject());
		this.setValueForKey("links", list);
		this.__links = null;
		this.ensureLinks();
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::AddLink(Infragistics.DocumentLink)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::RemoveLink(System.String, System.Boolean)" />*/
	removeLink: function (linkId, quietly) {
		var list = this.resolveListForKey("links");
		var updatedLinksList = new $.ig.Array();
		for (var i = 0; i < list.length; i++) {
			var json = $.ig.CPJSONObject.prototype.createFromJSONObject(list[i]);
			var jsonKey = json.resolveStringForKey($.ig.ActivityTrackingBackingStore.prototype.iDKey);
			if ($.ig.CPStringUtility.prototype.areStringsEqual(jsonKey, linkId) == false) {
				updatedLinksList.add(list[i]);
			}
		}
		this.setValueForKey("links", updatedLinksList);
		this.__links = null;
		if (!quietly) {
			this.ensureLinks();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::RemoveLink(System.String, System.Boolean)" />*/
	,
	__overrideTeamIds: null,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.LinkedDocument::LinkedTeamIds()" />*/
	linkedTeamIds: function (value) {
		if (arguments.length === 1) {
			if (value != null) {
				this.__overrideTeamIds = $.ig.ArrayUtility.prototype.copyCPList(value);
			} else {
				this.__overrideTeamIds = null;
			}
			return value;
		} else {
			if (this.__overrideTeamIds != null) {
				return this.__overrideTeamIds;
			}
			this.ensureLinks();
			return this.__teamIds;
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.LinkedDocument::LinkedTeamIds()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.LinkedDocument::IsTeamAvailable(System.String)" />*/
	isTeamAvailable: function (teamId) {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.LinkedDocument::IsTeamAvailable(System.String)" />*/
	,
	__availableTeamIds: null,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.LinkedDocument::ResolveAllAvailableAncestorTeamIds()" />*/
	resolveAllAvailableAncestorTeamIds: function () {
		if (this.__availableTeamIds == null) {
			this.ensureLinks();
			this.__availableTeamIds = new $.ig.Array();
			var directTeamIds = this.linkedTeamIds();
			var checkedTeamIds = new $.ig.Dictionary(0);
			for (var i = 0; i < directTeamIds.length; i++) {
				var teamId = directTeamIds[i];
				if (!$.ig.NativeDictionaryUtility.prototype.containsKey(checkedTeamIds, teamId)) {
					checkedTeamIds.item(teamId, teamId);
					if (this.isTeamAvailable(teamId)) {
						this.__availableTeamIds.add(teamId);
					}
				}
			}
			var links = this.links();
			for (var i1 = 0; i1 < links.length; i1++) {
				var link = links[i1];
				var ancestorsPaths = link.ancestorsPaths();
				if (ancestorsPaths.length > 0) {
					for (var j = 0; j < ancestorsPaths.length; j++) {
						var ancestorPath = ancestorsPaths[j];
						for (var ai = 0; ai < ancestorPath.length; ai++) {
							var ancestor = ancestorPath[ai];
							if ($.ig.CPStringUtility.prototype.areStringsEqual(ancestor.documentType(), $.ig.DocumentLink.prototype.documentTypeTeam) && !$.ig.NativeDictionaryUtility.prototype.containsKey(checkedTeamIds, ancestor.identifier())) {
								checkedTeamIds.item(ancestor.identifier(), ancestor.identifier());
								if (this.isTeamAvailable(ancestor.identifier())) {
									this.__availableTeamIds.add(ancestor.identifier());
								}
								break;
							}
						}
					}
				}
			}
		}
		return this.__availableTeamIds;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.LinkedDocument::ResolveAllAvailableAncestorTeamIds()" />*/
	,
	__linksById: null,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::EnsureLinks()" />*/
	ensureLinks: function () {
		if (this.__links == null) {
			this.__linksById = new $.ig.Dictionary(0);
			this.__availableTeamIds = null;
			var items = this.resolveListForKey("links");
			this.__links = new $.ig.Array();
			this.__parentLinks = new $.ig.Array();
			this.__sharedLinks = new $.ig.Array();
			this.__nonSharedLinks = new $.ig.Array();
			this.__teamIds = new $.ig.Array();
			this.setupLinkCollections();
			for (var i = 0; i < items.length; i++) {
				var json = $.ig.CPJSONObject.prototype.createFromJSONObject(items[i]);
				var link = new $.ig.DocumentLink(0, json);
				var linkId = link.identifier();
				if (!$.ig.NativeDictionaryUtility.prototype.containsKey(this.__linksById, linkId)) {
					this.__linksById.item(linkId, link);
					if (link.shared()) {
						this.__sharedLinks.add(link);
					} else {
						this.__nonSharedLinks.add(link);
					}
					if (link.linkType() != null && link.linkType() == $.ig.DocumentLink.prototype.linkTypeParent) {
						this.__parentLinks.add(link);
						this.processParentLink(link);
					}
					this.__links.add(link);
				}
			}
			this.finishedSettingUpLinks();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::EnsureLinks()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::SetupLinkCollections()" />*/
	setupLinkCollections: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::SetupLinkCollections()" />*/
	,
	__validPaths: null,
	__namedPathParts: null,
	__idPathParts: null,
	__orderedNamedParts: null,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::FinishedSettingUpLinks()" />*/
	finishedSettingUpLinks: function () {
		if (this.supportsNamedPaths()) {
			this.__namedPathParts = new $.ig.Dictionary(0);
			this.__idPathParts = new $.ig.Dictionary(0);
			this.__orderedNamedParts = new $.ig.Array();
			this.__validPaths = this.resolveValidParentLinkPaths(this.links());
			if (this.__validPaths != null && this.__validPaths.length > 0) {
				var firstValidPath = this.__validPaths[0];
				for (var i = 0; i < firstValidPath.length; i++) {
					var part = firstValidPath[i];
					this.registerNamePart(part);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::FinishedSettingUpLinks()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.LinkedDocument::ValidPaths()" />*/
	validPaths: function () {
		this.ensureLinks();
		return this.__validPaths;
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.LinkedDocument::ValidPaths()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.LinkedDocument::ResolveValidParentLinkPaths(Infragistics.CPList)" />*/
	resolveValidParentLinkPaths: function (parents) {
		return null;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.LinkedDocument::ResolveValidParentLinkPaths(Infragistics.CPList)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.LinkedDocument::SupportsNamedPaths()" />*/
	supportsNamedPaths: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.LinkedDocument::SupportsNamedPaths()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::RegisterNamePart(Infragistics.DocumentLink)" />*/
	registerNamePart: function (link) {
		var name = link.name();
		if (name == null) {
			name = this.tryToResolveDocumentNameFromLink(link);
			if (name == null) {
				name = "";
			}
		}
		var key = this.buildNamePartKeyForLink(link);
		if (key != null) {
			this.__namedPathParts.item(key, name);
			if (link.identifier() != null) {
				this.__idPathParts.item(key, link.identifier());
			}
			if (!$.ig.CPStringUtility.prototype.isNullOrEmpty(name) && name != "General") {
				if ((this.includeOrgInNamedPath() || !$.ig.CPStringUtility.prototype.areStringsEqual(link.kind(), $.ig.DocumentLink.prototype.kindTypeOrg))) {
					this.__orderedNamedParts.add(name);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::RegisterNamePart(Infragistics.DocumentLink)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.LinkedDocument::IncludeOrgInNamedPath()" />*/
	includeOrgInNamedPath: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.LinkedDocument::IncludeOrgInNamedPath()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.LinkedDocument::TryToResolveDocumentNameFromLink(Infragistics.DocumentLink)" />*/
	tryToResolveDocumentNameFromLink: function (link) {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.LinkedDocument::TryToResolveDocumentNameFromLink(Infragistics.DocumentLink)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.LinkedDocument::ResolveAncestorSubtitle()" />*/
	resolveAncestorSubtitle: function () {
		this.ensureLinks();
		var subTitle = null;
		if (this.__orderedNamedParts != null) {
			for (var i = this.__orderedNamedParts.length - 1; i >= 0; i--) {
				var part = this.__orderedNamedParts[i];
				if (subTitle == null) {
					subTitle = part;
				} else {
					subTitle = subTitle + "/" + part;
				}
			}
		}
		return subTitle;
	}
	/*<EndMethod Name="System.String Infragistics.LinkedDocument::ResolveAncestorSubtitle()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.LinkedDocument::BuildNamePartKeyForLink(Infragistics.DocumentLink)" />*/
	buildNamePartKeyForLink: function (link) {
		var key = link.documentType();
		if (link.kind() != null) {
			key = key + ":" + link.kind();
		}
		return key;
	}
	/*<EndMethod Name="System.String Infragistics.LinkedDocument::BuildNamePartKeyForLink(Infragistics.DocumentLink)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.LinkedDocument::ResolveNamePart(System.String)" />*/
	resolveNamePart: function (key) {
		this.ensureLinks();
		if (this.__namedPathParts != null && $.ig.NativeDictionaryUtility.prototype.containsKey(this.__namedPathParts, key)) {
			return this.__namedPathParts.item(key);
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.LinkedDocument::ResolveNamePart(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.LinkedDocument::ResolveIdPart(System.String)" />*/
	resolveIdPart: function (key) {
		this.ensureLinks();
		if (this.__idPathParts != null && $.ig.NativeDictionaryUtility.prototype.containsKey(this.__idPathParts, key)) {
			return this.__idPathParts.item(key);
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.LinkedDocument::ResolveIdPart(System.String)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.LinkedDocument::TeamName()" />*/
	teamName: function () {
		return this.resolveNamePart($.ig.DocumentLink.prototype.documentTypeTeam);
	}
	/*<EndProperty Name="System.String Infragistics.LinkedDocument::TeamName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.LinkedDocument::ParentTeamIdFromPath()" />*/
	parentTeamIdFromPath: function () {
		var teamId = this.workspaceIdFromPath();
		if (teamId == null) {
			teamId = this.teamIdFromPath();
		}
		return teamId;
	}
	/*<EndProperty Name="System.String Infragistics.LinkedDocument::ParentTeamIdFromPath()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.LinkedDocument::TeamIdFromPath()" />*/
	teamIdFromPath: function () {
		return this.resolveIdPart($.ig.DocumentLink.prototype.documentTypeTeam);
	}
	/*<EndProperty Name="System.String Infragistics.LinkedDocument::TeamIdFromPath()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.LinkedDocument::WorkspaceName()" />*/
	workspaceName: function () {
		return this.resolveNamePart($.ig.DocumentLink.prototype.documentTypeTeam + ":" + $.ig.DocumentLink.prototype.kindTypeProject);
	}
	/*<EndProperty Name="System.String Infragistics.LinkedDocument::WorkspaceName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.LinkedDocument::WorkspaceIdFromPath()" />*/
	workspaceIdFromPath: function () {
		return this.resolveIdPart($.ig.DocumentLink.prototype.documentTypeTeam + ":" + $.ig.DocumentLink.prototype.kindTypeProject);
	}
	/*<EndProperty Name="System.String Infragistics.LinkedDocument::WorkspaceIdFromPath()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.LinkedDocument::OrgIdFromPath()" />*/
	orgIdFromPath: function () {
		return this.resolveIdPart($.ig.DocumentLink.prototype.documentTypeTeam + ":" + $.ig.DocumentLink.prototype.kindTypeOrg);
	}
	/*<EndProperty Name="System.String Infragistics.LinkedDocument::OrgIdFromPath()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::ProcessParentLink(Infragistics.DocumentLink)" />*/
	processParentLink: function (link) {
		if (link.documentType() == $.ig.DocumentLink.prototype.documentTypeTeam) {
			this.__teamIds.add(link.identifier());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::ProcessParentLink(Infragistics.DocumentLink)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::ResetData()" />*/
	resetData: function () {
		this.__links = null;
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::ResetData()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.LinkedDocument::ChildDocumentIdsForKey(System.String)" />*/
	childDocumentIdsForKey: function (key) {
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.LinkedDocument::ChildDocumentIdsForKey(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::AddChildDocument(System.String, Infragistics.LinkedDocument)" />*/
	addChildDocument: function (key, childDocument) {
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::AddChildDocument(System.String, Infragistics.LinkedDocument)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::RemoveChildDocument(System.String, System.String)" />*/
	removeChildDocument: function (key, childId) {
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::RemoveChildDocument(System.String, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::ChildDocumentUpdated(System.String, System.String)" />*/
	childDocumentUpdated: function (key, childId) {
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::ChildDocumentUpdated(System.String, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::BeforeDocumentUpdated()" />*/
	beforeDocumentUpdated: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::BeforeDocumentUpdated()" />*/
	,
	__pagedChildDocumentInfos: null,
	/*<BeginMethod Name="Infragistics.LinkedDocumentChildPagingInfo Infragistics.LinkedDocument::CollectionPagingInfoForKey(System.String)" />*/
	collectionPagingInfoForKey: function (collectionProperty) {
		this.ensureCollectionPagingInfo(collectionProperty);
		return this.__pagedChildDocumentInfos.item(collectionProperty);
	}
	/*<EndMethod Name="Infragistics.LinkedDocumentChildPagingInfo Infragistics.LinkedDocument::CollectionPagingInfoForKey(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::EnsureCollectionPagingInfo(System.String)" />*/
	ensureCollectionPagingInfo: function (collectionProperty) {
		if (this.__pagedChildDocumentInfos == null) {
			this.__pagedChildDocumentInfos = new $.ig.Dictionary(0);
		}
		if (!$.ig.NativeDictionaryUtility.prototype.containsKey(this.__pagedChildDocumentInfos, collectionProperty)) {
			var pagingInfo = this.createLinkedDocumentPager(this.docType(), this.identifier(), collectionProperty);
			this.__pagedChildDocumentInfos.item(collectionProperty, pagingInfo);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::EnsureCollectionPagingInfo(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.LinkedDocumentChildPagingInfo Infragistics.LinkedDocument::CreateLinkedDocumentPager(System.String, System.String, System.String)" />*/
	createLinkedDocumentPager: function (docType, docId, collectionProperty) {
		return new $.ig.LinkedDocumentChildPagingInfo(docType, docId, collectionProperty, false, false);
	}
	/*<EndMethod Name="Infragistics.LinkedDocumentChildPagingInfo Infragistics.LinkedDocument::CreateLinkedDocumentPager(System.String, System.String, System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.LinkedDocument::GetDocumentJSON()" />*/
	getDocumentJSON: function () {
		var links = this.resolveObjectForKey("links");
		this.removeForKey("links");
		var val = this.convertToString();
		this.setValueForKey("links", links);
		this.resetData();
		this.cleanupAfterPost();
		return val;
	}
	/*<EndMethod Name="System.String Infragistics.LinkedDocument::GetDocumentJSON()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.LinkedDocument::ParentLinks()" />*/
	parentLinks: function () {
		this.ensureLinks();
		return this.__parentLinks;
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.LinkedDocument::ParentLinks()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.LinkedDocument::IsShared()" />*/
	isShared: function () {
		return this.parentLinks().length > 1;
	}
	/*<EndProperty Name="System.Boolean Infragistics.LinkedDocument::IsShared()" />*/
	,
	__ancestors: null,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.LinkedDocument::Ancestors()" />*/
	ancestors: function () {
		if (this.__ancestors == null) {
			this.__ancestors = this.resolveListForKey("ancestors");
		}
		return this.__ancestors;
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.LinkedDocument::Ancestors()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.LinkedDocument::FileIds()" />*/
	fileIds: function () {
		var ids = new $.ig.Array();
		var list = this.resolveListForKey($.ig.DocumentLink.prototype.fileIdsCollectionKey);
		for (var i = 0; i < list.length; i++) {
			var entry = $.ig.CPJSONObject.prototype.createFromJSONObject(list[i]);
			if (entry.containsKey("id")) {
				ids.add(entry.resolveStringForKey("id"));
			}
		}
		return ids;
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.LinkedDocument::FileIds()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.LinkedDocument::Files()" />*/
	files: function () {
		return this.childDocumentIdsForKey($.ig.DocumentLink.prototype.filesCollectionKey);
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.LinkedDocument::Files()" />*/
	,
	/*<BeginMethod Name="Infragistics.CloudFile Infragistics.LinkedDocument::CreateCloudFile(Infragistics.CPJSONObject)" />*/
	createCloudFile: function (json) {
		return new $.ig.GenericCloudFile(0, json);
	}
	/*<EndMethod Name="Infragistics.CloudFile Infragistics.LinkedDocument::CreateCloudFile(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::RegisterFile(Infragistics.CloudFile)" />*/
	registerFile: function (file) {
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::RegisterFile(Infragistics.CloudFile)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::UnregisterFile(System.String)" />*/
	unregisterFile: function (fileId) {
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::UnregisterFile(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::SetLinksToAdd(Infragistics.CPList)" />*/
	setLinksToAdd: function (links) {
		var items = this.resolveListForKey("addLinks");
		for (var i = 0; i < links.length; i++) {
			var link = links[i];
			this.addLink(link);
			items.add(link.jSONObject());
		}
		this.updateAddLinks(items);
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::SetLinksToAdd(Infragistics.CPList)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::UpdateAddLinks(Infragistics.CPList)" />*/
	updateAddLinks: function (links) {
		if (links.length > 0) {
			this.setObjectProperty("addLinks", links);
		} else {
			this.removeFromLedger("addLinks");
			this.removeForKey("addLinks");
		}
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::UpdateAddLinks(Infragistics.CPList)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.LinkedDocument::AddSingleLinkToAdd(Infragistics.DocumentLink)" />*/
	addSingleLinkToAdd: function (link) {
		return this.addSingleLinkToAdd1(link, null);
	}
	/*<EndMethod Name="System.Boolean Infragistics.LinkedDocument::AddSingleLinkToAdd(Infragistics.DocumentLink)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.LinkedDocument::AddSingleLinkToAdd(Infragistics.DocumentLink, Infragistics.BackingStoreActivity)" />*/
	addSingleLinkToAdd1: function (link, activity) {
		var removeLinks = this.getRemoveLinks();
		var newRemoveLinks = new $.ig.Array();
		for (var i = 0; i < removeLinks.length; i++) {
			var linkToRemove = removeLinks[i];
			if (link.identifier() != linkToRemove.identifier()) {
				newRemoveLinks.add(linkToRemove.jSONObject());
			} else {
				this.addLink(link);
				this.removeFromLedger(link.identifier());
			}
		}
		if (newRemoveLinks.length != removeLinks.length) {
			this.updateRemoveLinks(newRemoveLinks);
		} else {
			var existingLink = this.resolveLinkByItemId(link.identifier());
			var adding = existingLink == null;
			var updaing = false;
			if (!adding) {
				if ($.ig.CPStringUtility.prototype.areStringsEqual(existingLink.permission(), link.permission()) == false || existingLink.shared() != link.shared() || $.ig.CPStringUtility.prototype.areStringsEqual(existingLink.role(), link.role()) == false || link.nextLinkId() != null || link.containsKey($.ig.DocumentLink.prototype.stopShareKey) || link.containsKey($.ig.DocumentLink.prototype.startShareKey)) {
					updaing = true;
				}
			}
			if (adding || updaing) {
				var links = new $.ig.Array();
				links.add(link);
				this.setLinksToAdd(links);
				if (adding) {
					this.addingLink(link, activity);
				} else if (updaing) {
					this.updatingLink(link, activity);
				}
				return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.LinkedDocument::AddSingleLinkToAdd(Infragistics.DocumentLink, Infragistics.BackingStoreActivity)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::AddingLink(Infragistics.DocumentLink, Infragistics.BackingStoreActivity)" />*/
	addingLink: function (link, activity) {
		if (activity != null) {
			this.addToLedger(link.identifier(), activity);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::AddingLink(Infragistics.DocumentLink, Infragistics.BackingStoreActivity)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::UpdatingLink(Infragistics.DocumentLink, Infragistics.BackingStoreActivity)" />*/
	updatingLink: function (link, activity) {
		if (activity != null) {
			this.addToLedger(link.identifier(), activity);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::UpdatingLink(Infragistics.DocumentLink, Infragistics.BackingStoreActivity)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::RemovingLink(Infragistics.DocumentLink, Infragistics.BackingStoreActivity)" />*/
	removingLink1: function (link, activity) {
		if (activity != null) {
			this.addToLedger(link.identifier(), activity);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::RemovingLink(Infragistics.DocumentLink, Infragistics.BackingStoreActivity)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::AddUpdateMessage(Infragistics.CPJSONObject, System.Boolean, System.String, System.Boolean, System.Boolean, Infragistics.DocumentLink, System.Boolean)" />*/
	addUpdateMessage: function (messageJson, includeSenderId, whoToNotify, notifyJustMe, notifyParents, ancestorToNotify, sendSoftNotification) {
		if (includeSenderId) {
			messageJson.setValueForKey("sender", this.resolveSenderId());
		}
		var messageVal = messageJson.convertToString();
		var notification = new $.ig.CPJSONObject(1);
		notification.setValueForKey("message", messageVal);
		notification.setValueForKey("notifyJustMe", notifyJustMe);
		notification.setValueForKey("skipParents", !notifyParents);
		notification.setValueForKey("isSoft", sendSoftNotification);
		if (ancestorToNotify != null) {
			var ancestorIdAndTypes = new $.ig.Array();
			ancestorIdAndTypes.add(ancestorToNotify.jSONObject());
			notification.setValueForKey("ancestorsWithType", ancestorIdAndTypes);
		}
		if (whoToNotify != null) {
			notification.setValueForKey("action", whoToNotify);
		}
		var items = this.resolveListForKey("sendNotifications");
		items.add(notification.jSONObject());
		this.setValueForKey("sendNotifications", items);
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::AddUpdateMessage(Infragistics.CPJSONObject, System.Boolean, System.String, System.Boolean, System.Boolean, Infragistics.DocumentLink, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.DocumentLink Infragistics.LinkedDocument::ResolveLinkByItemId(System.String)" />*/
	resolveLinkByItemId: function (linkItemId) {
		this.ensureLinks();
		if ($.ig.NativeDictionaryUtility.prototype.containsKey(this.__linksById, linkItemId)) {
			return this.__linksById.item(linkItemId);
		}
		return this.resolveChildLinkById(linkItemId);
	}
	/*<EndMethod Name="Infragistics.DocumentLink Infragistics.LinkedDocument::ResolveLinkByItemId(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.DocumentLink Infragistics.LinkedDocument::ResolveChildLinkById(System.String)" />*/
	resolveChildLinkById: function (linkId) {
		return null;
	}
	/*<EndMethod Name="Infragistics.DocumentLink Infragistics.LinkedDocument::ResolveChildLinkById(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::AddSingleLinkToRemove(Infragistics.DocumentLink)" />*/
	addSingleLinkToRemove: function (link) {
		this.addSingleLinkToRemove1(link, null);
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::AddSingleLinkToRemove(Infragistics.DocumentLink)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::AddSingleLinkToRemove(Infragistics.DocumentLink, Infragistics.BackingStoreActivity)" />*/
	addSingleLinkToRemove1: function (link, activity) {
		if (link != null) {
			this.ensureLinks();
			var original = this.resolveLinkByItemId(link.identifier());
			if (original != null) {
				link.documentType(original.documentType());
				link.linkType(original.linkType());
				link.permission(original.resolveStringForKey("permission"));
				link.shared(original.shared());
				link.oneWay(original.oneWay());
				var items = this.resolveListForKey("removeLinks");
				this.removeLink(link.identifier(), false);
				this.removingLink(link);
				this.removingLink1(link, activity);
				items.add(link.jSONObject());
				this.updateRemoveLinks(items);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::AddSingleLinkToRemove(Infragistics.DocumentLink, Infragistics.BackingStoreActivity)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::RemoveChildLink(System.String, System.String, Infragistics.BackingStoreActivity)" />*/
	removeChildLink1: function (childId, childDocType, activity) {
		this.removeChildLinkInternal(childId, childDocType, activity, false);
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::RemoveChildLink(System.String, System.String, Infragistics.BackingStoreActivity)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::RemoveOneWayChildLink(System.String, System.String, Infragistics.BackingStoreActivity)" />*/
	removeOneWayChildLink: function (childId, childDocType, activity) {
		this.removeChildLinkInternal(childId, childDocType, activity, true);
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::RemoveOneWayChildLink(System.String, System.String, Infragistics.BackingStoreActivity)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::RemoveChildLink(Infragistics.DocumentLink, Infragistics.BackingStoreActivity)" />*/
	removeChildLink: function (link, activity) {
		var items = this.resolveListForKey("removeLinks");
		this.removingLink1(link, activity);
		this.removingLink(link);
		items.add(link.jSONObject());
		this.updateRemoveLinks(items);
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::RemoveChildLink(Infragistics.DocumentLink, Infragistics.BackingStoreActivity)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::RemoveChildLinkInternal(System.String, System.String, Infragistics.BackingStoreActivity, System.Boolean)" />*/
	removeChildLinkInternal: function (childId, childDocType, activity, oneWay) {
		var link = $.ig.DocumentLink.prototype.createChildDocumentLink(childDocType, childId);
		if (oneWay) {
			link.oneWay(true);
		}
		this.removeChildLink(link, activity);
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::RemoveChildLinkInternal(System.String, System.String, Infragistics.BackingStoreActivity, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::UpdateRemoveLinks(Infragistics.CPList)" />*/
	updateRemoveLinks: function (links) {
		if (links.length > 0) {
			this.setObjectProperty("removeLinks", links);
		} else {
			this.removeFromLedger("removeLinks");
		}
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::UpdateRemoveLinks(Infragistics.CPList)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.LinkedDocument::AddSingleLinkToRemoveById(System.String)" />*/
	addSingleLinkToRemoveById: function (linkItemId) {
		return this.addSingleLinkToRemoveById1(linkItemId, null);
	}
	/*<EndMethod Name="System.Boolean Infragistics.LinkedDocument::AddSingleLinkToRemoveById(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.LinkedDocument::AddSingleLinkToRemoveById(System.String, Infragistics.BackingStoreActivity)" />*/
	addSingleLinkToRemoveById1: function (linkItemId, activity) {
		this.ensureLinks();
		var addLinks = this.getAddLinks();
		var newAddLinks = new $.ig.Array();
		for (var i = 0; i < addLinks.length; i++) {
			var link = addLinks[i];
			if (linkItemId != link.identifier()) {
				newAddLinks.add(link.jSONObject());
			} else {
				this.removeLink(linkItemId, true);
				this.removeFromLedger(linkItemId);
			}
		}
		if (newAddLinks.length != addLinks.length) {
			this.updateAddLinks(newAddLinks);
		} else {
			if ($.ig.NativeDictionaryUtility.prototype.containsKey(this.__linksById, linkItemId)) {
				var link1 = this.__linksById.item(linkItemId);
				this.addSingleLinkToRemove1(link1, activity);
				return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.LinkedDocument::AddSingleLinkToRemoveById(System.String, Infragistics.BackingStoreActivity)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::RemovingLink(Infragistics.DocumentLink)" />*/
	removingLink: function (link) {
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::RemovingLink(Infragistics.DocumentLink)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::CleanupAfterPost()" />*/
	cleanupAfterPost: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::CleanupAfterPost()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::ClearDirtyState()" />*/
	clearDirtyState: function () {
		$.ig.ActivityTrackingBackingStore.prototype.clearDirtyState.call(this);
		this.clearAddRemoveLinks();
		this.removeForKey("sendNotifications");
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::ClearDirtyState()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::ClearAddRemoveLinks()" />*/
	clearAddRemoveLinks: function () {
		this.removeForKey("addLinks");
		this.removeForKey("removeLinks");
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::ClearAddRemoveLinks()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.LinkedDocument::GetLinksForPropertyId(System.String)" />*/
	getLinksForPropertyId: function (prop) {
		var links = new $.ig.Array();
		if (this.containsKey(prop)) {
			var items = this.resolveListForKey(prop);
			for (var i = 0; i < items.length; i++) {
				links.add(new $.ig.DocumentLink(0, $.ig.CPJSONObject.prototype.createFromJSONObject(items[i])));
			}
		}
		return links;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.LinkedDocument::GetLinksForPropertyId(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.LinkedDocument::GetAddLinks()" />*/
	getAddLinks: function () {
		return this.getLinksForPropertyId("addLinks");
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.LinkedDocument::GetAddLinks()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.LinkedDocument::GetRemoveLinks()" />*/
	getRemoveLinks: function () {
		return this.getLinksForPropertyId("removeLinks");
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.LinkedDocument::GetRemoveLinks()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.LinkedDocument::CanBeUpdatedPartially()" />*/
	canBeUpdatedPartially: function () {
		return this.getAddLinks().length == 0 && this.getRemoveLinks().length == 0;
	}
	/*<EndProperty Name="System.Boolean Infragistics.LinkedDocument::CanBeUpdatedPartially()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.LinkedDocument::ResolveSenderId()" />*/
	resolveSenderId: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.LinkedDocument::ResolveSenderId()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.LinkedDocument::Shared()" />*/
	shared: function () {
		return this.resolveBoolForKey("shared");
	}
	/*<EndProperty Name="System.Boolean Infragistics.LinkedDocument::Shared()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::TransferReferences(Infragistics.LinkedDocument)" />*/
	transferReferences: function (newDocument) {
		if (this.__pagedChildDocumentInfos != null) {
			newDocument.__pagedChildDocumentInfos = this.__pagedChildDocumentInfos;
			this.__pagedChildDocumentInfos = null;
		}
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::TransferReferences(Infragistics.LinkedDocument)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocument::EnsureChildDocuments(System.String)" />*/
	ensureChildDocuments: function (key) {
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocument::EnsureChildDocuments(System.String)" />*/
	,
	_cancelSoftNotificationOnAdd: false,
	/*<BeginProperty Name="System.Boolean Infragistics.LinkedDocument::CancelSoftNotificationOnAdd()" />*/
	cancelSoftNotificationOnAdd: function (value) {
		if (arguments.length === 1) {
			this._cancelSoftNotificationOnAdd = value;
			return value;
		} else {
			return this._cancelSoftNotificationOnAdd;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.LinkedDocument::CancelSoftNotificationOnAdd()" />*/
	,
	_ignoreNavigate: false,
	/*<BeginProperty Name="System.Boolean Infragistics.LinkedDocument::IgnoreNavigate()" />*/
	ignoreNavigate: function (value) {
		if (arguments.length === 1) {
			this._ignoreNavigate = value;
			return value;
		} else {
			return this._ignoreNavigate;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.LinkedDocument::IgnoreNavigate()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.LinkedDocument::GetStringsToSearch()" />*/
	getStringsToSearch: function () {
		var list = new $.ig.Array();
		list.add(this.name());
		return list;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.LinkedDocument::GetStringsToSearch()" />*/
	,
	$type: new $.ig.Type('LinkedDocument', $.ig.ActivityTrackingBackingStore.prototype.$type)
}, true);

/*<EndType Name="Infragistics.LinkedDocument" />*/

/*<BeginType Name="Infragistics.CloudFile" />*/

$.ig.util.defType('CloudFile', 'LinkedDocument', {
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::DocumentExtensions()" />*/
	documentExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("doc");
			$ret.add("docm");
			$ret.add("docx");
			$ret.add("dot");
			$ret.add("nws");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::DocumentExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::DocumentMimeTypes()" />*/
	documentMimeTypes: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("application/msword");
			$ret.add("application/vnd.openxmlformats-officedocument.wordprocessingml.document");
			$ret.add("application/vnd.openxmlformats-officedocument.wordprocessingml.template");
			$ret.add("application/vnd.ms-word.document.macroEnabled.12");
			$ret.add("application/vnd.ms-word.template.macroEnabled.12");
			$ret.add("application/vnd.oasis.opendocument.text");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::DocumentMimeTypes()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::GoogleDocMimeTypes()" />*/
	googleDocMimeTypes: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("application/vnd.google-apps.document");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::GoogleDocMimeTypes()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::SpreadsheetExtensions()" />*/
	spreadsheetExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("odc");
			$ret.add("ods");
			$ret.add("xls");
			$ret.add("xlsb");
			$ret.add("xlsm");
			$ret.add("xlsx");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::SpreadsheetExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::SpreadsheetMimeTypes()" />*/
	spreadsheetMimeTypes: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("application/vnd.ms-excel");
			$ret.add("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
			$ret.add("application/vnd.openxmlformats-officedocument.spreadsheetml.template");
			$ret.add("application/vnd.ms-excel.sheet.macroEnabled.12");
			$ret.add("application/vnd.ms-excel.sheet.binary.macroEnabled.12");
			$ret.add("application/vnd.oasis.opendocument.spreadsheet");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::SpreadsheetMimeTypes()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::GoogleSheetMimeTypes()" />*/
	googleSheetMimeTypes: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("application/vnd.google-apps.spreadsheet");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::GoogleSheetMimeTypes()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::PresentationExtensions()" />*/
	presentationExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("odp");
			$ret.add("ppt");
			$ret.add("pptm");
			$ret.add("pptx");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::PresentationExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::PresentationMimeTypes()" />*/
	presentationMimeTypes: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("application/vnd.ms-powepoint");
			$ret.add("application/vnd.openxmlformats-officedocument.presentationml.presentation");
			$ret.add("application/vnd.openxmlformats-officedocument.presentationml.template");
			$ret.add("application/vnd.openxmlformats-officedocument.presentationml.slideshow");
			$ret.add("application/vnd.ms-powerpoint.presentation.macroEnabled.12");
			$ret.add("application/vnd.ms-powerpoint.template.macroEnabled.12");
			$ret.add("application/vnd.ms-powerpoint.slideshow.macroEnabled.12");
			$ret.add("application/vnd.oasis.opendocument.presentation");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::PresentationMimeTypes()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::GoogleSlidesMimeTypes()" />*/
	googleSlidesMimeTypes: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("application/vnd.google-apps.presentation");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::GoogleSlidesMimeTypes()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::PdfExtensions()" />*/
	pdfExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("pdf");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::PdfExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::PdfMimeTypes()" />*/
	pdfMimeTypes: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("application/pdf");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::PdfMimeTypes()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::ImageExtensions()" />*/
	imageExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("png");
			$ret.add("jpg");
			$ret.add("jpeg");
			$ret.add("bmp");
			$ret.add("gif");
			$ret.add("tif");
			$ret.add("tiff");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::ImageExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::ImageMimeTypes()" />*/
	imageMimeTypes: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("image/png");
			$ret.add("image/jpeg");
			$ret.add("image/pjpeg");
			$ret.add("image/bmp");
			$ret.add("image/x-windows-bmp");
			$ret.add("image/gif");
			$ret.add("image/tiff");
			$ret.add("image/x-tiff");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::ImageMimeTypes()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::ZipExtensions()" />*/
	zipExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("zip");
			$ret.add("rar");
			$ret.add("cbr");
			$ret.add("cbz");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::ZipExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::ReportPlusExtensions()" />*/
	reportPlusExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("rplus");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::ReportPlusExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::EmailExtensions()" />*/
	emailExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("eml");
			$ret.add("msg");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::EmailExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::TextFileExtensions()" />*/
	textFileExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("txt");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::TextFileExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::AttachmentExtensions()" />*/
	attachmentExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("?");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::AttachmentExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::VideoExtensions()" />*/
	videoExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("movie");
			$ret.add("mov");
			$ret.add("mpg");
			$ret.add("mpeg");
			$ret.add("mp4");
			$ret.add("avi");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::VideoExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::AudioExtensions()" />*/
	audioExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("audio");
			$ret.add("caf");
			$ret.add("mp3");
			$ret.add("wav");
			$ret.add("aac");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::AudioExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::ASPExtensions()" />*/
	aSPExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("asp");
			$ret.add("aspx");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::ASPExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::HTMLExtensions()" />*/
	hTMLExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("htm");
			$ret.add("html");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::HTMLExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::WikiExtensions()" />*/
	wikiExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("wiki");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::WikiExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::RTFExtensions()" />*/
	rTFExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("rtf");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::RTFExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::RDLExtensions()" />*/
	rDLExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("rdl");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::RDLExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::OneNoteExtensions()" />*/
	oneNoteExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("one");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::OneNoteExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::OneNoteTableOfContentExtensions()" />*/
	oneNoteTableOfContentExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("onetoc");
			$ret.add("onetoc2");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::OneNoteTableOfContentExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::VisioExtensions()" />*/
	visioExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("vdx");
			$ret.add("vsd");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::VisioExtensions()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::InfoPathExtensions()" />*/
	infoPathExtensions: function () {
		return (function () {
			var $ret = new $.ig.Array();
			$ret.add("xsn");
			return $ret;
		}());
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::InfoPathExtensions()" />*/
	,
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
				case 2:
					this.init2.apply(this, arguments);
					break;
			}
			return;
		}
		this.__teamId = null;
		$.ig.LinkedDocument.prototype.init1.call(this, 1);
	},
	init1: function (initNumber, json, providerId) {
		this.__teamId = null;
		$.ig.LinkedDocument.prototype.init.call(this, 0, json);
		this.providerId(providerId);
	},
	init2: function (initNumber, json) {
		this.__teamId = null;
		$.ig.LinkedDocument.prototype.init.call(this, 0, json);
	},
	__teamId: null,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::TeamId()" />*/
	teamId: function () {
		if (this.__teamId == null) {
			var teamIds = this.resolveAllAvailableAncestorTeamIds();
			if (teamIds != null) {
				if (teamIds.length > 0) {
					this.__teamId = teamIds[0];
				}
			}
		}
		return this.__teamId;
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::TeamId()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::ProviderId()" />*/
	providerId: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("providerId", value);
			return value;
		} else {
			return this.resolveStringForKey("providerId");
		}
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::ProviderId()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::PathIdentifier()" />*/
	pathIdentifier: function () {
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::PathIdentifier()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFile::IsFolder()" />*/
	isFolder: function () {
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFile::IsFolder()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFile::CopyEnabled()" />*/
	copyEnabled: function () {
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFile::CopyEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFile::DeleteEnabled()" />*/
	deleteEnabled: function () {
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFile::DeleteEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFile::DownloadEnabled()" />*/
	downloadEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFile::DownloadEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFile::MoveEnabled()" />*/
	moveEnabled: function () {
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFile::MoveEnabled()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.CloudFile::PinEnabled()" />*/
	pinEnabled: function () {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.CloudFile::PinEnabled()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::MimeType()" />*/
	mimeType: function () {
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::MimeType()" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.CloudFile::Size()" />*/
	size: function () {
	}
	/*<EndProperty Name="System.Int64 Infragistics.CloudFile::Size()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPDateTime Infragistics.CloudFile::ModifiedDate()" />*/
	modifiedDate: function () {
	}
	/*<EndProperty Name="Infragistics.CPDateTime Infragistics.CloudFile::ModifiedDate()" />*/
	,
	/*<BeginProperty Name="System.Double Infragistics.CloudFile::ModifiedDateInSeconds()" />*/
	modifiedDateInSeconds: function () {
		if (this.modifiedDate() != null) {
			return this.modifiedDate().timeInSeconds();
		}
		return 0;
	}
	/*<EndProperty Name="System.Double Infragistics.CloudFile::ModifiedDateInSeconds()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFile::IsInTrash()" />*/
	isInTrash: function () {
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFile::IsInTrash()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::Author()" />*/
	author: function () {
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::Author()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::ProviderOwnerName()" />*/
	providerOwnerName: function () {
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::ProviderOwnerName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::ProviderOwnerGivenName()" />*/
	providerOwnerGivenName: function () {
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::ProviderOwnerGivenName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::ProviderOwnerEmail()" />*/
	providerOwnerEmail: function () {
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::ProviderOwnerEmail()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::EmbedUrl()" />*/
	embedUrl: function () {
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::EmbedUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::DownloadUrl()" />*/
	downloadUrl: function () {
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::DownloadUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::OpenUrl()" />*/
	openUrl: function () {
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::OpenUrl()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudFile::ResolveFilePath()" />*/
	resolveFilePath: function () {
		return this.pathIdentifier();
	}
	/*<EndMethod Name="System.String Infragistics.CloudFile::ResolveFilePath()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudFile::ResolveDestinationPathWithFile(Infragistics.CloudFile)" />*/
	resolveDestinationPathWithFile: function (file) {
		var fileComponents = $.ig.NativeStringUtility.prototype.split(file.resolveFilePath(), "/");
		var fileName = fileComponents[fileComponents.length - 1];
		return this.resolveFilePath() + "/" + fileName;
	}
	/*<EndMethod Name="System.String Infragistics.CloudFile::ResolveDestinationPathWithFile(Infragistics.CloudFile)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.CloudFile::IsValidDestination()" />*/
	isValidDestination: function () {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.CloudFile::IsValidDestination()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFile::SupportsFolderSize()" />*/
	supportsFolderSize: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFile::SupportsFolderSize()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::SectionKey()" />*/
	sectionKey: function () {
		if (this.isFolder()) {
			return $.ig.CloudFile.prototype.typeFolder;
		} else {
			return $.ig.CloudFile.prototype.typeFile;
		}
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::SectionKey()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::OriginalType()" />*/
	originalType: function () {
		return this.type();
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::OriginalType()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::Type()" />*/
	type: function () {
		if (this.isFolder()) {
			return $.ig.CloudFile.prototype.typeFolder;
		}
		return $.ig.CloudFile.prototype.getFileType(this.name(), this.mimeType());
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::Type()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudFile::ResolveKind()" />*/
	resolveKind: function () {
		return this.type();
	}
	/*<EndMethod Name="System.String Infragistics.CloudFile::ResolveKind()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudFile::GetFileType(System.String, System.String)" />*/
	getFileType: function (filename, mimeType) {
		var name = filename.toLowerCase();
		var mt = mimeType;
		if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.documentExtensions())) {
			return $.ig.CloudFile.prototype.typeWord;
		} else if ($.ig.NativeStringUtility.prototype.endsWith(name, ".csv") || $.ig.NativeStringUtility.prototype.endsWith(name, ".tsv")) {
			return $.ig.CloudFile.prototype.typeCSV;
		} else if ($.ig.NativeStringUtility.prototype.endsWith(name, ".json")) {
			return $.ig.CloudFile.prototype.typeJson;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.spreadsheetExtensions())) {
			if ((mt != null && mt.length > 0) && $.ig.CloudFile.prototype.mimeTypeInList(mt, $.ig.CloudFile.prototype.googleSheetMimeTypes())) {
				return $.ig.CloudFile.prototype.googleTypeSpreadSheet;
			}
			return $.ig.CloudFile.prototype.typeExcel;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.presentationExtensions())) {
			return $.ig.CloudFile.prototype.typePowerPoint;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.pdfExtensions())) {
			return $.ig.CloudFile.prototype.typePDF;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.reportPlusExtensions())) {
			return $.ig.CloudFile.prototype.typeRPlus;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.imageExtensions())) {
			return $.ig.CloudFile.prototype.typeImage;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.zipExtensions())) {
			return $.ig.CloudFile.prototype.typeZIP;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.infoPathExtensions())) {
			return $.ig.CloudFile.prototype.typeInfoPath;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.visioExtensions())) {
			return $.ig.CloudFile.prototype.typeVisio;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.oneNoteExtensions())) {
			return $.ig.CloudFile.prototype.typeOneNote;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.oneNoteTableOfContentExtensions())) {
			return $.ig.CloudFile.prototype.typeOneNoteTableOfContents;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.rTFExtensions())) {
			return $.ig.CloudFile.prototype.typeRTF;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.rDLExtensions())) {
			return $.ig.CloudFile.prototype.typeRDL;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.wikiExtensions())) {
			return $.ig.CloudFile.prototype.typeWiki;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.hTMLExtensions())) {
			return $.ig.CloudFile.prototype.typeHTML;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.aSPExtensions())) {
			return $.ig.CloudFile.prototype.typeASP;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.audioExtensions())) {
			return $.ig.CloudFile.prototype.typeAudio;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.videoExtensions())) {
			return $.ig.CloudFile.prototype.typeVideo;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.attachmentExtensions())) {
			return $.ig.CloudFile.prototype.typeAttachment;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.textFileExtensions())) {
			return $.ig.CloudFile.prototype.typeTextFile;
		} else if ($.ig.CloudFile.prototype.nameContainExtensionInList(name, $.ig.CloudFile.prototype.emailExtensions())) {
			return $.ig.CloudFile.prototype.typeEmail;
		} else if (mt != null && mt.length > 0) {
			if ($.ig.CloudFile.prototype.mimeTypeInList(mt, $.ig.CloudFile.prototype.googleSheetMimeTypes())) {
				return $.ig.CloudFile.prototype.googleTypeSpreadSheet;
			} else if ($.ig.CloudFile.prototype.mimeTypeInList(mt, $.ig.CloudFile.prototype.googleDocMimeTypes())) {
				return $.ig.CloudFile.prototype.googleTypeDoc;
			} else if ($.ig.CloudFile.prototype.mimeTypeInList(mt, $.ig.CloudFile.prototype.googleSlidesMimeTypes())) {
				return $.ig.CloudFile.prototype.googleTypeSlides;
			} else if ($.ig.CloudFile.prototype.mimeTypeInList(mt, $.ig.CloudFile.prototype.documentMimeTypes())) {
				return $.ig.CloudFile.prototype.typeWord;
			} else if ($.ig.CloudFile.prototype.mimeTypeInList(mt, $.ig.CloudFile.prototype.spreadsheetMimeTypes())) {
				return $.ig.CloudFile.prototype.typeExcel;
			} else if ($.ig.CloudFile.prototype.mimeTypeInList(mt, $.ig.CloudFile.prototype.presentationMimeTypes())) {
				return $.ig.CloudFile.prototype.typePowerPoint;
			} else if ($.ig.CloudFile.prototype.mimeTypeInList(mt, $.ig.CloudFile.prototype.pdfMimeTypes())) {
				return $.ig.CloudFile.prototype.typePDF;
			} else if ($.ig.CloudFile.prototype.mimeTypeInList(mt, $.ig.CloudFile.prototype.imageMimeTypes())) {
				return $.ig.CloudFile.prototype.typeImage;
			}
		}
		return "";
	}
	/*<EndMethod Name="System.String Infragistics.CloudFile::GetFileType(System.String, System.String)" />*/
	,
	_openInAppUrl: null,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::OpenInAppUrl()" />*/
	openInAppUrl: function () {
		return this._openInAppUrl;
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::OpenInAppUrl()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.CloudFile::ProviderType()" />*/
	providerType: function () {
		return $.ig.CloudProviderType.prototype.notSet;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.CloudFile::ProviderType()" />*/
	,
	_resourceVersionIdentifier: null,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::ResourceVersionIdentifier()" />*/
	resourceVersionIdentifier: function () {
		return this._resourceVersionIdentifier;
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::ResourceVersionIdentifier()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.CloudFile::NameContainExtensionInList(System.String, Infragistics.CPList)" />*/
	nameContainExtensionInList: function (name, list) {
		var count = list.length;
		for (var i = 0; i < count; i++) {
			var ext = "." + list[i];
			if ($.ig.NativeStringUtility.prototype.endsWith(name, ext)) {
				return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.CloudFile::NameContainExtensionInList(System.String, Infragistics.CPList)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.CloudFile::MimeTypeInList(System.String, Infragistics.CPList)" />*/
	mimeTypeInList: function (name, list) {
		var count = list.length;
		for (var i = 0; i < count; i++) {
			var mimeType = list[i];
			if (name.equals(mimeType)) {
				return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.CloudFile::MimeTypeInList(System.String, Infragistics.CPList)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudFile::GetExportMimeType(System.String)" />*/
	getExportMimeType: function (mimeType) {
		if (mimeType == null) {
			return null;
		}
		if ($.ig.CloudFile.prototype.mimeTypeInList(mimeType, $.ig.CloudFile.prototype.googleDocMimeTypes())) {
			return "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
		} else if ($.ig.CloudFile.prototype.mimeTypeInList(mimeType, $.ig.CloudFile.prototype.googleSheetMimeTypes())) {
			return "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
		} else if ($.ig.CloudFile.prototype.mimeTypeInList(mimeType, $.ig.CloudFile.prototype.googleSlidesMimeTypes())) {
			return "application/vnd.openxmlformats-officedocument.presentationml.presentation";
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.CloudFile::GetExportMimeType(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudFile::ExtractPathIdentifierComponent(System.String, System.Int32)" />*/
	extractPathIdentifierComponent: function (pathIdentifier, componentIndex) {
		if (pathIdentifier == null) {
			return null;
		} else if (!$.ig.NativeStringUtility.prototype.contains(pathIdentifier, $.ig.CloudFile.prototype.pATH_SEPARATOR)) {
			return pathIdentifier;
		}
		var parts = $.ig.NativeStringUtility.prototype.split(pathIdentifier, $.ig.CloudFile.prototype.pATH_SEPARATOR);
		if (parts.length != 2) {
			return null;
		}
		return parts[componentIndex];
	}
	/*<EndMethod Name="System.String Infragistics.CloudFile::ExtractPathIdentifierComponent(System.String, System.Int32)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudFile::GetMSOfficeUriSchemeName(Infragistics.CloudFile)" />*/
	getMSOfficeUriSchemeName: function (cloudFile) {
		if ($.ig.CloudProviderTypeUtility.prototype.isGoogle(cloudFile)) {
			if ($.ig.CloudFile.prototype.typeExcel.equals(cloudFile.type()) || $.ig.CloudFile.prototype.googleTypeSpreadSheet.equals(cloudFile.type())) {
				return "googlesheets";
			} else if ($.ig.CloudFile.prototype.typeWord.equals(cloudFile.type()) || $.ig.CloudFile.prototype.googleTypeDoc.equals(cloudFile.type())) {
				return "googledocs";
			} else if ($.ig.CloudFile.prototype.typePowerPoint.equals(cloudFile.type()) || $.ig.CloudFile.prototype.googleTypeSlides.equals(cloudFile.type())) {
				return "googleslides";
			}
		} else {
			if ($.ig.CloudFile.prototype.typeExcel.equals(cloudFile.type())) {
				return "ms-excel";
			} else if ($.ig.CloudFile.prototype.typeWord.equals(cloudFile.type())) {
				return "ms-word";
			} else if ($.ig.CloudFile.prototype.typePowerPoint.equals(cloudFile.type())) {
				return "ms-powerpoint";
			}
		}
		if ($.ig.CloudFile.prototype.typeOneNote.equals(cloudFile.type()) || $.ig.CloudFile.prototype.typeOneNoteTableOfContents.equals(cloudFile.type())) {
			return "onenote";
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.CloudFile::GetMSOfficeUriSchemeName(Infragistics.CloudFile)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudFile::GetMSOfficeUriSchemaCommands(Infragistics.CloudFile, System.Boolean)" />*/
	getMSOfficeUriSchemaCommands: function (cloudFile, openForEdit) {
		if (!$.ig.CloudFile.prototype.typeOneNote.equals(cloudFile.type()) && !$.ig.CloudFile.prototype.typeOneNoteTableOfContents.equals(cloudFile.type())) {
			if (openForEdit) {
				return "ofe|u|";
			} else {
				return "ofv|u|";
			}
		}
		return "";
	}
	/*<EndMethod Name="System.String Infragistics.CloudFile::GetMSOfficeUriSchemaCommands(Infragistics.CloudFile, System.Boolean)" />*/
	,
	_sharedEditLink: null,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::SharedEditLink()" />*/
	sharedEditLink: function (value) {
		if (arguments.length === 1) {
			this._sharedEditLink = value;
			return value;
		} else {
			return this._sharedEditLink;
		}
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::SharedEditLink()" />*/
	,
	_sharedViewLink: null,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::SharedViewLink()" />*/
	sharedViewLink: function (value) {
		if (arguments.length === 1) {
			this._sharedViewLink = value;
			return value;
		} else {
			return this._sharedViewLink;
		}
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::SharedViewLink()" />*/
	,
	_viewProperties: null,
	/*<BeginProperty Name="Infragistics.ContentProperties Infragistics.CloudFile::ViewProperties()" />*/
	viewProperties: function () {
		return this._viewProperties;
	}
	/*<EndProperty Name="Infragistics.ContentProperties Infragistics.CloudFile::ViewProperties()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFile::SupportsViewProperties()" />*/
	supportsViewProperties: function () {
		if (this.sectionKey() != null && (this.sectionKey().equals($.ig.CloudFile.prototype.typeFile) || this.sectionKey().equals($.ig.CloudFile.prototype.typeFolder))) {
			return true;
		}
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFile::SupportsViewProperties()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.CloudFile::SetCloudFileOwnerInfo(Infragistics.CPJSONObject)" />*/
	setCloudFileOwnerInfo: function (userInfo) {
	}
	/*<EndMethod Name="System.Void Infragistics.CloudFile::SetCloudFileOwnerInfo(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudFile::RetrieveEmbedUrl()" />*/
	retrieveEmbedUrl: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.CloudFile::RetrieveEmbedUrl()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFile::CanTrack()" />*/
	canTrack: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFile::CanTrack()" />*/
	,
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.CloudFile::CreateNewBackingStoreObject(Infragistics.CPJSONObject)" />*/
	createNewBackingStoreObject: function (json) {
		return null;
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.CloudFile::CreateNewBackingStoreObject(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.CloudFile::CreateNewBackingStoreObjectWithId(System.String)" />*/
	createNewBackingStoreObjectWithId: function (identifier) {
		return null;
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.CloudFile::CreateNewBackingStoreObjectWithId(System.String)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFile::SupportsNamedPaths()" />*/
	supportsNamedPaths: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFile::SupportsNamedPaths()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.CloudFile::SetIsResendingNotification(System.Boolean)" />*/
	setIsResendingNotification: function (value) {
		this.setBoolProperty("n_resend", value, null);
	}
	/*<EndMethod Name="System.Void Infragistics.CloudFile::SetIsResendingNotification(System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudFile::ChildDocumentIdsForKey(System.String)" />*/
	childDocumentIdsForKey: function (key) {
		return null;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudFile::ChildDocumentIdsForKey(System.String)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFile::Shared()" />*/
	shared: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFile::Shared()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudFile::ResolvedAlternateIdentifer()" />*/
	resolvedAlternateIdentifer: function () {
		return this.pathIdentifier();
	}
	/*<EndMethod Name="System.String Infragistics.CloudFile::ResolvedAlternateIdentifer()" />*/
	,
	_locationPath: null,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::LocationPath()" />*/
	locationPath: function (value) {
		if (arguments.length === 1) {
			this._locationPath = value;
			return value;
		} else {
			return this._locationPath;
		}
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::LocationPath()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudFile::PermissionsType()" />*/
	permissionsType: function (value) {
		if (arguments.length === 1) {
			this.setStringProperty("permissionsType", value, null);
			return value;
		} else {
			return this.resolveStringForKey("permissionsType");
		}
	}
	/*<EndProperty Name="System.String Infragistics.CloudFile::PermissionsType()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.CloudFile::PreApprovedMemberIds()" />*/
	preApprovedMemberIds: function (value) {
		if (arguments.length === 1) {
			this.setListOfStringsProperty("preApprovedMemberIds", value, null);
			return value;
		} else {
			var members = this.resolveListForKey("preApprovedMemberIds");
			if (members == null) {
				members = new $.ig.Array();
			}
			return members;
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.CloudFile::PreApprovedMemberIds()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.CloudFile::OldPendingMemberIds()" />*/
	oldPendingMemberIds: function (value) {
		if (arguments.length === 1) {
			this.setListOfStringsProperty($.ig.CloudFile.prototype._oldPendingMemberIdsKey, value, null);
			return value;
		} else {
			var members = this.resolveListForKey($.ig.CloudFile.prototype._oldPendingMemberIdsKey);
			if (members == null) {
				members = new $.ig.Array();
			}
			return members;
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.CloudFile::OldPendingMemberIds()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.CloudFile::HasPendingMember(System.String)" />*/
	hasPendingMember: function (memberId) {
		var item = this.resolveChildListItembyId1($.ig.CloudFile.prototype._pendingMembersKey, memberId, true);
		if (item != null && item.identifier() == memberId) {
			return true;
		}
		var oldPendingMemberIds = this.oldPendingMemberIds();
		if (oldPendingMemberIds != null && oldPendingMemberIds.contains(memberId)) {
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.CloudFile::HasPendingMember(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.CloudFile::DeletePendingMember(System.String)" />*/
	deletePendingMember: function (memberId) {
		var item = this.resolveChildListItembyId1($.ig.CloudFile.prototype._pendingMembersKey, memberId, true);
		if (item != null && item.identifier() == memberId) {
			this.removeChildItemForProperty($.ig.CloudFile.prototype._pendingMembersKey, item, true, null);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.CloudFile::DeletePendingMember(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.CloudFile::CreateChildItemForProperty(System.String, Infragistics.CPJSONObject)" />*/
	createChildItemForProperty: function (property, store) {
		if (property == $.ig.CloudFile.prototype._pendingMembersKey) {
			return new $.ig.CloudFilePermissions(1, store);
		}
		return $.ig.LinkedDocument.prototype.createChildItemForProperty.call(this, property, store);
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.CloudFile::CreateChildItemForProperty(System.String, Infragistics.CPJSONObject)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFile::SupportsFilePermissions()" />*/
	supportsFilePermissions: function () {
		if (this.providerType() == ($.ig.CloudProviderType.prototype.sharePoint)) {
			return $.ig.SharePointFile.prototype.getSupportsFilePermissions(this);
		}
		if (this.sectionKey() != null && (this.sectionKey().equals($.ig.CloudFile.prototype.typeFile))) {
			return true;
		}
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFile::SupportsFilePermissions()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFile::SupportsPublicPermissions()" />*/
	supportsPublicPermissions: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFile::SupportsPublicPermissions()" />*/
	,
	$type: new $.ig.Type('CloudFile', $.ig.LinkedDocument.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CloudFile" />*/

/*<BeginType Name="Infragistics.BoxFile" />*/

$.ig.util.defType('BoxFile', 'CloudFile', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.CloudFile.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json, providerId) {
		$.ig.CloudFile.prototype.init1.call(this, 1, json, providerId);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.BoxFile::IsFolder()" />*/
	isFolder: function () {
		var val = this.resolveStringForKey("type");
		return val != null && val.equals("folder");
	}
	/*<EndProperty Name="System.Boolean Infragistics.BoxFile::IsFolder()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.BoxFile::CopyEnabled()" />*/
	copyEnabled: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.BoxFile::CopyEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.BoxFile::DeleteEnabled()" />*/
	deleteEnabled: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.BoxFile::DeleteEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.BoxFile::DownloadEnabled()" />*/
	downloadEnabled: function () {
		return !this.isFolder();
	}
	/*<EndProperty Name="System.Boolean Infragistics.BoxFile::DownloadEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.BoxFile::MoveEnabled()" />*/
	moveEnabled: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.BoxFile::MoveEnabled()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.BoxFile::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			$.ig.ActivityTrackingBackingStore.prototype.name.call(this, value);
			return value;
		} else {
			return this.resolveStringForKey("name");
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxFile::Name()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxFile::ConvertToNewFormat(System.String)" />*/
	convertToNewFormat: function (pathIdentifier) {
		if ($.ig.NativeStringUtility.prototype.contains(pathIdentifier, $.ig.CloudFile.prototype.pATH_SEPARATOR)) {
			return pathIdentifier;
		} else {
			return "file" + $.ig.CloudFile.prototype.pATH_SEPARATOR + pathIdentifier;
		}
	}
	/*<EndMethod Name="System.String Infragistics.BoxFile::ConvertToNewFormat(System.String)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.BoxFile::PathIdentifier()" />*/
	pathIdentifier: function () {
		var path = this.resolveStringForKey("id");
		if (path != null) {
			var type;
			if (this.isFolder()) {
				type = "folder";
			} else {
				type = "file";
			}
			return type + $.ig.CloudFile.prototype.pATH_SEPARATOR + path;
		}
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.BoxFile::PathIdentifier()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxFile::ExtractType(System.String)" />*/
	extractType: function (pathIdentifier) {
		return $.ig.CloudFile.prototype.extractPathIdentifierComponent(pathIdentifier, 0);
	}
	/*<EndMethod Name="System.String Infragistics.BoxFile::ExtractType(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxFile::ExtractItemId(System.String)" />*/
	extractItemId: function (pathIdentifier) {
		return $.ig.CloudFile.prototype.extractPathIdentifierComponent(pathIdentifier, 1);
	}
	/*<EndMethod Name="System.String Infragistics.BoxFile::ExtractItemId(System.String)" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.BoxFile::Size()" />*/
	size: function () {
		return this.resolveLongForKey("size");
	}
	/*<EndProperty Name="System.Int64 Infragistics.BoxFile::Size()" />*/
	,
	__mDate: null,
	__mdateChecked: false,
	/*<BeginProperty Name="Infragistics.CPDateTime Infragistics.BoxFile::ModifiedDate()" />*/
	modifiedDate: function () {
		if (!this.__mdateChecked) {
			this.__mdateChecked = true;
			var dateStr = this.resolveStringForKey("modified_at");
			if (dateStr == null) {
				this.__mDate = null;
			} else {
				this.__mDate = $.ig.CPDateTime.prototype.createFromUTCTimeString(dateStr, $.ig.CPDateTime.prototype.getRFC3339FormatStringWithTimezone());
			}
		}
		return this.__mDate;
	}
	/*<EndProperty Name="Infragistics.CPDateTime Infragistics.BoxFile::ModifiedDate()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.BoxFile::MimeType()" />*/
	mimeType: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.BoxFile::MimeType()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.BoxFile::IsInTrash()" />*/
	isInTrash: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.BoxFile::IsInTrash()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.BoxFile::EmbedUrl()" />*/
	embedUrl: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.BoxFile::EmbedUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.BoxFile::DownloadUrl()" />*/
	downloadUrl: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.BoxFile::DownloadUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.BoxFile::OpenUrl()" />*/
	openUrl: function () {
		return "https://app.box.com/file/" + this.resolveStringForKey("id");
	}
	/*<EndProperty Name="System.String Infragistics.BoxFile::OpenUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.BoxFile::Author()" />*/
	author: function () {
		var owner = this.ownedBy();
		if (owner == null) {
			return null;
		}
		return owner.resolveStringForKey("name");
	}
	/*<EndProperty Name="System.String Infragistics.BoxFile::Author()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.BoxFile::ProviderOwnerName()" />*/
	providerOwnerName: function () {
		return this.resolveStringForKey("ProviderOwnerName");
	}
	/*<EndProperty Name="System.String Infragistics.BoxFile::ProviderOwnerName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.BoxFile::ProviderOwnerGivenName()" />*/
	providerOwnerGivenName: function () {
		return this.resolveStringForKey("ProviderOwnerGivenName");
	}
	/*<EndProperty Name="System.String Infragistics.BoxFile::ProviderOwnerGivenName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.BoxFile::ProviderOwnerEmail()" />*/
	providerOwnerEmail: function () {
		return this.resolveStringForKey("ProviderOwnerEmail");
	}
	/*<EndProperty Name="System.String Infragistics.BoxFile::ProviderOwnerEmail()" />*/
	,
	__ownedBy: null,
	/*<BeginProperty Name="Infragistics.CPJSONObject Infragistics.BoxFile::OwnedBy()" />*/
	ownedBy: function () {
		if (this.__ownedBy == null) {
			this.__ownedBy = this.resolveJSONForKey("owned_by");
		}
		return this.__ownedBy;
	}
	/*<EndProperty Name="Infragistics.CPJSONObject Infragistics.BoxFile::OwnedBy()" />*/
	,
	__ownerId: null,
	/*<BeginProperty Name="System.String Infragistics.BoxFile::OwnerId()" />*/
	ownerId: function () {
		if (this.__ownerId == null) {
			this.__ownerId = this.ownedBy().resolveStringForKey("id");
		}
		return this.__ownerId;
	}
	/*<EndProperty Name="System.String Infragistics.BoxFile::OwnerId()" />*/
	,
	__parentId: null,
	/*<BeginProperty Name="System.String Infragistics.BoxFile::ParentId()" />*/
	parentId: function () {
		if (this.__parentId == null) {
			var parent = this.resolveJSONForKey("parent");
			if (parent == null) {
				return null;
			}
			this.__parentId = parent.resolveStringForKey("id");
		}
		return this.__parentId;
	}
	/*<EndProperty Name="System.String Infragistics.BoxFile::ParentId()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxFile::ResolveFilePath()" />*/
	resolveFilePath: function () {
		return this.isFolder() ? "folder" : null;
	}
	/*<EndMethod Name="System.String Infragistics.BoxFile::ResolveFilePath()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxFile::ResolveDestinationPathWithFile(Infragistics.CloudFile)" />*/
	resolveDestinationPathWithFile: function (file) {
		return this.pathIdentifier();
	}
	/*<EndMethod Name="System.String Infragistics.BoxFile::ResolveDestinationPathWithFile(Infragistics.CloudFile)" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.BoxFile::ProviderType()" />*/
	providerType: function () {
		return $.ig.CloudProviderType.prototype.box;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.BoxFile::ProviderType()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.BoxFile::ResourceVersionIdentifier()" />*/
	resourceVersionIdentifier: function () {
		return this.resolveStringForKey("etag");
	}
	/*<EndProperty Name="System.String Infragistics.BoxFile::ResourceVersionIdentifier()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.BoxFile::OpenInAppUrl()" />*/
	openInAppUrl: function () {
		return $.ig.BoxFile.prototype.encodeInAppUrl(this);
	}
	/*<EndProperty Name="System.String Infragistics.BoxFile::OpenInAppUrl()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.BoxFile::EncodeInAppUrl(Infragistics.CloudFile)" />*/
	encodeInAppUrl: function (file) {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.BoxFile::EncodeInAppUrl(Infragistics.CloudFile)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.BoxFile::SharedEditLink()" />*/
	sharedEditLink: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("sharedEditLink", value);
			return value;
		} else {
			return this.resolveStringForKey("sharedEditLink");
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxFile::SharedEditLink()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.BoxFile::SharedViewLink()" />*/
	sharedViewLink: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("sharedViewLink", value);
			return value;
		} else {
			return this.resolveStringForKey("sharedViewLink");
		}
	}
	/*<EndProperty Name="System.String Infragistics.BoxFile::SharedViewLink()" />*/
	,
	/*<BeginProperty Name="Infragistics.ContentProperties Infragistics.BoxFile::ViewProperties()" />*/
	viewProperties: function () {
		return $.ig.BoxFile.prototype.getViewProperties(this);
	}
	/*<EndProperty Name="Infragistics.ContentProperties Infragistics.BoxFile::ViewProperties()" />*/
	,
	/*<BeginMethod Name="Infragistics.ContentProperties Infragistics.BoxFile::GetViewProperties(Infragistics.CloudFile)" />*/
	getViewProperties: function (cloudFile) {
		var properties = new $.ig.ContentProperties();
		if (cloudFile.author() != null) {
			properties.owner(cloudFile.author());
		}
		if (cloudFile.isFolder()) {
			properties.contentType($.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.folder));
		} else {
			properties.contentType(cloudFile.type());
		}
		var ownerName = cloudFile.providerOwnerName();
		var ownerEmail = cloudFile.providerOwnerEmail();
		properties.contentLocation($.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.box) + (ownerName == null ? " " : "\n" + ownerName) + (ownerEmail == null ? " " : "\n" + ownerEmail));
		var filePath = "";
		var pathCollection = cloudFile.resolveListForKeyPath((function () {
			var $ret = new $.ig.Array();
			$ret.add("path_collection");
			$ret.add("entries");
			return $ret;
		}()));
		if (pathCollection != null) {
			for (var i = 0; i < pathCollection.length; i++) {
				var pathObject = $.ig.CPJSONObject.prototype.createFromJSONObject(pathCollection[i]);
				if (pathObject.resolveIntegerForKey("id") != 0) {
					filePath = filePath + "/" + pathObject.resolveStringForKey("name");
				}
			}
		}
		if (filePath == "" || filePath == null) {
			filePath = (cloudFile.providerOwnerGivenName() == null ? "" : cloudFile.providerOwnerGivenName() + "'s ") + $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.boxAccount) + "/";
		} else {
			filePath = (cloudFile.providerOwnerGivenName() == null ? "" : cloudFile.providerOwnerGivenName() + "'s ") + $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.boxAccount) + filePath;
		}
		properties.locationPath(filePath);
		return properties;
	}
	/*<EndMethod Name="Infragistics.ContentProperties Infragistics.BoxFile::GetViewProperties(Infragistics.CloudFile)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.BoxFile::SetCloudFileOwnerInfo(Infragistics.CPJSONObject)" />*/
	setCloudFileOwnerInfo: function (userInfo) {
		$.ig.BoxFile.prototype.setOwnerInfo(this, userInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.BoxFile::SetCloudFileOwnerInfo(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.BoxFile::SetOwnerInfo(Infragistics.CloudFile, Infragistics.CPJSONObject)" />*/
	setOwnerInfo: function (cloudFile, userInfo) {
		cloudFile.setValueForKey("ProviderOwnerName", userInfo.resolveStringForKey("name"));
		cloudFile.setValueForKey("ProviderOwnerGivenName", userInfo.resolveStringForKey("name"));
		cloudFile.setValueForKey("ProviderOwnerEmail", userInfo.resolveStringForKey("login"));
	}
	/*<EndMethod Name="System.Void Infragistics.BoxFile::SetOwnerInfo(Infragistics.CloudFile, Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('BoxFile', $.ig.CloudFile.prototype.$type)
}, true);

/*<EndType Name="Infragistics.BoxFile" />*/

/*<BeginType Name="Infragistics.CloudError" />*/

$.ig.util.defType('CloudError', 'Object', {
	_errorCode: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.CloudError::ErrorCode()" />*/
	errorCode: function (value) {
		if (arguments.length === 1) {
			this._errorCode = value;
			return value;
		} else {
			return this._errorCode;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.CloudError::ErrorCode()" />*/
	,
	_errorMessage: null,
	/*<BeginProperty Name="System.String Infragistics.CloudError::ErrorMessage()" />*/
	errorMessage: function (value) {
		if (arguments.length === 1) {
			this._errorMessage = value;
			return value;
		} else {
			return this._errorMessage;
		}
	}
	/*<EndProperty Name="System.String Infragistics.CloudError::ErrorMessage()" />*/
	,
	_nativeError: null,
	/*<BeginProperty Name="System.Object Infragistics.CloudError::NativeError()" />*/
	nativeError: function (value) {
		if (arguments.length === 1) {
			this._nativeError = value;
			return value;
		} else {
			return this._nativeError;
		}
	}
	/*<EndProperty Name="System.Object Infragistics.CloudError::NativeError()" />*/
	,
	_responseData: null,
	/*<BeginProperty Name="System.Object Infragistics.CloudError::ResponseData()" />*/
	responseData: function (value) {
		if (arguments.length === 1) {
			this._responseData = value;
			return value;
		} else {
			return this._responseData;
		}
	}
	/*<EndProperty Name="System.Object Infragistics.CloudError::ResponseData()" />*/
	,
	_errorType: 0,
	/*<BeginProperty Name="Infragistics.CloudErrorType Infragistics.CloudError::ErrorType()" />*/
	errorType: function (value) {
		if (arguments.length === 1) {
			this._errorType = value;
			return value;
		} else {
			return this._errorType;
		}
	}
	/*<EndProperty Name="Infragistics.CloudErrorType Infragistics.CloudError::ErrorType()" />*/
	,
	_additionalInfo: null,
	/*<BeginProperty Name="Infragistics.CPDictionary Infragistics.CloudError::AdditionalInfo()" />*/
	additionalInfo: function (value) {
		if (arguments.length === 1) {
			this._additionalInfo = value;
			return value;
		} else {
			return this._additionalInfo;
		}
	}
	/*<EndProperty Name="Infragistics.CPDictionary Infragistics.CloudError::AdditionalInfo()" />*/
	,
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.Object.prototype.init.call(this);
		this.errorType($.ig.CloudErrorType.prototype.noType);
	},
	init1: function (initNumber, errorMessage, nativeError) {
		$.ig.Object.prototype.init.call(this);
		this.errorMessage(errorMessage);
		this.nativeError(nativeError);
		this.errorType($.ig.CloudErrorType.prototype.noType);
	},
	/*<BeginMethod Name="System.String Infragistics.CloudError::ToString()" />*/
	toString: function () {
		var ecode;
		ecode = this.errorCode();
		var msg = "Code " + ecode + ": " + (this.errorMessage() != null ? this.errorMessage() : "<no message>");
		if (this.nativeError() != null) {
			msg = msg + "\n" + $.ig.NativeStringUtility.prototype.nativeErrorToString(this.nativeError());
		}
		return msg;
	}
	/*<EndMethod Name="System.String Infragistics.CloudError::ToString()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.CloudError::AddAdditionalInfo(System.String, System.String)" />*/
	addAdditionalInfo: function (key, info) {
		if (this.additionalInfo() == null) {
			this.additionalInfo(new $.ig.Dictionary(0));
		}
		this.additionalInfo().item(key, info);
	}
	/*<EndMethod Name="System.Void Infragistics.CloudError::AddAdditionalInfo(System.String, System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudError::GetAdditionalInfo(System.String)" />*/
	getAdditionalInfo: function (key) {
		return this.additionalInfo() != null ? this.additionalInfo().get(key) : null;
	}
	/*<EndMethod Name="System.String Infragistics.CloudError::GetAdditionalInfo(System.String)" />*/
	,
	$type: new $.ig.Type('CloudError', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CloudError" />*/

/*<BeginType Name="Infragistics.CloudFileMemberPermissions" />*/

$.ig.util.defType('CloudFileMemberPermissions', 'Object', {
	__email: null,
	__name: null,
	__userId: null,
	__permissionKey: null,
	__isOwner: false,
	__isEditor: false,
	__isViewer: false,
	__isExternal: false,
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.Object.prototype.init.call(this);
	},
	init1: function (initNumber, email, name, userId, removePermissionKey, isOwner, isEditor, isViewer, isExternal) {
		$.ig.Object.prototype.init.call(this);
		this.__email = email;
		this.__name = name;
		this.__userId = userId;
		this.__isExternal = isExternal;
		this.updatePermissions(removePermissionKey, isOwner, isEditor, isViewer);
	},
	/*<BeginMethod Name="System.Void Infragistics.CloudFileMemberPermissions::UpdatePermissions(System.String, System.Boolean, System.Boolean, System.Boolean)" />*/
	updatePermissions: function (removePermissionKey, isOwner, isEditor, isViewer) {
		if (isOwner) {
			this.__isOwner = isOwner;
			this.__isEditor = true;
			this.__isViewer = true;
		} else if (isEditor) {
			this.__isEditor = true;
			this.__isViewer = false;
		} else if (isViewer) {
			this.__isViewer = true;
		}
		this.__permissionKey = removePermissionKey;
	}
	/*<EndMethod Name="System.Void Infragistics.CloudFileMemberPermissions::UpdatePermissions(System.String, System.Boolean, System.Boolean, System.Boolean)" />*/
	,
	_identifier: null,
	/*<BeginProperty Name="System.String Infragistics.CloudFileMemberPermissions::Identifier()" />*/
	identifier: function (value) {
		if (arguments.length === 1) {
			this._identifier = value;
			return value;
		} else {
			return this._identifier;
		}
	}
	/*<EndProperty Name="System.String Infragistics.CloudFileMemberPermissions::Identifier()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudFileMemberPermissions::Email()" />*/
	email: function () {
		return this.__email;
	}
	/*<EndProperty Name="System.String Infragistics.CloudFileMemberPermissions::Email()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudFileMemberPermissions::Name()" />*/
	name: function () {
		return this.__name;
	}
	/*<EndProperty Name="System.String Infragistics.CloudFileMemberPermissions::Name()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudFileMemberPermissions::UserId()" />*/
	userId: function () {
		return this.__userId;
	}
	/*<EndProperty Name="System.String Infragistics.CloudFileMemberPermissions::UserId()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFileMemberPermissions::IsExternal()" />*/
	isExternal: function () {
		return this.__isExternal;
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFileMemberPermissions::IsExternal()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudFileMemberPermissions::PermissionKey()" />*/
	permissionKey: function () {
		return this.__permissionKey;
	}
	/*<EndProperty Name="System.String Infragistics.CloudFileMemberPermissions::PermissionKey()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFileMemberPermissions::IsOwner()" />*/
	isOwner: function () {
		return this.__isOwner;
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFileMemberPermissions::IsOwner()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFileMemberPermissions::IsEditor()" />*/
	isEditor: function () {
		return this.__isEditor;
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFileMemberPermissions::IsEditor()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudFileMemberPermissions::IsViewer()" />*/
	isViewer: function () {
		return this.__isViewer;
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudFileMemberPermissions::IsViewer()" />*/
	,
	$type: new $.ig.Type('CloudFileMemberPermissions', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CloudFileMemberPermissions" />*/

/*<BeginType Name="Infragistics.CloudOrganization" />*/

$.ig.util.defType('CloudOrganization', 'BackingStoreObjectBase', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.BackingStoreObjectBase.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json) {
		$.ig.BackingStoreObjectBase.prototype.init1.call(this, 1, json);
	},
	/*<BeginProperty Name="System.String Infragistics.CloudOrganization::Identifier()" />*/
	identifier: function () {
	}
	/*<EndProperty Name="System.String Infragistics.CloudOrganization::Identifier()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudOrganization::Name()" />*/
	name: function () {
	}
	/*<EndProperty Name="System.String Infragistics.CloudOrganization::Name()" />*/
	,
	$type: new $.ig.Type('CloudOrganization', $.ig.BackingStoreObjectBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CloudOrganization" />*/

/*<BeginType Name="Infragistics.MicrosoftOrganization" />*/

$.ig.util.defType('MicrosoftOrganization', 'CloudOrganization', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.CloudOrganization.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json) {
		$.ig.CloudOrganization.prototype.init1.call(this, 1, json);
	},
	/*<BeginProperty Name="System.String Infragistics.MicrosoftOrganization::Identifier()" />*/
	identifier: function () {
		return this.resolveStringForKey("id");
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftOrganization::Identifier()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftOrganization::Name()" />*/
	name: function () {
		return this.resolveStringForKey("displayName");
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftOrganization::Name()" />*/
	,
	$type: new $.ig.Type('MicrosoftOrganization', $.ig.CloudOrganization.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftOrganization" />*/

/*<BeginType Name="Infragistics.GoogleOrganization" />*/

$.ig.util.defType('GoogleOrganization', 'CloudOrganization', {
	__identifier: null,
	__name: null,
	init: function (hostedDomain) {
		$.ig.CloudOrganization.prototype.init.call(this, 0);
		this.__identifier = hostedDomain;
		this.__name = hostedDomain;
	},
	/*<BeginProperty Name="System.String Infragistics.GoogleOrganization::Identifier()" />*/
	identifier: function () {
		return this.__identifier;
	}
	/*<EndProperty Name="System.String Infragistics.GoogleOrganization::Identifier()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleOrganization::Name()" />*/
	name: function () {
		return this.__name;
	}
	/*<EndProperty Name="System.String Infragistics.GoogleOrganization::Name()" />*/
	,
	$type: new $.ig.Type('GoogleOrganization', $.ig.CloudOrganization.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleOrganization" />*/

/*<BeginType Name="Infragistics.CloudProviderTypeUtility" />*/

$.ig.util.defType('CloudProviderTypeUtility', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.Int32 Infragistics.CloudProviderTypeUtility::ConvertTypeToInt(Infragistics.CloudProviderType)" />*/
	convertTypeToInt: function (type) {
		if (type == $.ig.CloudProviderType.prototype.notSet) {
			return 0;
		} else if (type == $.ig.CloudProviderType.prototype.microsoft) {
			return 1;
		} else if (type == $.ig.CloudProviderType.prototype.google) {
			return 2;
		} else if (type == $.ig.CloudProviderType.prototype.box) {
			return 3;
		} else if (type == $.ig.CloudProviderType.prototype.dropbox) {
			return 4;
		} else if (type == $.ig.CloudProviderType.prototype.sharePoint) {
			return 5;
		} else if (type == $.ig.CloudProviderType.prototype.infragistics) {
			return 6;
		} else if (type == $.ig.CloudProviderType.prototype.googleAnalytics) {
			return 7;
		} else if (type == $.ig.CloudProviderType.prototype.microsoftProvider) {
			return 8;
		} else if (type == $.ig.CloudProviderType.prototype.googleProvider) {
			return 9;
		} else if (type == $.ig.CloudProviderType.prototype.facebook) {
			return 10;
		} else if (type == $.ig.CloudProviderType.prototype.reportPlus) {
			return 11;
		} else if (type == $.ig.CloudProviderType.prototype.windows) {
			return 12;
		} else if (type == $.ig.CloudProviderType.prototype.salesForce) {
			return 13;
		} else if (type == $.ig.CloudProviderType.prototype.local) {
			return 14;
		} else if (type == $.ig.CloudProviderType.prototype.appFigures) {
			return 15;
		} else if (type == $.ig.CloudProviderType.prototype.restApi) {
			return 16;
		} else if (type == $.ig.CloudProviderType.prototype.demo) {
			return 17;
		} else if (type == $.ig.CloudProviderType.prototype.bigQuery) {
			return 18;
		} else if (type == $.ig.CloudProviderType.prototype.dataDotWorld) {
			return 19;
		} else if (type == $.ig.CloudProviderType.prototype.test) {
			return 20;
		} else if (type == $.ig.CloudProviderType.prototype.azureAnalysisServices) {
			return 21;
		} else if (type == $.ig.CloudProviderType.prototype.apple) {
			return 22;
		} else if (type == $.ig.CloudProviderType.prototype.hubSpot) {
			return 23;
		} else if (type == $.ig.CloudProviderType.prototype.quickBooks) {
			return 24;
		} else if (type == $.ig.CloudProviderType.prototype.marketo) {
			return 25;
		} else if (type == $.ig.CloudProviderType.prototype.googleAds) {
			return 27;
		}
		return -1;
	}
	/*<EndMethod Name="System.Int32 Infragistics.CloudProviderTypeUtility::ConvertTypeToInt(Infragistics.CloudProviderType)" />*/
	,
	/*<BeginMethod Name="Infragistics.CloudProviderType Infragistics.CloudProviderTypeUtility::ConvertIntToType(System.Int32)" />*/
	convertIntToType: function (type) {
		if (type == 0) {
			return $.ig.CloudProviderType.prototype.notSet;
		} else if (type == 1) {
			return $.ig.CloudProviderType.prototype.microsoft;
		} else if (type == 2) {
			return $.ig.CloudProviderType.prototype.google;
		} else if (type == 3) {
			return $.ig.CloudProviderType.prototype.box;
		} else if (type == 4) {
			return $.ig.CloudProviderType.prototype.dropbox;
		} else if (type == 5) {
			return $.ig.CloudProviderType.prototype.sharePoint;
		} else if (type == 6) {
			return $.ig.CloudProviderType.prototype.infragistics;
		} else if (type == 7) {
			return $.ig.CloudProviderType.prototype.googleAnalytics;
		} else if (type == 8) {
			return $.ig.CloudProviderType.prototype.microsoftProvider;
		} else if (type == 9) {
			return $.ig.CloudProviderType.prototype.googleProvider;
		} else if (type == 10) {
			return $.ig.CloudProviderType.prototype.facebook;
		} else if (type == 11) {
			return $.ig.CloudProviderType.prototype.reportPlus;
		} else if (type == 12) {
			return $.ig.CloudProviderType.prototype.windows;
		} else if (type == 13) {
			return $.ig.CloudProviderType.prototype.salesForce;
		} else if (type == 14) {
			return $.ig.CloudProviderType.prototype.local;
		} else if (type == 15) {
			return $.ig.CloudProviderType.prototype.appFigures;
		} else if (type == 16) {
			return $.ig.CloudProviderType.prototype.restApi;
		} else if (type == 17) {
			return $.ig.CloudProviderType.prototype.demo;
		} else if (type == 18) {
			return $.ig.CloudProviderType.prototype.bigQuery;
		} else if (type == 19) {
			return $.ig.CloudProviderType.prototype.dataDotWorld;
		} else if (type == 20) {
			return $.ig.CloudProviderType.prototype.test;
		} else if (type == 21) {
			return $.ig.CloudProviderType.prototype.azureAnalysisServices;
		} else if (type == 22) {
			return $.ig.CloudProviderType.prototype.apple;
		} else if (type == 23) {
			return $.ig.CloudProviderType.prototype.hubSpot;
		} else if (type == 24) {
			return $.ig.CloudProviderType.prototype.quickBooks;
		} else if (type == 25) {
			return $.ig.CloudProviderType.prototype.marketo;
		} else if (type == 27) {
			return $.ig.CloudProviderType.prototype.googleAds;
		}
		return $.ig.CloudProviderType.prototype.notSet;
	}
	/*<EndMethod Name="Infragistics.CloudProviderType Infragistics.CloudProviderTypeUtility::ConvertIntToType(System.Int32)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudProviderTypeUtility::ConvertTypeToTitle(Infragistics.CloudProviderType)" />*/
	convertTypeToTitle: function (type) {
		var providerName = "";
		if (type == $.ig.CloudProviderType.prototype.microsoft || type == $.ig.CloudProviderType.prototype.microsoftProvider) {
			providerName = "Microsoft";
		} else if (type == $.ig.CloudProviderType.prototype.google || type == $.ig.CloudProviderType.prototype.googleProvider) {
			providerName = "Google";
		} else if (type == $.ig.CloudProviderType.prototype.box) {
			providerName = "Box";
		} else if (type == $.ig.CloudProviderType.prototype.dropbox) {
			providerName = "Dropbox";
		} else if (type == $.ig.CloudProviderType.prototype.sharePoint) {
			providerName = "SharePoint";
		} else if (type == $.ig.CloudProviderType.prototype.infragistics) {
			providerName = "Infragistics";
		} else if (type == $.ig.CloudProviderType.prototype.googleAnalytics) {
			providerName = "Google Analytics";
		} else if (type == $.ig.CloudProviderType.prototype.facebook) {
			providerName = "Facebook";
		} else if (type == $.ig.CloudProviderType.prototype.reportPlus) {
			providerName = "Report Plus";
		} else if (type == $.ig.CloudProviderType.prototype.windows) {
			providerName = "Windows";
		} else if (type == $.ig.CloudProviderType.prototype.salesForce) {
			providerName = "Salesforce";
		} else if (type == $.ig.CloudProviderType.prototype.local) {
			providerName = "Local";
		} else if (type == $.ig.CloudProviderType.prototype.bigQuery) {
			providerName = "BigQuery";
		} else if (type == $.ig.CloudProviderType.prototype.dataDotWorld) {
			providerName = "data.world";
		} else if (type == $.ig.CloudProviderType.prototype.test) {
			providerName = "Test";
		} else if (type == $.ig.CloudProviderType.prototype.azureAnalysisServices) {
			providerName = "Microsoft Azure Analysis Services";
		} else if (type == $.ig.CloudProviderType.prototype.apple) {
			providerName = "Apple";
		} else if (type == $.ig.CloudProviderType.prototype.quickBooks) {
			providerName = "QuickBooks";
		} else if (type == $.ig.CloudProviderType.prototype.marketo) {
			providerName = "Marketo";
		} else if (type == $.ig.CloudProviderType.prototype.googleAds) {
			providerName = "Google Ads";
		}
		return providerName;
	}
	/*<EndMethod Name="System.String Infragistics.CloudProviderTypeUtility::ConvertTypeToTitle(Infragistics.CloudProviderType)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudProviderTypeUtility::ConvertTypeToContentProviderTitle(Infragistics.CloudProviderType)" />*/
	convertTypeToContentProviderTitle: function (type) {
		if (type == $.ig.CloudProviderType.prototype.microsoft || type == $.ig.CloudProviderType.prototype.microsoftProvider) {
			return "OneDrive";
		} else if (type == $.ig.CloudProviderType.prototype.google || type == $.ig.CloudProviderType.prototype.googleProvider) {
			return "Google Drive";
		}
		return $.ig.CloudProviderTypeUtility.prototype.convertTypeToTitle(type);
	}
	/*<EndMethod Name="System.String Infragistics.CloudProviderTypeUtility::ConvertTypeToContentProviderTitle(Infragistics.CloudProviderType)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudProviderTypeUtility::ConvertTypeToString(Infragistics.CloudProviderType)" />*/
	convertTypeToString: function (type) {
		var providerName = "";
		if (type == $.ig.CloudProviderType.prototype.microsoft) {
			providerName = "Microsoft";
		} else if (type == $.ig.CloudProviderType.prototype.microsoftProvider) {
			providerName = "MicrosoftProvider";
		} else if (type == $.ig.CloudProviderType.prototype.google) {
			providerName = "Google";
		} else if (type == $.ig.CloudProviderType.prototype.googleProvider) {
			providerName = "GoogleProvider";
		} else if (type == $.ig.CloudProviderType.prototype.box) {
			providerName = "Box";
		} else if (type == $.ig.CloudProviderType.prototype.dropbox) {
			providerName = "Dropbox";
		} else if (type == $.ig.CloudProviderType.prototype.sharePoint) {
			providerName = "SharePoint";
		} else if (type == $.ig.CloudProviderType.prototype.infragistics) {
			providerName = "Infragistics";
		} else if (type == $.ig.CloudProviderType.prototype.googleAnalytics) {
			providerName = "GoogleAnalytics";
		} else if (type == $.ig.CloudProviderType.prototype.facebook) {
			providerName = "Facebook";
		} else if (type == $.ig.CloudProviderType.prototype.reportPlus) {
			providerName = "ReportPlus";
		} else if (type == $.ig.CloudProviderType.prototype.windows) {
			providerName = "Windows";
		} else if (type == $.ig.CloudProviderType.prototype.salesForce) {
			providerName = "SalesForce";
		} else if (type == $.ig.CloudProviderType.prototype.local) {
			providerName = "Local";
		} else if (type == $.ig.CloudProviderType.prototype.bigQuery) {
			providerName = "BigQuery";
		} else if (type == $.ig.CloudProviderType.prototype.dataDotWorld) {
			providerName = "DataDotWorld";
		} else if (type == $.ig.CloudProviderType.prototype.test) {
			providerName = "Test";
		} else if (type == $.ig.CloudProviderType.prototype.azureAnalysisServices) {
			providerName = "AzureAnalysisServices";
		} else if (type == $.ig.CloudProviderType.prototype.apple) {
			providerName = "Apple";
		} else if (type == $.ig.CloudProviderType.prototype.hubSpot) {
			providerName = "HubSpot";
		} else if (type == $.ig.CloudProviderType.prototype.quickBooks) {
			providerName = "QuickBooks";
		} else if (type == $.ig.CloudProviderType.prototype.marketo) {
			providerName = "Marketo";
		} else if (type == $.ig.CloudProviderType.prototype.googleAds) {
			providerName = "GoogleAds";
		}
		return providerName;
	}
	/*<EndMethod Name="System.String Infragistics.CloudProviderTypeUtility::ConvertTypeToString(Infragistics.CloudProviderType)" />*/
	,
	/*<BeginMethod Name="Infragistics.CloudProviderType Infragistics.CloudProviderTypeUtility::ConvertStringToType(System.String)" />*/
	convertStringToType: function (providerName) {
		if (providerName != null) {
			if (providerName.equals("Google")) {
				return $.ig.CloudProviderType.prototype.google;
			} else if (providerName.equals("Microsoft")) {
				return $.ig.CloudProviderType.prototype.microsoft;
			} else if (providerName.equals("GoogleProvider")) {
				return $.ig.CloudProviderType.prototype.googleProvider;
			} else if (providerName.equals("MicrosoftProvider")) {
				return $.ig.CloudProviderType.prototype.microsoftProvider;
			} else if (providerName.equals("SharePoint")) {
				return $.ig.CloudProviderType.prototype.sharePoint;
			} else if (providerName.equals("Infragistics")) {
				return $.ig.CloudProviderType.prototype.infragistics;
			} else if (providerName.equals("Box")) {
				return $.ig.CloudProviderType.prototype.box;
			} else if (providerName.equals("Dropbox")) {
				return $.ig.CloudProviderType.prototype.dropbox;
			} else if (providerName.equals("Facebook")) {
				return $.ig.CloudProviderType.prototype.facebook;
			} else if (providerName.equals("ReportPlus")) {
				return $.ig.CloudProviderType.prototype.reportPlus;
			} else if (providerName.equals("Windows")) {
				return $.ig.CloudProviderType.prototype.windows;
			} else if (providerName.equals("SalesForce")) {
				return $.ig.CloudProviderType.prototype.salesForce;
			} else if (providerName.equals("Local")) {
				return $.ig.CloudProviderType.prototype.local;
			} else if (providerName.equals("BigQuery")) {
				return $.ig.CloudProviderType.prototype.bigQuery;
			} else if (providerName.equals("DataDotWorld")) {
				return $.ig.CloudProviderType.prototype.dataDotWorld;
			} else if (providerName.equals("Test")) {
				return $.ig.CloudProviderType.prototype.test;
			} else if (providerName.equals("AzureAnalysisServices")) {
				return $.ig.CloudProviderType.prototype.azureAnalysisServices;
			} else if (providerName.equals("Apple")) {
				return $.ig.CloudProviderType.prototype.apple;
			} else if (providerName.equals("HubSpot")) {
				return $.ig.CloudProviderType.prototype.hubSpot;
			} else if (providerName.equals("QuickBooks")) {
				return $.ig.CloudProviderType.prototype.quickBooks;
			} else if (providerName.equals("Marketo")) {
				return $.ig.CloudProviderType.prototype.marketo;
			} else if (providerName.equals("GoogleAds")) {
				return $.ig.CloudProviderType.prototype.googleAds;
			}
		}
		return $.ig.CloudProviderType.prototype.infragistics;
	}
	/*<EndMethod Name="Infragistics.CloudProviderType Infragistics.CloudProviderTypeUtility::ConvertStringToType(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.CloudAccountUserInfo Infragistics.CloudProviderTypeUtility::ConvertJSONToUserInfoForType(Infragistics.CPJSONObject, Infragistics.CloudProviderType)" />*/
	convertJSONToUserInfoForType: function (json, type) {
		if (type == $.ig.CloudProviderType.prototype.box) {
			return new $.ig.BoxAccountUserInfo(json);
		} else if (type == $.ig.CloudProviderType.prototype.google || type == $.ig.CloudProviderType.prototype.googleAnalytics || type == $.ig.CloudProviderType.prototype.googleProvider || type == $.ig.CloudProviderType.prototype.bigQuery || type == $.ig.CloudProviderType.prototype.googleAds) {
			return new $.ig.GoogleAccountUserInfo(1, json);
		} else if (type == $.ig.CloudProviderType.prototype.microsoft || type == $.ig.CloudProviderType.prototype.microsoftProvider) {
			return new $.ig.MicrosoftAccountUserInfo(0, json);
		} else if (type == $.ig.CloudProviderType.prototype.sharePoint) {
			return new $.ig.SharePointAccountUserInfo(json);
		} else if (type == $.ig.CloudProviderType.prototype.dropbox) {
			return new $.ig.DropboxAccountUserInfo(json);
		} else if (type == $.ig.CloudProviderType.prototype.infragistics || type == $.ig.CloudProviderType.prototype.reportPlus) {
			return new $.ig.InfragisticsAccountUserInfo(json);
		} else if (type == $.ig.CloudProviderType.prototype.salesForce) {
			return new $.ig.SalesForceAccountUserInfo(json);
		} else if (type == $.ig.CloudProviderType.prototype.dataDotWorld) {
			return new $.ig.DataDotWorldUserInfo(json);
		} else if (type == $.ig.CloudProviderType.prototype.azureAnalysisServices) {
			return new $.ig.CloudAccountUserInfoFromJWT($.ig.JWTDecoder.prototype.jWT(json));
		} else if (type == $.ig.CloudProviderType.prototype.hubSpot) {
			return new $.ig.HubspotAccountUserInfo(json);
		} else if (type == $.ig.CloudProviderType.prototype.quickBooks) {
			return new $.ig.QuickBooksUserInfo(json);
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.CloudAccountUserInfo Infragistics.CloudProviderTypeUtility::ConvertJSONToUserInfoForType(Infragistics.CPJSONObject, Infragistics.CloudProviderType)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.CloudProviderTypeUtility::AreEqual(Infragistics.CloudProviderType, Infragistics.CloudProviderType)" />*/
	areEqual: function (value1, value2) {
		if (value1 == value2) {
			return true;
		} else if ((value1 == $.ig.CloudProviderType.prototype.google || value1 == $.ig.CloudProviderType.prototype.googleProvider) && (value2 == $.ig.CloudProviderType.prototype.google || value2 == $.ig.CloudProviderType.prototype.googleProvider)) {
			return true;
		} else if ((value1 == $.ig.CloudProviderType.prototype.microsoft || value1 == $.ig.CloudProviderType.prototype.microsoftProvider) && (value2 == $.ig.CloudProviderType.prototype.microsoft || value2 == $.ig.CloudProviderType.prototype.microsoftProvider)) {
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.CloudProviderTypeUtility::AreEqual(Infragistics.CloudProviderType, Infragistics.CloudProviderType)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.CloudProviderTypeUtility::IsGoogle(Infragistics.CloudFile)" />*/
	isGoogle: function (cloudFile) {
		if (cloudFile.providerType() == ($.ig.CloudProviderType.prototype.google) || cloudFile.providerType() == ($.ig.CloudProviderType.prototype.googleProvider)) {
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.CloudProviderTypeUtility::IsGoogle(Infragistics.CloudFile)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.CloudProviderTypeUtility::IsSupportedGoogleApp(Infragistics.CloudFile)" />*/
	isSupportedGoogleApp: function (cloudFile) {
		if ($.ig.CloudProviderTypeUtility.prototype.isGoogle(cloudFile)) {
			if ($.ig.CloudFile.prototype.typeWord.equals(cloudFile.type()) || $.ig.CloudFile.prototype.googleTypeDoc.equals(cloudFile.type()) || $.ig.CloudFile.prototype.typeExcel.equals(cloudFile.type()) || $.ig.CloudFile.prototype.googleTypeSpreadSheet.equals(cloudFile.type()) || $.ig.CloudFile.prototype.typePowerPoint.equals(cloudFile.type()) || $.ig.CloudFile.prototype.googleTypeSlides.equals(cloudFile.type())) {
				return true;
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.CloudProviderTypeUtility::IsSupportedGoogleApp(Infragistics.CloudFile)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudProviderTypeUtility::GetCloudFileOpenInAppTitle(Infragistics.CloudFile)" />*/
	getCloudFileOpenInAppTitle: function (cloudFile) {
		if ($.ig.CloudProviderTypeUtility.prototype.isGoogle(cloudFile)) {
			if ($.ig.CloudFile.prototype.typeWord.equals(cloudFile.type()) || $.ig.CloudFile.prototype.googleTypeDoc.equals(cloudFile.type())) {
				return $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.openInDocs);
			} else if ($.ig.CloudFile.prototype.typeExcel.equals(cloudFile.type()) || $.ig.CloudFile.prototype.googleTypeSpreadSheet.equals(cloudFile.type())) {
				return $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.openInSheets);
			} else if ($.ig.CloudFile.prototype.typePowerPoint.equals(cloudFile.type()) || $.ig.CloudFile.prototype.googleTypeSlides.equals(cloudFile.type())) {
				return $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.openInSlides);
			}
		} else {
			if ($.ig.CloudFile.prototype.typeWord.equals(cloudFile.type())) {
				return $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.openInWord);
			} else if ($.ig.CloudFile.prototype.typeExcel.equals(cloudFile.type())) {
				return $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.openInExcel);
			} else if ($.ig.CloudFile.prototype.typePowerPoint.equals(cloudFile.type())) {
				return $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.openInPowerPoint);
			}
		}
		if ($.ig.CloudFile.prototype.typeOneNote.equals(cloudFile.type()) || $.ig.CloudFile.prototype.typeOneNoteTableOfContents.equals(cloudFile.type())) {
			return $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.openInOneNote);
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.CloudProviderTypeUtility::GetCloudFileOpenInAppTitle(Infragistics.CloudFile)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudProviderTypeUtility::GetCloudFileEditInAppTitle(Infragistics.CloudFile)" />*/
	getCloudFileEditInAppTitle: function (cloudFile) {
		if ($.ig.CloudProviderTypeUtility.prototype.isGoogle(cloudFile)) {
			if ($.ig.CloudFile.prototype.typeWord.equals(cloudFile.type()) || $.ig.CloudFile.prototype.googleTypeDoc.equals(cloudFile.type())) {
				return $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.editInDocs);
			} else if ($.ig.CloudFile.prototype.typeExcel.equals(cloudFile.type()) || $.ig.CloudFile.prototype.googleTypeSpreadSheet.equals(cloudFile.type())) {
				return $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.editInSheets);
			} else if ($.ig.CloudFile.prototype.typePowerPoint.equals(cloudFile.type()) || $.ig.CloudFile.prototype.googleTypeSlides.equals(cloudFile.type())) {
				return $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.editInSlides);
			}
		} else {
			if ($.ig.CloudFile.prototype.typeWord.equals(cloudFile.type())) {
				return $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.editInWord);
			} else if ($.ig.CloudFile.prototype.typeExcel.equals(cloudFile.type())) {
				return $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.editInExcel);
			} else if ($.ig.CloudFile.prototype.typePowerPoint.equals(cloudFile.type())) {
				return $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.editInPowerPoint);
			}
		}
		if ($.ig.CloudFile.prototype.typeOneNote.equals(cloudFile.type()) || $.ig.CloudFile.prototype.typeOneNoteTableOfContents.equals(cloudFile.type())) {
			return $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.editInOneNote);
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.CloudProviderTypeUtility::GetCloudFileEditInAppTitle(Infragistics.CloudFile)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.CloudProviderTypeUtility::SupportsOpenInAppForProviderType(Infragistics.CloudProviderType)" />*/
	supportsOpenInAppForProviderType: function (providerType) {
		if (providerType == $.ig.CloudProviderType.prototype.microsoft || providerType == $.ig.CloudProviderType.prototype.microsoftProvider || providerType == $.ig.CloudProviderType.prototype.google || providerType == $.ig.CloudProviderType.prototype.googleProvider || providerType == $.ig.CloudProviderType.prototype.sharePoint) {
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.CloudProviderTypeUtility::SupportsOpenInAppForProviderType(Infragistics.CloudProviderType)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.CloudProviderTypeUtility::GetContactsScope(Infragistics.CloudProviderType)" />*/
	getContactsScope: function (providerType) {
		if (providerType == $.ig.CloudProviderType.prototype.google || providerType == $.ig.CloudProviderType.prototype.googleProvider) {
			var list = new $.ig.Array();
			list.add("https://www.googleapis.com/auth/contacts.readonly");
			return list;
		} else if (providerType == $.ig.CloudProviderType.prototype.microsoft || providerType == $.ig.CloudProviderType.prototype.microsoftProvider) {
			var list1 = new $.ig.Array();
			list1.add("https://graph.microsoft.com/People.Read");
			return list1;
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.CloudProviderTypeUtility::GetContactsScope(Infragistics.CloudProviderType)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.CloudProviderTypeUtility::SupportsSubProviders(Infragistics.CloudProviderType)" />*/
	supportsSubProviders: function (providerType) {
		return providerType == $.ig.CloudProviderType.prototype.googleAnalytics || providerType == $.ig.CloudProviderType.prototype.bigQuery || providerType == $.ig.CloudProviderType.prototype.dataDotWorld || providerType == $.ig.CloudProviderType.prototype.azureAnalysisServices;
	}
	/*<EndMethod Name="System.Boolean Infragistics.CloudProviderTypeUtility::SupportsSubProviders(Infragistics.CloudProviderType)" />*/
	,
	/*<BeginMethod Name="Infragistics.CloudProviderType Infragistics.CloudProviderTypeUtility::ResolveContentProviderType(Infragistics.CloudProviderType)" />*/
	resolveContentProviderType: function (providerType) {
		if (providerType == $.ig.CloudProviderType.prototype.microsoft) {
			return $.ig.CloudProviderType.prototype.microsoftProvider;
		} else if (providerType == $.ig.CloudProviderType.prototype.google) {
			return $.ig.CloudProviderType.prototype.googleProvider;
		}
		return providerType;
	}
	/*<EndMethod Name="Infragistics.CloudProviderType Infragistics.CloudProviderTypeUtility::ResolveContentProviderType(Infragistics.CloudProviderType)" />*/
	,
	/*<BeginMethod Name=" Infragistics.CloudProviderTypeUtility::GetSearchCapabilities(Infragistics.CloudProviderType)" />*/
	getSearchCapabilities: function (providerType) {
		if (providerType == $.ig.CloudProviderType.prototype.dropbox) {
			return $.ig.DropboxFileManager.prototype.getSearchCapabilities();
		} else if (providerType == $.ig.CloudProviderType.prototype.google || providerType == $.ig.CloudProviderType.prototype.googleProvider) {
			return $.ig.GoogleFileManager.prototype.getSearchCapabilities();
		} else if (providerType == $.ig.CloudProviderType.prototype.box) {
			return $.ig.BoxFileManager.prototype.getSearchCapabilities();
		} else if (providerType == $.ig.CloudProviderType.prototype.sharePoint) {
			return $.ig.SharePointFileManager.prototype.getSearchCapabilities();
		} else if (providerType == $.ig.CloudProviderType.prototype.microsoft || providerType == $.ig.CloudProviderType.prototype.microsoftProvider) {
			return $.ig.MicrosoftFileManager.prototype.getSearchCapabilities();
		} else {
			return new Array(0);
		}
	}
	/*<EndMethod Name=" Infragistics.CloudProviderTypeUtility::GetSearchCapabilities(Infragistics.CloudProviderType)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.CloudProviderTypeUtility::HasDropCapability(Infragistics.CloudProviderType)" />*/
	hasDropCapability: function (providerType) {
		if (providerType == $.ig.CloudProviderType.prototype.dropbox) {
			return $.ig.DropboxFileManager.prototype.hasDropCapability();
		} else if (providerType == $.ig.CloudProviderType.prototype.google || providerType == $.ig.CloudProviderType.prototype.googleProvider) {
			return $.ig.GoogleFileManager.prototype.hasDropCapability();
		} else if (providerType == $.ig.CloudProviderType.prototype.box) {
			return $.ig.BoxFileManager.prototype.hasDropCapability();
		} else if (providerType == $.ig.CloudProviderType.prototype.sharePoint) {
			return $.ig.SharePointFileManager.prototype.hasDropCapability();
		} else if (providerType == $.ig.CloudProviderType.prototype.microsoft || providerType == $.ig.CloudProviderType.prototype.microsoftProvider) {
			return $.ig.MicrosoftFileManager.prototype.hasDropCapability();
		} else {
			return false;
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.CloudProviderTypeUtility::HasDropCapability(Infragistics.CloudProviderType)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.CloudProviderTypeUtility::IsContentProvider(Infragistics.CloudProviderType)" />*/
	isContentProvider: function (type) {
		return type == $.ig.CloudProviderType.prototype.box || type == $.ig.CloudProviderType.prototype.dropbox || type == $.ig.CloudProviderType.prototype.google || type == $.ig.CloudProviderType.prototype.googleProvider || type == $.ig.CloudProviderType.prototype.microsoft || type == $.ig.CloudProviderType.prototype.microsoftProvider || type == $.ig.CloudProviderType.prototype.sharePoint;
	}
	/*<EndMethod Name="System.Boolean Infragistics.CloudProviderTypeUtility::IsContentProvider(Infragistics.CloudProviderType)" />*/
	,
	/*<BeginMethod Name="Infragistics.CloudFileManager Infragistics.CloudProviderTypeUtility::CreateFileManagerForProvider(Infragistics.ProviderBase)" />*/
	createFileManagerForProvider: function (provider) {
		var fileManager = null;
		var type = provider.provider();
		if (type == $.ig.CloudProviderType.prototype.dropbox) {
			fileManager = new $.ig.DropboxFileManager((provider).tokenState());
		} else if (type == $.ig.CloudProviderType.prototype.box) {
			fileManager = new $.ig.BoxFileManager((provider).tokenState());
		} else if (type == $.ig.CloudProviderType.prototype.google || type == $.ig.CloudProviderType.prototype.googleProvider) {
			fileManager = new $.ig.GoogleFileManager((provider).tokenState());
		} else if (type == $.ig.CloudProviderType.prototype.microsoft || type == $.ig.CloudProviderType.prototype.microsoftProvider) {
			fileManager = new $.ig.MicrosoftFileManager((provider).tokenState());
		} else if (type == $.ig.CloudProviderType.prototype.sharePoint) {
			fileManager = new $.ig.SharePointFileManager(0, (provider).tokenState());
		} else if (type == $.ig.CloudProviderType.prototype.reportPlus) {
		} else if (type == $.ig.CloudProviderType.prototype.infragistics) {
			fileManager = new $.ig.InfragisticsWebCloudFileManager(provider);
		}
		if (fileManager != null) {
			fileManager.identifier(provider.identifier());
		}
		return fileManager;
	}
	/*<EndMethod Name="Infragistics.CloudFileManager Infragistics.CloudProviderTypeUtility::CreateFileManagerForProvider(Infragistics.ProviderBase)" />*/
	,
	/*<BeginMethod Name="Infragistics.CloudTeamManager Infragistics.CloudProviderTypeUtility::CreateTeamManagerForProvider(Infragistics.ProviderBase)" />*/
	createTeamManagerForProvider: function (provider) {
		var teamManager = null;
		var type = provider.provider();
		if (type == $.ig.CloudProviderType.prototype.google || type == $.ig.CloudProviderType.prototype.googleProvider) {
			teamManager = new $.ig.GoogleTeamManager((provider).tokenState());
		} else if (type == $.ig.CloudProviderType.prototype.microsoft || type == $.ig.CloudProviderType.prototype.microsoftProvider) {
			teamManager = new $.ig.MicrosoftTeamManager((provider).tokenState());
		}
		return teamManager;
	}
	/*<EndMethod Name="Infragistics.CloudTeamManager Infragistics.CloudProviderTypeUtility::CreateTeamManagerForProvider(Infragistics.ProviderBase)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.CloudProviderTypeUtility::HasSharingPermissionsCapability(Infragistics.CloudProviderType)" />*/
	hasSharingPermissionsCapability: function (type) {
		return type == $.ig.CloudProviderType.prototype.box || type == $.ig.CloudProviderType.prototype.dropbox || type == $.ig.CloudProviderType.prototype.google || type == $.ig.CloudProviderType.prototype.googleProvider || type == $.ig.CloudProviderType.prototype.microsoft || type == $.ig.CloudProviderType.prototype.microsoftProvider || type == $.ig.CloudProviderType.prototype.sharePoint;
	}
	/*<EndMethod Name="System.Boolean Infragistics.CloudProviderTypeUtility::HasSharingPermissionsCapability(Infragistics.CloudProviderType)" />*/
	,
	$type: new $.ig.Type('CloudProviderTypeUtility', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CloudProviderTypeUtility" />*/

/*<BeginType Name="Infragistics.CloudTeam" />*/

$.ig.util.defType('CloudTeam', 'BackingStoreObjectBase', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.BackingStoreObjectBase.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json) {
		$.ig.BackingStoreObjectBase.prototype.init1.call(this, 1, json);
	},
	/*<BeginProperty Name="System.String Infragistics.CloudTeam::Identifier()" />*/
	identifier: function () {
	}
	/*<EndProperty Name="System.String Infragistics.CloudTeam::Identifier()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudTeam::Name()" />*/
	name: function () {
	}
	/*<EndProperty Name="System.String Infragistics.CloudTeam::Name()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudTeam::Description()" />*/
	description: function () {
	}
	/*<EndProperty Name="System.String Infragistics.CloudTeam::Description()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.CloudTeam::ProviderType()" />*/
	providerType: function () {
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.CloudTeam::ProviderType()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudTeam::ProviderId()" />*/
	providerId: function () {
		return this.resolveStringForKey("providerId");
	}
	/*<EndProperty Name="System.String Infragistics.CloudTeam::ProviderId()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.CloudTeam::Members()" />*/
	members: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("members", value);
			return value;
		} else {
			return this.resolveListForKey("members");
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.CloudTeam::Members()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.CloudTeam::Imported()" />*/
	imported: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("imported", value);
			return value;
		} else {
			return this.resolveBoolForKey("imported");
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.CloudTeam::Imported()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.CloudTeam::ReplaceMember(Infragistics.CloudTeamMember)" />*/
	replaceMember: function (member) {
		var members = this.members();
		var count = members.length;
		for (var i = 0; i < count; i++) {
			if ((members[i]).identifier() == member.identifier()) {
				members[i] = member;
			}
		}
		this.members(members);
	}
	/*<EndMethod Name="System.Void Infragistics.CloudTeam::ReplaceMember(Infragistics.CloudTeamMember)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.CloudTeam::RemoveMember(Infragistics.CloudTeamMember)" />*/
	removeMember: function (member) {
		var members = this.members();
		var count = members.length;
		var newMembers = new $.ig.Array();
		for (var i = 0; i < count; i++) {
			if ((members[i]).identifier() != member.identifier()) {
				newMembers.add(members[i]);
			}
		}
		this.members(newMembers);
	}
	/*<EndMethod Name="System.Void Infragistics.CloudTeam::RemoveMember(Infragistics.CloudTeamMember)" />*/
	,
	$type: new $.ig.Type('CloudTeam', $.ig.BackingStoreObjectBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CloudTeam" />*/

/*<BeginType Name="Infragistics.MicrosoftTeam" />*/

$.ig.util.defType('MicrosoftTeam', 'CloudTeam', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.CloudTeam.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json) {
		$.ig.CloudTeam.prototype.init1.call(this, 1, json);
	},
	/*<BeginProperty Name="System.String Infragistics.MicrosoftTeam::Identifier()" />*/
	identifier: function () {
		return this.resolveStringForKey("id");
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftTeam::Identifier()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftTeam::Name()" />*/
	name: function () {
		return this.resolveStringForKey("displayName");
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftTeam::Name()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftTeam::Description()" />*/
	description: function () {
		return this.resolveStringForKey("description");
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftTeam::Description()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.MicrosoftTeam::ProviderType()" />*/
	providerType: function () {
		return $.ig.CloudProviderType.prototype.microsoft;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.MicrosoftTeam::ProviderType()" />*/
	,
	$type: new $.ig.Type('MicrosoftTeam', $.ig.CloudTeam.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftTeam" />*/

/*<BeginType Name="Infragistics.GoogleTeam" />*/

$.ig.util.defType('GoogleTeam', 'CloudTeam', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.CloudTeam.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json) {
		$.ig.CloudTeam.prototype.init1.call(this, 1, json);
	},
	/*<BeginProperty Name="System.String Infragistics.GoogleTeam::Description()" />*/
	description: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.GoogleTeam::Description()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleTeam::Identifier()" />*/
	identifier: function () {
		return this.resolveStringForKey("resourceName");
	}
	/*<EndProperty Name="System.String Infragistics.GoogleTeam::Identifier()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleTeam::Name()" />*/
	name: function () {
		return this.resolveStringForKey("formattedName");
	}
	/*<EndProperty Name="System.String Infragistics.GoogleTeam::Name()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.GoogleTeam::MemberCount()" />*/
	memberCount: function () {
		return this.resolveIntegerForKey("memberCount");
	}
	/*<EndProperty Name="System.Int32 Infragistics.GoogleTeam::MemberCount()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.GoogleTeam::ProviderType()" />*/
	providerType: function () {
		return $.ig.CloudProviderType.prototype.google;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.GoogleTeam::ProviderType()" />*/
	,
	$type: new $.ig.Type('GoogleTeam', $.ig.CloudTeam.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleTeam" />*/

/*<BeginType Name="Infragistics.CloudTeamMember" />*/

$.ig.util.defType('CloudTeamMember', 'BackingStoreObjectBase', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.BackingStoreObjectBase.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json) {
		$.ig.BackingStoreObjectBase.prototype.init1.call(this, 1, json);
	},
	/*<BeginProperty Name="System.String Infragistics.CloudTeamMember::Identifier()" />*/
	identifier: function () {
	}
	/*<EndProperty Name="System.String Infragistics.CloudTeamMember::Identifier()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudTeamMember::Name()" />*/
	name: function () {
	}
	/*<EndProperty Name="System.String Infragistics.CloudTeamMember::Name()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudTeamMember::Email()" />*/
	email: function () {
	}
	/*<EndProperty Name="System.String Infragistics.CloudTeamMember::Email()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.CloudTeamMember::ProviderId()" />*/
	providerId: function () {
		return this.resolveStringForKey("providerId");
	}
	/*<EndProperty Name="System.String Infragistics.CloudTeamMember::ProviderId()" />*/
	,
	$type: new $.ig.Type('CloudTeamMember', $.ig.BackingStoreObjectBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CloudTeamMember" />*/

/*<BeginType Name="Infragistics.MicrosoftTeamMember" />*/

$.ig.util.defType('MicrosoftTeamMember', 'CloudTeamMember', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.CloudTeamMember.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json) {
		$.ig.CloudTeamMember.prototype.init1.call(this, 1, json);
	},
	/*<BeginProperty Name="System.String Infragistics.MicrosoftTeamMember::Identifier()" />*/
	identifier: function () {
		return this.resolveStringForKey("id");
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftTeamMember::Identifier()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftTeamMember::Name()" />*/
	name: function () {
		return this.resolveStringForKey("displayName");
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftTeamMember::Name()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftTeamMember::Email()" />*/
	email: function () {
		var mail = this.resolveStringForKey("mail");
		if (mail != null) {
			return mail;
		}
		if (mail == null) {
			mail = this.resolveStringForKey("mailNickname");
			mail = this.fixExternalMails(mail);
		}
		if (mail == null) {
			mail = this.resolveStringForKey("userPrincipalName");
			mail = this.fixExternalMails(mail);
		}
		if (mail != null) {
			this.setValueForKey("mail", mail);
		}
		return mail;
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftTeamMember::Email()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftTeamMember::FixExternalMails(System.String)" />*/
	fixExternalMails: function (mail) {
		if (mail == null) {
			return null;
		}
		var positionOfExt = $.ig.NativeStringUtility.prototype.indexOf(mail, "#EXT#");
		if (positionOfExt > 0) {
			mail = $.ig.NativeStringUtility.prototype.substring(mail, 0, positionOfExt);
			return $.ig.NativeStringUtility.prototype.replace(mail, "_", "@");
		} else {
			return mail;
		}
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftTeamMember::FixExternalMails(System.String)" />*/
	,
	$type: new $.ig.Type('MicrosoftTeamMember', $.ig.CloudTeamMember.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftTeamMember" />*/

/*<BeginType Name="Infragistics.GoogleTeamMember" />*/

$.ig.util.defType('GoogleTeamMember', 'CloudTeamMember', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.CloudTeamMember.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json) {
		$.ig.CloudTeamMember.prototype.init1.call(this, 1, json);
	},
	__email: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleTeamMember::Email()" />*/
	email: function () {
		if (this.__email == null) {
			var emails = this.resolveListForKey("emailAddresses");
			if (emails != null && emails.length > 0) {
				var json = $.ig.CPJSONObject.prototype.createFromJSONObject(emails[0]);
				this.__email = json.resolveStringForKey("value");
			}
		}
		return this.__email;
	}
	/*<EndProperty Name="System.String Infragistics.GoogleTeamMember::Email()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleTeamMember::Identifier()" />*/
	identifier: function () {
		return this.resolveStringForKey("resourceName");
	}
	/*<EndProperty Name="System.String Infragistics.GoogleTeamMember::Identifier()" />*/
	,
	__name: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleTeamMember::Name()" />*/
	name: function () {
		if (this.__name == null) {
			var names = this.resolveListForKey("names");
			if (names != null && names.length > 0) {
				var json = $.ig.CPJSONObject.prototype.createFromJSONObject(names[0]);
				this.__name = json.resolveStringForKey("displayName");
			}
		}
		return this.__name;
	}
	/*<EndProperty Name="System.String Infragistics.GoogleTeamMember::Name()" />*/
	,
	$type: new $.ig.Type('GoogleTeamMember', $.ig.CloudTeamMember.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleTeamMember" />*/

/*<BeginType Name="Infragistics.ContentProperties" />*/

$.ig.util.defType('ContentProperties', 'Object', {
	__owner: null,
	__contentType: null,
	__contentLocation: null,
	__locationPath: null,
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginProperty Name="System.String Infragistics.ContentProperties::Owner()" />*/
	owner: function (value) {
		if (arguments.length === 1) {
			this.__owner = value;
			return value;
		} else {
			return this.__owner;
		}
	}
	/*<EndProperty Name="System.String Infragistics.ContentProperties::Owner()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ContentProperties::ContentType()" />*/
	contentType: function (value) {
		if (arguments.length === 1) {
			this.__contentType = value;
			return value;
		} else {
			return this.__contentType;
		}
	}
	/*<EndProperty Name="System.String Infragistics.ContentProperties::ContentType()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ContentProperties::ContentLocation()" />*/
	contentLocation: function (value) {
		if (arguments.length === 1) {
			this.__contentLocation = value;
			return value;
		} else {
			return this.__contentLocation;
		}
	}
	/*<EndProperty Name="System.String Infragistics.ContentProperties::ContentLocation()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ContentProperties::LocationPath()" />*/
	locationPath: function (value) {
		if (arguments.length === 1) {
			this.__locationPath = value;
			return value;
		} else {
			return this.__locationPath;
		}
	}
	/*<EndProperty Name="System.String Infragistics.ContentProperties::LocationPath()" />*/
	,
	$type: new $.ig.Type('ContentProperties', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ContentProperties" />*/

/*<BeginType Name="Infragistics.ContentPropertyData" />*/

$.ig.util.defType('ContentPropertyData', 'Object', {
	__propertyValue: null,
	__contentPropertyType: 0,
	__propertyType: 0,
	__hasProgress: false,
	init: function (propertyValue, propertyType, cloudProviderType) {
		$.ig.Object.prototype.init.call(this);
		this.__propertyValue = propertyValue;
		this.__contentPropertyType = propertyType;
		this.__propertyType = cloudProviderType;
		this.__hasProgress = false;
	},
	/*<BeginProperty Name="System.String Infragistics.ContentPropertyData::PropertyValue()" />*/
	propertyValue: function (value) {
		if (arguments.length === 1) {
			this.__propertyValue = value;
			return value;
		} else {
			return this.__propertyValue;
		}
	}
	/*<EndProperty Name="System.String Infragistics.ContentPropertyData::PropertyValue()" />*/
	,
	/*<BeginProperty Name="Infragistics.ContentPropertyType Infragistics.ContentPropertyData::ContentPropertyType()" />*/
	contentPropertyType: function () {
		return this.__contentPropertyType;
	}
	/*<EndProperty Name="Infragistics.ContentPropertyType Infragistics.ContentPropertyData::ContentPropertyType()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.ContentPropertyData::ProviderType()" />*/
	providerType: function () {
		return this.__propertyType;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.ContentPropertyData::ProviderType()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.ContentPropertyData::HasProgress()" />*/
	hasProgress: function (value) {
		if (arguments.length === 1) {
			this.__hasProgress = value;
			return value;
		} else {
			return this.__hasProgress;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.ContentPropertyData::HasProgress()" />*/
	,
	$type: new $.ig.Type('ContentPropertyData', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ContentPropertyData" />*/

/*<BeginType Name="Infragistics.DocumentLink" />*/

$.ig.util.defType('DocumentLink', 'BackingStoreObjectBase', {
	__ancestors: null,
	init: function (initNumber, json) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
				case 2:
					this.init2.apply(this, arguments);
					break;
				case 3:
					this.init3.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.BackingStoreObjectBase.prototype.init1.call(this, 1, json);
	},
	init1: function (initNumber, identifier, documentType) {
		$.ig.BackingStoreObjectBase.prototype.init.call(this, 0);
		this.identifier(identifier);
		this.documentType(documentType);
	},
	init2: function (initNumber, identifier, linkType, documentType, kind) {
		$.ig.BackingStoreObjectBase.prototype.init.call(this, 0);
		this.identifier(identifier);
		this.linkType(linkType);
		this.documentType(documentType);
		this.kind(kind);
	},
	init3: function (initNumber, identifier, linkType, documentType, kind, shared) {
		$.ig.BackingStoreObjectBase.prototype.init.call(this, 0);
		this.identifier(identifier);
		this.linkType(linkType);
		this.documentType(documentType);
		this.kind(kind);
		this.shared(shared);
	},
	/*<BeginMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateParentTeamLink(System.String)" />*/
	createParentTeamLink: function (teamId) {
		return new $.ig.DocumentLink(2, teamId, $.ig.DocumentLink.prototype.linkTypeParent, $.ig.DocumentLink.prototype.documentTypeTeam, $.ig.DocumentLink.prototype.kindTypeTeam);
	}
	/*<EndMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateParentTeamLink(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateParentTeamLink(System.String, System.Boolean)" />*/
	createParentTeamLink1: function (teamId, shared) {
		return new $.ig.DocumentLink(3, teamId, $.ig.DocumentLink.prototype.linkTypeParent, $.ig.DocumentLink.prototype.documentTypeTeam, $.ig.DocumentLink.prototype.kindTypeTeam, shared);
	}
	/*<EndMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateParentTeamLink(System.String, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateParentOrgLink(System.String)" />*/
	createParentOrgLink: function (orgId) {
		return new $.ig.DocumentLink(2, orgId, $.ig.DocumentLink.prototype.linkTypeParent, $.ig.DocumentLink.prototype.documentTypeTeam, $.ig.DocumentLink.prototype.kindTypeOrg);
	}
	/*<EndMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateParentOrgLink(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateParentBoardLink(System.String)" />*/
	createParentBoardLink: function (boardId) {
		return new $.ig.DocumentLink(2, boardId, $.ig.DocumentLink.prototype.linkTypeParent, $.ig.DocumentLink.prototype.documentTypeBoard, null);
	}
	/*<EndMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateParentBoardLink(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateChildDocumentLink(System.String, System.String)" />*/
	createChildDocumentLink: function (documentType, childId) {
		return new $.ig.DocumentLink(2, childId, $.ig.DocumentLink.prototype.linkTypeChild, documentType, null);
	}
	/*<EndMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateChildDocumentLink(System.String, System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateParentTaskLink(System.String)" />*/
	createParentTaskLink: function (taskId) {
		return new $.ig.DocumentLink(2, taskId, $.ig.DocumentLink.prototype.linkTypeParent, $.ig.DocumentLink.prototype.documentTypeTask, null);
	}
	/*<EndMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateParentTaskLink(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateParenChatLink(System.String)" />*/
	createParenChatLink: function (chatId) {
		return new $.ig.DocumentLink(2, chatId, $.ig.DocumentLink.prototype.linkTypeParent, $.ig.DocumentLink.prototype.documentTypeChat, null);
	}
	/*<EndMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateParenChatLink(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateParentLink(System.String, System.String)" />*/
	createParentLink: function (docType, parentId) {
		return new $.ig.DocumentLink(2, parentId, $.ig.DocumentLink.prototype.linkTypeParent, docType, null);
	}
	/*<EndMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateParentLink(System.String, System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateParentLinkWithNextDocumentId(System.String, System.String, System.String)" />*/
	createParentLinkWithNextDocumentId: function (docType, parentId, nextDocumentId) {
		var link = new $.ig.DocumentLink(2, parentId, $.ig.DocumentLink.prototype.linkTypeParent, docType, null);
		if (nextDocumentId != null) {
			link.nextLinkId(nextDocumentId);
		}
		return link;
	}
	/*<EndMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateParentLinkWithNextDocumentId(System.String, System.String, System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateOneWayParentLink(System.String, System.String)" />*/
	createOneWayParentLink: function (docType, parentId) {
		var link = $.ig.DocumentLink.prototype.createParentLink(docType, parentId);
		link.oneWay(true);
		return link;
	}
	/*<EndMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateOneWayParentLink(System.String, System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateSharedParentLink(System.String, System.String, System.String)" />*/
	createSharedParentLink: function (docType, parentId, permission) {
		var link = new $.ig.DocumentLink(2, parentId, $.ig.DocumentLink.prototype.linkTypeParent, docType, null);
		link.shared(true);
		link.permission(permission);
		return link;
	}
	/*<EndMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateSharedParentLink(System.String, System.String, System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateSharedChildLink(System.String, System.String, System.String)" />*/
	createSharedChildLink: function (docType, parentId, permission) {
		var link = new $.ig.DocumentLink(2, parentId, $.ig.DocumentLink.prototype.linkTypeChild, docType, null);
		link.shared(true);
		link.permission(permission);
		return link;
	}
	/*<EndMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateSharedChildLink(System.String, System.String, System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateOneWayChildLink(System.String, System.String, System.String)" />*/
	createOneWayChildLink: function (docType, parentId, permission) {
		var link = new $.ig.DocumentLink(2, parentId, $.ig.DocumentLink.prototype.linkTypeChild, docType, null);
		link.oneWay(true);
		return link;
	}
	/*<EndMethod Name="Infragistics.DocumentLink Infragistics.DocumentLink::CreateOneWayChildLink(System.String, System.String, System.String)" />*/
	,
	__tempId: null,
	/*<BeginProperty Name="System.String Infragistics.DocumentLink::Identifier()" />*/
	identifier: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey($.ig.DocumentLink.prototype.identifierKey, value);
			return value;
		} else {
			var val = this.resolveStringForKey($.ig.DocumentLink.prototype.identifierKey);
			if (val == null) {
				if (this.__tempId == null) {
					this.__tempId = $.ig.NativeStringUtility.prototype.generateUID();
				}
				val = this.__tempId;
			}
			return val;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DocumentLink::Identifier()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DocumentLink::ActualId()" />*/
	actualId: function () {
		return this.resolveStringForKey("id");
	}
	/*<EndProperty Name="System.String Infragistics.DocumentLink::ActualId()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DocumentLink::LinkType()" />*/
	linkType: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("type", value);
			return value;
		} else {
			return this.resolveStringForKey("type");
		}
	}
	/*<EndProperty Name="System.String Infragistics.DocumentLink::LinkType()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DocumentLink::DocumentType()" />*/
	documentType: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey($.ig.DocumentLink.prototype.documentTypeKey, value);
			return value;
		} else {
			return this.resolveStringForKey($.ig.DocumentLink.prototype.documentTypeKey);
		}
	}
	/*<EndProperty Name="System.String Infragistics.DocumentLink::DocumentType()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DocumentLink::Kind()" />*/
	kind: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("kind", value);
			return value;
		} else {
			return this.resolveStringForKey("kind");
		}
	}
	/*<EndProperty Name="System.String Infragistics.DocumentLink::Kind()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.DocumentLink::OneWay()" />*/
	oneWay: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey($.ig.DocumentLink.prototype.oneWayKey, value);
			return value;
		} else {
			return this.resolveBoolForKey($.ig.DocumentLink.prototype.oneWayKey);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.DocumentLink::OneWay()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.DocumentLink::Shared()" />*/
	shared: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey($.ig.DocumentLink.prototype.sharedKey, value);
			return value;
		} else {
			return this.resolveBoolForKey($.ig.DocumentLink.prototype.sharedKey);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.DocumentLink::Shared()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DocumentLink::NextLinkId()" />*/
	nextLinkId: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey($.ig.DocumentLink.prototype._nEXTLINK_ID, value);
			return value;
		} else {
			return this.resolveStringForKey($.ig.DocumentLink.prototype._nEXTLINK_ID);
		}
	}
	/*<EndProperty Name="System.String Infragistics.DocumentLink::NextLinkId()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DocumentLink::Permission()" />*/
	permission: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey($.ig.DocumentLink.prototype.permissionKey, value);
			return value;
		} else {
			if (this.shared()) {
				if (this.containsKey($.ig.DocumentLink.prototype.permissionKey)) {
					return this.resolveStringForKey($.ig.DocumentLink.prototype.permissionKey);
				} else {
					return $.ig.DocumentLink.prototype.sharedPermissionTypeModify;
				}
			} else {
				return $.ig.DocumentLink.prototype.sharedPermissionTypeOwner;
			}
		}
	}
	/*<EndProperty Name="System.String Infragistics.DocumentLink::Permission()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DocumentLink::ShareEmail()" />*/
	shareEmail: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("shareEmail", value);
			return value;
		} else {
			return this.resolveStringForKey("shareEmail");
		}
	}
	/*<EndProperty Name="System.String Infragistics.DocumentLink::ShareEmail()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DocumentLink::Email()" />*/
	email: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("email", value);
			return value;
		} else {
			return this.resolveStringForKey("email");
		}
	}
	/*<EndProperty Name="System.String Infragistics.DocumentLink::Email()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DocumentLink::Role()" />*/
	role: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("role", value);
			return value;
		} else {
			return this.resolveStringForKey("role");
		}
	}
	/*<EndProperty Name="System.String Infragistics.DocumentLink::Role()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.DocumentLink::IsNew()" />*/
	isNew: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("new", value);
			return value;
		} else {
			return this.resolveBoolForKey("new");
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.DocumentLink::IsNew()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.DocumentLink::SkipInvite()" />*/
	skipInvite: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey($.ig.DocumentLink.prototype.skipInviteKey, value);
			return value;
		} else {
			return this.resolveBoolForKey($.ig.DocumentLink.prototype.skipInviteKey);
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.DocumentLink::SkipInvite()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DocumentLink::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey($.ig.DocumentLink.prototype.nameKey, value);
			return value;
		} else {
			return this.resolveStringForKey($.ig.DocumentLink.prototype.nameKey);
		}
	}
	/*<EndProperty Name="System.String Infragistics.DocumentLink::Name()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DocumentLink::LinkSuffix()" />*/
	linkSuffix: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("suffix", value);
			return value;
		} else {
			return this.resolveStringForKey("suffix");
		}
	}
	/*<EndProperty Name="System.String Infragistics.DocumentLink::LinkSuffix()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DocumentLink::UserMessage()" />*/
	userMessage: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("userMessage", value);
			return value;
		} else {
			return this.resolveStringForKey("userMessage");
		}
	}
	/*<EndProperty Name="System.String Infragistics.DocumentLink::UserMessage()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.DocumentLink::Validated()" />*/
	validated: function () {
		if (this.containsKey("validated")) {
			return this.resolveBoolForKey("validated");
		}
		if (this.containsKey("expiration")) {
			return false;
		}
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.DocumentLink::Validated()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.DocumentLink::AncestorsPaths()" />*/
	ancestorsPaths: function (value) {
		if (arguments.length === 1) {
			this.__ancestors = value;
			var paths = new $.ig.Array();
			for (var i = 0; i < value.length; i++) {
				var subList = value[i];
				var path = new $.ig.CPJSONObject(1);
				var items = new $.ig.Array();
				for (var j = 0; j < subList.length; j++) {
					items.add((subList[j]).jSONObject());
				}
				path.setValueForKey("items", items);
				paths.add(path.jSONObject());
			}
			this.setValueForKey("paths", paths);
			return value;
		} else {
			if (this.__ancestors == null) {
				this.__ancestors = new $.ig.Array();
				var list = this.resolveListForKey("paths");
				for (var i = 0; i < list.length; i++) {
					var pathJson = $.ig.CPJSONObject.prototype.createFromJSONObject(list[i]);
					var path = new $.ig.Array();
					var items = pathJson.resolveListForKey("items");
					for (var j = 0; j < items.length; j++) {
						path.add(new $.ig.DocumentLink(0, $.ig.CPJSONObject.prototype.createFromJSONObject(items[j])));
					}
					this.__ancestors.add(path);
				}
			}
			return this.__ancestors;
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.DocumentLink::AncestorsPaths()" />*/
	,
	__fullAncestors: null,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.DocumentLink::FullAncestors()" />*/
	fullAncestors: function () {
		if (this.__fullAncestors == null) {
			this.__fullAncestors = new $.ig.Array();
			var list = this.resolveListForKey("fullAncestors");
			for (var i = 0; i < list.length; i++) {
				this.__fullAncestors.add(new $.ig.DocumentLink(0, $.ig.CPJSONObject.prototype.createFromJSONObject(list[i])));
			}
		}
		return this.__fullAncestors;
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.DocumentLink::FullAncestors()" />*/
	,
	$type: new $.ig.Type('DocumentLink', $.ig.BackingStoreObjectBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DocumentLink" />*/

/*<BeginType Name="Infragistics.DataSourceAssignment" />*/

$.ig.util.defType('DataSourceAssignment', 'BackingStoreObjectBase', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.BackingStoreObjectBase.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json) {
		$.ig.BackingStoreObjectBase.prototype.init1.call(this, 1, json);
	},
	/*<BeginProperty Name="System.String Infragistics.DataSourceAssignment::Id()" />*/
	id: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("id", value);
			return value;
		} else {
			return this.resolveStringForKey("id");
		}
	}
	/*<EndProperty Name="System.String Infragistics.DataSourceAssignment::Id()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DataSourceAssignment::DataSourceId()" />*/
	dataSourceId: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("dataSourceId", value);
			return value;
		} else {
			return this.resolveStringForKey("dataSourceId");
		}
	}
	/*<EndProperty Name="System.String Infragistics.DataSourceAssignment::DataSourceId()" />*/
	,
	$type: new $.ig.Type('DataSourceAssignment', $.ig.BackingStoreObjectBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DataSourceAssignment" />*/

/*<BeginType Name="Infragistics.DropboxAccountUserInfo" />*/

$.ig.util.defType('DropboxAccountUserInfo', 'CloudAccountUserInfo', {
	init: function (json) {
		$.ig.CloudAccountUserInfo.prototype.init1.call(this, 1, json);
	},
	/*<BeginMethod Name="System.String Infragistics.DropboxAccountUserInfo::GetDisplayName()" />*/
	getDisplayName: function () {
		return this.resolveStringForKeyPath((function () {
			var $ret = new $.ig.Array();
			$ret.add("name");
			$ret.add("display_name");
			return $ret;
		}()));
	}
	/*<EndMethod Name="System.String Infragistics.DropboxAccountUserInfo::GetDisplayName()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxAccountUserInfo::GetEmail()" />*/
	getEmail: function () {
		return this.resolveStringForKey("email");
	}
	/*<EndMethod Name="System.String Infragistics.DropboxAccountUserInfo::GetEmail()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxAccountUserInfo::GetUserId()" />*/
	getUserId: function () {
		return this.resolveStringForKey("account_id");
	}
	/*<EndMethod Name="System.String Infragistics.DropboxAccountUserInfo::GetUserId()" />*/
	,
	$type: new $.ig.Type('DropboxAccountUserInfo', $.ig.CloudAccountUserInfo.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxAccountUserInfo" />*/

/*<BeginType Name="Infragistics.DropboxFile" />*/

$.ig.util.defType('DropboxFile', 'CloudFile', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.CloudFile.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json, providerId) {
		$.ig.CloudFile.prototype.init1.call(this, 1, json, providerId);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.DropboxFile::IsFolder()" />*/
	isFolder: function () {
		var val = this.resolveStringForKey(".tag");
		return val != null && val.equals("folder");
	}
	/*<EndProperty Name="System.Boolean Infragistics.DropboxFile::IsFolder()" />*/
	,
	__name: null,
	/*<BeginProperty Name="System.String Infragistics.DropboxFile::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			$.ig.ActivityTrackingBackingStore.prototype.name.call(this, value);
			return value;
		} else {
			if (this.__name == null) {
				this.__name = this.resolveStringForKey("name");
			}
			return this.__name;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFile::Name()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DropboxFile::PathIdentifier()" />*/
	pathIdentifier: function () {
		var path = this.internalPathIdentifier();
		if (path != null) {
			var itemId = this.resolveStringForKey("id");
			return itemId + $.ig.CloudFile.prototype.pATH_SEPARATOR + path;
		}
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFile::PathIdentifier()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DropboxFile::InternalPathIdentifier()" />*/
	internalPathIdentifier: function () {
		return this.resolveStringForKey("path_lower");
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFile::InternalPathIdentifier()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxFile::ExtractId(System.String)" />*/
	extractId: function (pathIdentifier) {
		return $.ig.CloudFile.prototype.extractPathIdentifierComponent(pathIdentifier, 0);
	}
	/*<EndMethod Name="System.String Infragistics.DropboxFile::ExtractId(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxFile::ExtractPath(System.String)" />*/
	extractPath: function (pathIdentifier) {
		return $.ig.CloudFile.prototype.extractPathIdentifierComponent(pathIdentifier, 1);
	}
	/*<EndMethod Name="System.String Infragistics.DropboxFile::ExtractPath(System.String)" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.DropboxFile::Size()" />*/
	size: function () {
		return this.resolveIntegerForKey("size");
	}
	/*<EndProperty Name="System.Int64 Infragistics.DropboxFile::Size()" />*/
	,
	__mDate: null,
	__mdateChecked: false,
	/*<BeginProperty Name="Infragistics.CPDateTime Infragistics.DropboxFile::ModifiedDate()" />*/
	modifiedDate: function () {
		if (!this.__mdateChecked) {
			this.__mdateChecked = true;
			var formatString = null;
			if (this.containsKey("client_modified")) {
				formatString = this.resolveStringForKey("client_modified");
			} else {
				formatString = this.resolveStringForKey("server_modified");
			}
			this.__mDate = $.ig.CPDateTime.prototype.createFromUTCTimeString(formatString, $.ig.DateUtility.prototype.getRFC3339FormatString());
		}
		return this.__mDate;
	}
	/*<EndProperty Name="Infragistics.CPDateTime Infragistics.DropboxFile::ModifiedDate()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.DropboxFile::CopyEnabled()" />*/
	copyEnabled: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.DropboxFile::CopyEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.DropboxFile::DeleteEnabled()" />*/
	deleteEnabled: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.DropboxFile::DeleteEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.DropboxFile::DownloadEnabled()" />*/
	downloadEnabled: function () {
		return !this.isFolder();
	}
	/*<EndProperty Name="System.Boolean Infragistics.DropboxFile::DownloadEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.DropboxFile::MoveEnabled()" />*/
	moveEnabled: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.DropboxFile::MoveEnabled()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DropboxFile::MimeType()" />*/
	mimeType: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFile::MimeType()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.DropboxFile::IsInTrash()" />*/
	isInTrash: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.DropboxFile::IsInTrash()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DropboxFile::Author()" />*/
	author: function () {
		return this.resolveStringForKey("Author");
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFile::Author()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DropboxFile::ProviderOwnerName()" />*/
	providerOwnerName: function () {
		return this.resolveStringForKey("ProviderOwnerName");
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFile::ProviderOwnerName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DropboxFile::ProviderOwnerGivenName()" />*/
	providerOwnerGivenName: function () {
		return this.resolveStringForKey("ProviderOwnerGivenName");
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFile::ProviderOwnerGivenName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DropboxFile::ProviderOwnerEmail()" />*/
	providerOwnerEmail: function () {
		return this.resolveStringForKey("ProviderOwnerEmail");
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFile::ProviderOwnerEmail()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DropboxFile::EmbedUrl()" />*/
	embedUrl: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFile::EmbedUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DropboxFile::DownloadUrl()" />*/
	downloadUrl: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFile::DownloadUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DropboxFile::OpenUrl()" />*/
	openUrl: function () {
		var pathLower = $.ig.NativeStringUtility.prototype.removeLastPathComponent(this.resolveStringForKey("path_lower"));
		if (pathLower == null) {
			return null;
		}
		var pathEncoded = this.uRLEncodePathComponents(pathLower);
		var nameEncoded = $.ig.NativeRequestUtility.prototype.utility().uRLEncodeString(this.name());
		return "https://www.dropbox.com/home" + pathEncoded + "?preview=" + nameEncoded;
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFile::OpenUrl()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxFile::ResolveFilePath()" />*/
	resolveFilePath: function () {
		return this.resolveStringForKey("path_lower");
	}
	/*<EndMethod Name="System.String Infragistics.DropboxFile::ResolveFilePath()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.DropboxFile::ProviderType()" />*/
	providerType: function () {
		return $.ig.CloudProviderType.prototype.dropbox;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.DropboxFile::ProviderType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxFile::URLEncodePathComponents(System.String)" />*/
	uRLEncodePathComponents: function (path) {
		var comps = $.ig.NativeStringUtility.prototype.split(path, "/");
		for (var i = 0; i < comps.length; i++) {
			comps[i] = $.ig.NativeRequestUtility.prototype.utility().uRLEncodeString(comps[i]);
		}
		return $.ig.ArrayUtility.prototype.joinArray(comps, "/");
	}
	/*<EndMethod Name="System.String Infragistics.DropboxFile::URLEncodePathComponents(System.String)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DropboxFile::SharedFolderId()" />*/
	sharedFolderId: function () {
		return this.resolveStringForKeyPath((function () {
			var $ret = new $.ig.Array();
			$ret.add("sharing_info");
			$ret.add("shared_folder_id");
			return $ret;
		}()));
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFile::SharedFolderId()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DropboxFile::OpenInAppUrl()" />*/
	openInAppUrl: function () {
		return $.ig.DropboxFile.prototype.encodeInAppUrl(this);
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFile::OpenInAppUrl()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.DropboxFile::EncodeInAppUrl(Infragistics.CloudFile)" />*/
	encodeInAppUrl: function (cloudFile) {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.DropboxFile::EncodeInAppUrl(Infragistics.CloudFile)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DropboxFile::SharedEditLink()" />*/
	sharedEditLink: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("sharedEditLink", value);
			return value;
		} else {
			return this.resolveStringForKey("sharedEditLink");
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFile::SharedEditLink()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.DropboxFile::SharedViewLink()" />*/
	sharedViewLink: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("sharedViewLink", value);
			return value;
		} else {
			return this.resolveStringForKey("sharedViewLink");
		}
	}
	/*<EndProperty Name="System.String Infragistics.DropboxFile::SharedViewLink()" />*/
	,
	/*<BeginProperty Name="Infragistics.ContentProperties Infragistics.DropboxFile::ViewProperties()" />*/
	viewProperties: function () {
		return $.ig.DropboxFile.prototype.getViewProperties(this);
	}
	/*<EndProperty Name="Infragistics.ContentProperties Infragistics.DropboxFile::ViewProperties()" />*/
	,
	/*<BeginMethod Name="Infragistics.ContentProperties Infragistics.DropboxFile::GetViewProperties(Infragistics.CloudFile)" />*/
	getViewProperties: function (cloudFile) {
		var properties = new $.ig.ContentProperties();
		if (cloudFile.author() != null) {
			properties.owner(cloudFile.author());
		}
		if (cloudFile.isFolder()) {
			properties.contentType($.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.folder));
		} else {
			properties.contentType(cloudFile.type());
		}
		var ownerName = cloudFile.providerOwnerName();
		var ownerEmail = cloudFile.providerOwnerEmail();
		properties.contentLocation($.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.dropbox) + (ownerName == null ? " " : "\n" + ownerName) + (ownerEmail == null ? " " : "\n" + ownerEmail));
		var filePath = "";
		var path = cloudFile.resolveStringForKey("path_display");
		if (path != null) {
			var index = $.ig.NativeStringUtility.prototype.indexOf(path, cloudFile.name());
			index = index - 1;
			if (index >= 0) {
				filePath = filePath + $.ig.NativeStringUtility.prototype.substring(path, 0, index);
			}
		}
		if (filePath != "" && filePath != null) {
			if ($.ig.NativeStringUtility.prototype.substring(filePath, 0, 1).equals("/")) {
				filePath = $.ig.NativeStringUtility.prototype.substring(filePath, 1, filePath.length - 1);
			}
		}
		filePath = (cloudFile.providerOwnerGivenName() == null ? "" : cloudFile.providerOwnerGivenName() + "'s ") + $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.dropboxAccount) + "/" + filePath;
		properties.locationPath(filePath);
		return properties;
	}
	/*<EndMethod Name="Infragistics.ContentProperties Infragistics.DropboxFile::GetViewProperties(Infragistics.CloudFile)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxFile::SetCloudFileOwnerInfo(Infragistics.CPJSONObject)" />*/
	setCloudFileOwnerInfo: function (userInfo) {
		$.ig.DropboxFile.prototype.setOwnerInfo(this, userInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxFile::SetCloudFileOwnerInfo(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.DropboxFile::SetOwnerInfo(Infragistics.CloudFile, Infragistics.CPJSONObject)" />*/
	setOwnerInfo: function (cloudFile, userInfo) {
		cloudFile.setValueForKey("ProviderOwnerName", userInfo.resolveStringForKeyPath((function () {
			var $ret = new $.ig.Array();
			$ret.add("name");
			$ret.add("display_name");
			return $ret;
		}())));
		cloudFile.setValueForKey("ProviderOwnerGivenName", userInfo.resolveStringForKeyPath((function () {
			var $ret = new $.ig.Array();
			$ret.add("name");
			$ret.add("given_name");
			return $ret;
		}())));
		cloudFile.setValueForKey("ProviderOwnerEmail", userInfo.resolveStringForKey("email"));
	}
	/*<EndMethod Name="System.Void Infragistics.DropboxFile::SetOwnerInfo(Infragistics.CloudFile, Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('DropboxFile', $.ig.CloudFile.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DropboxFile" />*/

/*<BeginType Name="Infragistics.OAuthTokenStateCallback" />*/

$.ig.util.defType('OAuthTokenStateCallback', 'Object', {
	$type: new $.ig.Type('OAuthTokenStateCallback', null)
}, true);

/*<EndType Name="Infragistics.OAuthTokenStateCallback" />*/

/*<BeginType Name="Infragistics.TokenState" />*/

$.ig.util.defType('TokenState', 'Object', {
	__requestFactory: null,
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.Object.prototype.init.call(this);
		this.dataSources(new $.ig.Array());
	},
	init1: function (initNumber, requestFactory) {
		$.ig.Object.prototype.init.call(this);
		this.__requestFactory = requestFactory;
		this.dataSources(new $.ig.Array());
	},
	/*<BeginProperty Name="Infragistics.IRequestFactory Infragistics.TokenState::RequestFactory()" />*/
	requestFactory: function () {
		if (this.__requestFactory == null) {
		}
		return this.__requestFactory;
	}
	/*<EndProperty Name="Infragistics.IRequestFactory Infragistics.TokenState::RequestFactory()" />*/
	,
	__queuedRequests: null,
	__refreshTokenRequest: null,
	/*<BeginMethod Name="System.Void Infragistics.TokenState::RefreshToken(Infragistics.OAuthRequestBase, System.Boolean)" />*/
	refreshToken: function (request, elevated) {
		if (this.requestFactory() == null) {
			return;
		}
		var needsExecute = this.enqueueRequest(request);
		if (needsExecute) {
			this.__refreshTokenRequest = this.requestFactory().createRefreshRequest(this, request.provider(), this, elevated);
			this.__refreshTokenRequest.execute();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.TokenState::RefreshToken(Infragistics.OAuthRequestBase, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.TokenState::EnqueueRequest(Infragistics.IOAuthRequest)" />*/
	enqueueRequest: function (request) {
		var $self = this;
		var needsExecute = false;
		$.ig.NativeThreadUtility.prototype.lock(this, function () {
			if ($self.__queuedRequests == null) {
				$self.__queuedRequests = new $.ig.Array();
				needsExecute = true;
			}
			$self.__queuedRequests.add(request);
		});
		return needsExecute;
	}
	/*<EndMethod Name="System.Boolean Infragistics.TokenState::EnqueueRequest(Infragistics.IOAuthRequest)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.TokenState::ProcessQueuedRequests()" />*/
	processQueuedRequests: function () {
		var $self = this;
		var copy = null;
		$.ig.NativeThreadUtility.prototype.lock(this, function () {
			if ($self.__queuedRequests != null) {
				copy = new $.ig.Array();
				var count = $self.__queuedRequests.length;
				for (var i = 0; i < count; i++) {
					copy.add($self.__queuedRequests[i]);
				}
				$self.__queuedRequests = null;
			}
		});
		return copy;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.TokenState::ProcessQueuedRequests()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.TokenState::FoundTokenState(Infragistics.TokenState)" />*/
	foundTokenState: function (tokenState) {
		this.refreshSuccess();
	}
	/*<EndMethod Name="System.Void Infragistics.TokenState::FoundTokenState(Infragistics.TokenState)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.TokenState::RefreshSuccess()" />*/
	refreshSuccess: function () {
		this.__refreshTokenRequest = null;
		var toNotify = this.processQueuedRequests();
		if (toNotify != null) {
			var count = toNotify.length;
			for (var i = 0; i < count; i++) {
				var request = toNotify[i];
				request.tokenState(this);
				request.execute();
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.TokenState::RefreshSuccess()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.TokenState::RefreshError(Infragistics.CloudError)" />*/
	refreshError: function (error) {
		this.__refreshTokenRequest = null;
		var toNotify = this.processQueuedRequests();
		if (toNotify != null) {
			var count = toNotify.length;
			for (var i = 0; i < count; i++) {
				var request = toNotify[i];
				request.error(error);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.TokenState::RefreshError(Infragistics.CloudError)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.TokenState::TokenStateError(Infragistics.CloudError)" />*/
	tokenStateError: function (error) {
		this.refreshError(error);
	}
	/*<EndMethod Name="System.Void Infragistics.TokenState::TokenStateError(Infragistics.CloudError)" />*/
	,
	_additionalIdentifier: null,
	/*<BeginProperty Name="System.String Infragistics.TokenState::AdditionalIdentifier()" />*/
	additionalIdentifier: function (value) {
		if (arguments.length === 1) {
			this._additionalIdentifier = value;
			return value;
		} else {
			return this._additionalIdentifier;
		}
	}
	/*<EndProperty Name="System.String Infragistics.TokenState::AdditionalIdentifier()" />*/
	,
	_isLogin: false,
	/*<BeginProperty Name="System.Boolean Infragistics.TokenState::IsLogin()" />*/
	isLogin: function (value) {
		if (arguments.length === 1) {
			this._isLogin = value;
			return value;
		} else {
			return this._isLogin;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.TokenState::IsLogin()" />*/
	,
	_organizationId: null,
	/*<BeginProperty Name="System.String Infragistics.TokenState::OrganizationId()" />*/
	organizationId: function (value) {
		if (arguments.length === 1) {
			this._organizationId = value;
			return value;
		} else {
			return this._organizationId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.TokenState::OrganizationId()" />*/
	,
	_token: null,
	/*<BeginProperty Name="Infragistics.Token Infragistics.TokenState::Token()" />*/
	token: function (value) {
		if (arguments.length === 1) {
			this._token = value;
			return value;
		} else {
			return this._token;
		}
	}
	/*<EndProperty Name="Infragistics.Token Infragistics.TokenState::Token()" />*/
	,
	_userInfo: null,
	/*<BeginProperty Name="Infragistics.CloudAccountUserInfo Infragistics.TokenState::UserInfo()" />*/
	userInfo: function (value) {
		if (arguments.length === 1) {
			this._userInfo = value;
			return value;
		} else {
			return this._userInfo;
		}
	}
	/*<EndProperty Name="Infragistics.CloudAccountUserInfo Infragistics.TokenState::UserInfo()" />*/
	,
	_provider: 0,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.TokenState::Provider()" />*/
	provider: function (value) {
		if (arguments.length === 1) {
			this._provider = value;
			return value;
		} else {
			return this._provider;
		}
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.TokenState::Provider()" />*/
	,
	_dataSources: null,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.TokenState::DataSources()" />*/
	dataSources: function (value) {
		if (arguments.length === 1) {
			this._dataSources = value;
			return value;
		} else {
			return this._dataSources;
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.TokenState::DataSources()" />*/
	,
	/*<BeginProperty Name="Infragistics.OAuthKeys Infragistics.TokenState::ProviderKeys()" />*/
	providerKeys: function () {
		return this.requestFactory().resolveKeys(this.provider());
	}
	/*<EndProperty Name="Infragistics.OAuthKeys Infragistics.TokenState::ProviderKeys()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPJSONObject Infragistics.TokenState::GetJSON()" />*/
	getJSON: function () {
		var json = new $.ig.CPJSONObject(1);
		if (this.token() != null) {
			json.setValueForKey("token", this.token().jSONObject());
		}
		json.setValueForKey("provider", $.ig.CloudProviderTypeUtility.prototype.convertTypeToInt(this.provider()));
		json.setValueForKey("id", this.additionalIdentifier() == null ? "" : this.additionalIdentifier());
		if (this.userInfo() != null) {
			json.setValueForKey("userInfo", this.userInfo().jSONObject());
		}
		if (this.organizationId() != null) {
			json.setValueForKey("organizationId", this.organizationId());
		}
		if (this.isLogin()) {
			json.setValueForKey($.ig.TokenState.prototype._isLoginKey, this.isLogin());
		}
		return json;
	}
	/*<EndMethod Name="Infragistics.CPJSONObject Infragistics.TokenState::GetJSON()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.TokenState::LoadJSON(Infragistics.CPJSONObject)" />*/
	loadJSON: function (json) {
		if (json.containsKey("provider")) {
			this.provider($.ig.CloudProviderTypeUtility.prototype.convertIntToType(json.resolveIntegerForKey("provider")));
		}
		var deprecatedWay = false;
		if (json.containsKey("userInfo")) {
			var userDictionary = json.resolveJSONForKey("userInfo");
			if (userDictionary.containsKey("store")) {
				userDictionary = userDictionary.resolveJSONForKey("store");
			}
			this.userInfo($.ig.CloudProviderTypeUtility.prototype.convertJSONToUserInfoForType(userDictionary, this.provider()));
		} else if (json.containsKey("user")) {
			deprecatedWay = true;
			var store = $.ig.CPJSONObject.prototype.createFromString(json.resolveStringForKey("user"));
			this.userInfo($.ig.CloudProviderTypeUtility.prototype.convertJSONToUserInfoForType(store, this.provider()));
		}
		if (json.containsKey("token")) {
			if (!deprecatedWay) {
				var tokenDictionary = json.resolveJSONForKey("token");
				if (tokenDictionary.containsKey("store")) {
					tokenDictionary = tokenDictionary.resolveJSONForKey("store");
				}
				this.token(new $.ig.Token(1, tokenDictionary));
			} else {
				var store1 = $.ig.CPJSONObject.prototype.createFromString(json.resolveStringForKey("token"));
				this.token(new $.ig.Token(1, store1.resolveJSONForKey("store")));
			}
		}
		if (json.containsKey("additionalIdentifier")) {
			this.additionalIdentifier(json.resolveStringForKey("additionalIdentifier"));
		} else if (json.containsKey("id")) {
			this.additionalIdentifier(json.resolveStringForKey("id"));
		}
		if (json.containsKey("organizationId")) {
			this.organizationId(json.resolveStringForKey("organizationId"));
		}
		if (json.containsKey($.ig.TokenState.prototype.dataSourcesKey)) {
			var sources = json.resolveListForKey($.ig.TokenState.prototype.dataSourcesKey);
			this.dataSources(new $.ig.Array());
			for (var i = 0; i < sources.length; i++) {
				var source = $.ig.CPJSONObject.prototype.createFromJSONObject(sources[i]);
				if (source.containsKey("store")) {
					source = source.resolveJSONForKey("store");
				}
				this.dataSources().add(new $.ig.DataSourceAssignment(1, source));
			}
		} else {
			this.dataSources(new $.ig.Array());
		}
		this.isLogin(json.resolveBoolForKey($.ig.TokenState.prototype._isLoginKey));
	}
	/*<EndMethod Name="System.Void Infragistics.TokenState::LoadJSON(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPJSONObject Infragistics.TokenState::ConvertPayloadToJSON(System.String)" />*/
	convertPayloadToJSON: function (token) {
		var jwt = $.ig.NativeStringUtility.prototype.split(token, ".");
		if (jwt.length == 1) {
			return new $.ig.CPJSONObject(1);
		}
		var payload = jwt[1];
		payload = $.ig.NativeStringUtility.prototype.replace(payload, "_", "/");
		payload = $.ig.NativeStringUtility.prototype.replace(payload, "-", "+");
		var mod4 = payload.length % 4;
		while (mod4 > 0) {
			payload = payload + "=";
			mod4 = payload.length % 4;
		}
		var decodedString = $.ig.NativeRequestUtility.prototype.utility().base64Decode(payload);
		var json = $.ig.CPJSONObject.prototype.createFromString(decodedString);
		return json;
	}
	/*<EndMethod Name="Infragistics.CPJSONObject Infragistics.TokenState::ConvertPayloadToJSON(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.TokenState Infragistics.TokenState::LoadFromJSON(Infragistics.CPJSONObject)" />*/
	loadFromJSON: function (json) {
		var ts = new $.ig.TokenState(0);
		ts.loadJSON(json);
		return ts;
	}
	/*<EndMethod Name="Infragistics.TokenState Infragistics.TokenState::LoadFromJSON(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('TokenState', $.ig.Object.prototype.$type, [$.ig.OAuthTokenStateCallback.prototype.$type])
}, true);

/*<EndType Name="Infragistics.TokenState" />*/

/*<BeginType Name="Infragistics.EMTokenState" />*/

$.ig.util.defType('EMTokenState', 'TokenState', {
	_teamId: null,
	/*<BeginProperty Name="System.String Infragistics.EMTokenState::TeamId()" />*/
	teamId: function (value) {
		if (arguments.length === 1) {
			this._teamId = value;
			return value;
		} else {
			return this._teamId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.EMTokenState::TeamId()" />*/
	,
	init: function (initNumber, teamId) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.TokenState.prototype.init1.call(this, 1, $.ig.EMTokenStateRefreshFactory.prototype.instance());
		this.teamId(teamId);
	},
	init1: function (initNumber, teamId, requestFactory) {
		$.ig.TokenState.prototype.init1.call(this, 1, requestFactory);
		this.teamId(teamId);
	},
	$type: new $.ig.Type('EMTokenState', $.ig.TokenState.prototype.$type)
}, true);

/*<EndType Name="Infragistics.EMTokenState" />*/

/*<BeginType Name="Infragistics.IRequestFactory" />*/

$.ig.util.defType('IRequestFactory', 'Object', {
	$type: new $.ig.Type('IRequestFactory', null)
}, true);

/*<EndType Name="Infragistics.IRequestFactory" />*/

/*<BeginType Name="Infragistics.EMTokenStateRefreshFactory" />*/

$.ig.util.defType('EMTokenStateRefreshFactory', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginProperty Name="Infragistics.EMTokenStateRefreshFactory Infragistics.EMTokenStateRefreshFactory::Instance()" />*/
	instance: function (value) {
		if (arguments.length === 1) {
			$.ig.EMTokenStateRefreshFactory.prototype.__instance = value;
			return value;
		} else {
			if ($.ig.EMTokenStateRefreshFactory.prototype.__instance == null) {
				$.ig.EMTokenStateRefreshFactory.prototype.__instance = new $.ig.EMTokenStateRefreshFactory();
			}
			return $.ig.EMTokenStateRefreshFactory.prototype.__instance;
		}
	}
	/*<EndProperty Name="Infragistics.EMTokenStateRefreshFactory Infragistics.EMTokenStateRefreshFactory::Instance()" />*/
	,
	/*<BeginMethod Name="Infragistics.IRequest Infragistics.EMTokenStateRefreshFactory::CreateRefreshRequest(Infragistics.TokenState, Infragistics.OAuthProvider, Infragistics.OAuthTokenStateCallback, System.Boolean)" />*/
	createRefreshRequest: function (tokenState, provider, callback, elevated) {
		var emTokenState = tokenState;
		return new $.ig.InfragisticsRefreshTokenRequest(emTokenState.teamId(), tokenState.additionalIdentifier(), elevated, function (r, o) {
			var response = o;
			if (response != null) {
				if (response.containsKey("content")) {
					var content = response.resolveJSONForKey("content");
					if (content.containsKey("access_token")) {
						response = content;
					}
				}
				if (response.containsKey("access_token")) {
					tokenState.token().setAccessToken(response.resolveStringForKey("access_token"));
				}
				if (response.containsKey("expiration_time")) {
					tokenState.token().setExpirationTime(response.resolveObjectForKey("expiration_time"));
				}
				tokenState.refreshSuccess();
				if (callback != null && tokenState != callback) {
					callback.foundTokenState(tokenState);
				}
			}
		}, function (r, e) {
			tokenState.refreshError(e);
			if (callback != null && tokenState != callback) {
				callback.tokenStateError(e);
			}
		});
	}
	/*<EndMethod Name="Infragistics.IRequest Infragistics.EMTokenStateRefreshFactory::CreateRefreshRequest(Infragistics.TokenState, Infragistics.OAuthProvider, Infragistics.OAuthTokenStateCallback, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.OAuthKeys Infragistics.EMTokenStateRefreshFactory::ResolveKeys(Infragistics.CloudProviderType)" />*/
	resolveKeys: function (cloudProviderType) {
		var oauthDelegate = $.ig.RequestDelegateManager.prototype.utility().oAuthDelegate();
		if (oauthDelegate == null) {
			return new $.ig.OAuthKeys(null, null, null, null, null);
		} else {
			return $.ig.RequestDelegateManager.prototype.utility().oAuthDelegate().resolveKeys(cloudProviderType);
		}
	}
	/*<EndMethod Name="Infragistics.OAuthKeys Infragistics.EMTokenStateRefreshFactory::ResolveKeys(Infragistics.CloudProviderType)" />*/
	,
	$type: new $.ig.Type('EMTokenStateRefreshFactory', $.ig.Object.prototype.$type, [$.ig.IRequestFactory.prototype.$type])
}, true);

/*<EndType Name="Infragistics.EMTokenStateRefreshFactory" />*/

/*<BeginType Name="Infragistics.GenericCloudFile" />*/

$.ig.util.defType('GenericCloudFile', 'CloudFile', {
	init: function (initNumber, json) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.CloudFile.prototype.init1.call(this, 1, json, json.resolveStringForKey("providerId"));
	},
	init1: function (initNumber) {
		$.ig.CloudFile.prototype.init.call(this, 0);
	},
	/*<BeginMethod Name="Infragistics.GenericCloudFile Infragistics.GenericCloudFile::CreateFromCloudFile(Infragistics.CloudFile, System.String, System.String, Infragistics.CloudProviderType)" />*/
	createFromCloudFile: function (file, providerTeamId, providerId, cloudProviderType) {
		if ($.ig.util.cast($.ig.GenericCloudFile.prototype.$type, file) !== null) {
			return file;
		} else {
			var clone = file.cloneJSON();
			var gf = new $.ig.GenericCloudFile(0, clone);
			gf.copy(file);
			gf.removeForKey("id");
			gf.setValueForKey("teamId", providerTeamId);
			gf.providerId(providerId);
			gf.setValueForKey("providerType", $.ig.CloudProviderTypeUtility.prototype.convertTypeToString(cloudProviderType));
			return gf;
		}
	}
	/*<EndMethod Name="Infragistics.GenericCloudFile Infragistics.GenericCloudFile::CreateFromCloudFile(Infragistics.CloudFile, System.String, System.String, Infragistics.CloudProviderType)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GenericCloudFile::Copy(Infragistics.CloudFile)" />*/
	copy: function (file) {
		this.setValueForKey("sectionKey", file.sectionKey());
		this.setValueForKey("originalType", file.originalType());
		this.setValueForKey("type", file.type());
		this.setValueForKey("isFolder", file.isFolder());
		this.setValueForKey("isInTrash", file.isInTrash());
		this.setValueForKey("mimeType", file.mimeType());
		this.setValueForKey("name", file.name());
		this.setValueForKey("pathIdentifier", file.pathIdentifier());
		this.setValueForKey("size", file.size());
		this.setValueForKey("author", file.author());
		this.setValueForKey("providerOwnerName", file.providerOwnerName());
		this.setValueForKey("providerOwnerGivenName", file.providerOwnerGivenName());
		this.setValueForKey("providerOwnerEmail", file.providerOwnerEmail());
		this.setValueForKey("embedUrl", file.embedUrl());
		this.setValueForKey("downloadUrl", file.downloadUrl());
		this.setValueForKey("openUrl", file.openUrl());
		this.setValueForKey("openInAppUrl", file.openInAppUrl());
		this.setValueForKey("downloadEnabled", file.downloadEnabled());
		this.setValueForKey("deleteEnabled", file.deleteEnabled());
		this.setValueForKey("providerType", file.resolveStringForKey("providerType"));
		this.setValueForKey("teamId", file.resolveStringForKey("teamId"));
		this.setValueForKey("providerId", file.resolveStringForKey("providerId"));
		if (file.modifiedDate() != null && +(file.modifiedDate().rawDate()) != +null) {
			this.setValueForKey("modifiedDate", file.modifiedDate().rFC3339String());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.GenericCloudFile::Copy(Infragistics.CloudFile)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GenericCloudFile::SetupLinkCollections()" />*/
	setupLinkCollections: function () {
		$.ig.CloudFile.prototype.setupLinkCollections.call(this);
		if (this.teamId() != null) {
			this.processParentLink($.ig.DocumentLink.prototype.createParentTeamLink(this.teamId()));
		}
	}
	/*<EndMethod Name="System.Void Infragistics.GenericCloudFile::SetupLinkCollections()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.GenericCloudFile::CanTrack()" />*/
	canTrack: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.GenericCloudFile::CanTrack()" />*/
	,
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.GenericCloudFile::CreateNewBackingStoreObject(Infragistics.CPJSONObject)" />*/
	createNewBackingStoreObject: function (json) {
		return new $.ig.GenericCloudFile(0, json);
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.GenericCloudFile::CreateNewBackingStoreObject(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.GenericCloudFile::CreateNewBackingStoreObjectWithId(System.String)" />*/
	createNewBackingStoreObjectWithId: function (identifier) {
		var item = new $.ig.GenericCloudFile(1);
		item.identifier(identifier);
		return item;
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.GenericCloudFile::CreateNewBackingStoreObjectWithId(System.String)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GenericCloudFile::SectionKey()" />*/
	sectionKey: function () {
		return this.resolveStringForKey("sectionKey");
	}
	/*<EndProperty Name="System.String Infragistics.GenericCloudFile::SectionKey()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GenericCloudFile::OriginalType()" />*/
	originalType: function () {
		var type = this.resolveStringForKey("originalType");
		if (type != null) {
			return type;
		}
		return $.ig.CloudFile.prototype.originalType.call(this);
	}
	/*<EndProperty Name="System.String Infragistics.GenericCloudFile::OriginalType()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GenericCloudFile::Type()" />*/
	type: function () {
		return this.resolveStringForKey("type");
	}
	/*<EndProperty Name="System.String Infragistics.GenericCloudFile::Type()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.GenericCloudFile::IsFolder()" />*/
	isFolder: function () {
		return this.resolveBoolForKey("isFolder");
	}
	/*<EndProperty Name="System.Boolean Infragistics.GenericCloudFile::IsFolder()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.GenericCloudFile::CopyEnabled()" />*/
	copyEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.GenericCloudFile::CopyEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.GenericCloudFile::DeleteEnabled()" />*/
	deleteEnabled: function () {
		return this.resolveBoolForKey("deleteEnabled");
	}
	/*<EndProperty Name="System.Boolean Infragistics.GenericCloudFile::DeleteEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.GenericCloudFile::DownloadEnabled()" />*/
	downloadEnabled: function () {
		return this.resolveBoolForKey("downloadEnabled");
	}
	/*<EndProperty Name="System.Boolean Infragistics.GenericCloudFile::DownloadEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.GenericCloudFile::MoveEnabled()" />*/
	moveEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.GenericCloudFile::MoveEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.GenericCloudFile::IsInTrash()" />*/
	isInTrash: function () {
		return this.resolveBoolForKey("isInTrash");
	}
	/*<EndProperty Name="System.Boolean Infragistics.GenericCloudFile::IsInTrash()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GenericCloudFile::MimeType()" />*/
	mimeType: function () {
		return this.resolveStringForKey("mimeType");
	}
	/*<EndProperty Name="System.String Infragistics.GenericCloudFile::MimeType()" />*/
	,
	__mDate: null,
	__mdateChecked: false,
	_isDateNull: false,
	/*<BeginProperty Name="Infragistics.CPDateTime Infragistics.GenericCloudFile::ModifiedDate()" />*/
	modifiedDate: function () {
		if (!this.__mdateChecked) {
			this._isDateNull = true;
			this.__mdateChecked = true;
			if (this.containsKey("modifiedDate")) {
				this._isDateNull = false;
				this.__mDate = $.ig.CPDateTime.prototype.createFromUTCTimeString(this.resolveStringForKey("modifiedDate"), $.ig.CPDateTime.prototype.getRFC3339FormatString());
			}
		}
		if (this._isDateNull) {
			return null;
		}
		return this.__mDate;
	}
	/*<EndProperty Name="Infragistics.CPDateTime Infragistics.GenericCloudFile::ModifiedDate()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GenericCloudFile::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			$.ig.ActivityTrackingBackingStore.prototype.name.call(this, value);
			return value;
		} else {
			return this.resolveStringForKey("name");
		}
	}
	/*<EndProperty Name="System.String Infragistics.GenericCloudFile::Name()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GenericCloudFile::PathIdentifier()" />*/
	pathIdentifier: function () {
		return this.resolveStringForKey("pathIdentifier");
	}
	/*<EndProperty Name="System.String Infragistics.GenericCloudFile::PathIdentifier()" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.GenericCloudFile::Size()" />*/
	size: function () {
		return this.resolveLongForKey("size");
	}
	/*<EndProperty Name="System.Int64 Infragistics.GenericCloudFile::Size()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GenericCloudFile::TeamId()" />*/
	teamId: function () {
		return this.resolveStringForKey("teamId");
	}
	/*<EndProperty Name="System.String Infragistics.GenericCloudFile::TeamId()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GenericCloudFile::Author()" />*/
	author: function () {
		return this.resolveStringForKey("author");
	}
	/*<EndProperty Name="System.String Infragistics.GenericCloudFile::Author()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GenericCloudFile::ProviderOwnerName()" />*/
	providerOwnerName: function () {
		return this.resolveStringForKey("providerOwnerName");
	}
	/*<EndProperty Name="System.String Infragistics.GenericCloudFile::ProviderOwnerName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GenericCloudFile::ProviderOwnerGivenName()" />*/
	providerOwnerGivenName: function () {
		return this.resolveStringForKey("providerOwnerGivenName");
	}
	/*<EndProperty Name="System.String Infragistics.GenericCloudFile::ProviderOwnerGivenName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GenericCloudFile::ProviderOwnerEmail()" />*/
	providerOwnerEmail: function () {
		return this.resolveStringForKey("providerOwnerEmail");
	}
	/*<EndProperty Name="System.String Infragistics.GenericCloudFile::ProviderOwnerEmail()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GenericCloudFile::EmbedUrl()" />*/
	embedUrl: function () {
		return this.resolveStringForKey("embedUrl");
	}
	/*<EndProperty Name="System.String Infragistics.GenericCloudFile::EmbedUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GenericCloudFile::DownloadUrl()" />*/
	downloadUrl: function () {
		return this.resolveStringForKey("downloadUrl");
	}
	/*<EndProperty Name="System.String Infragistics.GenericCloudFile::DownloadUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GenericCloudFile::OpenUrl()" />*/
	openUrl: function () {
		return this.resolveStringForKey("openUrl");
	}
	/*<EndProperty Name="System.String Infragistics.GenericCloudFile::OpenUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GenericCloudFile::OpenInAppUrl()" />*/
	openInAppUrl: function () {
		if (this.providerType() == ($.ig.CloudProviderType.prototype.microsoft) || this.providerType() == ($.ig.CloudProviderType.prototype.microsoftProvider)) {
			return $.ig.MicrosoftFile.prototype.encodeInAppUrl(this, this.pathIdentifier());
		} else if (this.providerType() == ($.ig.CloudProviderType.prototype.sharePoint)) {
			return $.ig.SharePointFile.prototype.encodeInAppUrl(this);
		} else if (this.providerType() == ($.ig.CloudProviderType.prototype.google) || this.providerType() == ($.ig.CloudProviderType.prototype.googleProvider)) {
			return $.ig.GoogleFile.prototype.encodeInAppUrl(this);
		} else {
			return null;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GenericCloudFile::OpenInAppUrl()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GenericCloudFile::ResolveFilePath()" />*/
	resolveFilePath: function () {
		return this.pathIdentifier();
	}
	/*<EndMethod Name="System.String Infragistics.GenericCloudFile::ResolveFilePath()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.GenericCloudFile::ProviderType()" />*/
	providerType: function () {
		var s = this.resolveStringForKey("providerType");
		if (s == null) {
			return $.ig.CloudProviderType.prototype.notSet;
		}
		return $.ig.CloudProviderTypeUtility.prototype.convertStringToType(s);
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.GenericCloudFile::ProviderType()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GenericCloudFile::SharedEditLink()" />*/
	sharedEditLink: function (value) {
		if (arguments.length === 1) {
			this.setStringProperty("sharedEditLink", value, null);
			return value;
		} else {
			return this.resolveStringForKey("sharedEditLink");
		}
	}
	/*<EndProperty Name="System.String Infragistics.GenericCloudFile::SharedEditLink()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GenericCloudFile::SharedViewLink()" />*/
	sharedViewLink: function (value) {
		if (arguments.length === 1) {
			this.setStringProperty("sharedViewLink", value, null);
			return value;
		} else {
			return this.resolveStringForKey("sharedViewLink");
		}
	}
	/*<EndProperty Name="System.String Infragistics.GenericCloudFile::SharedViewLink()" />*/
	,
	/*<BeginProperty Name="Infragistics.ContentProperties Infragistics.GenericCloudFile::ViewProperties()" />*/
	viewProperties: function () {
		if (this.supportsViewProperties()) {
			if (this.providerType() == ($.ig.CloudProviderType.prototype.microsoft) || this.providerType() == ($.ig.CloudProviderType.prototype.microsoftProvider)) {
				return $.ig.MicrosoftFile.prototype.getViewProperties(this);
			} else if (this.providerType() == ($.ig.CloudProviderType.prototype.google) || this.providerType() == ($.ig.CloudProviderType.prototype.googleProvider)) {
				return $.ig.GoogleFile.prototype.getViewProperties(this);
			} else if (this.providerType() == ($.ig.CloudProviderType.prototype.dropbox)) {
				return $.ig.DropboxFile.prototype.getViewProperties(this);
			} else if (this.providerType() == ($.ig.CloudProviderType.prototype.box)) {
				return $.ig.BoxFile.prototype.getViewProperties(this);
			} else if (this.providerType() == ($.ig.CloudProviderType.prototype.sharePoint)) {
				return $.ig.SharePointFile.prototype.getViewProperties(this);
			}
		}
		return null;
	}
	/*<EndProperty Name="Infragistics.ContentProperties Infragistics.GenericCloudFile::ViewProperties()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GenericCloudFile::SetCloudFileOwnerInfo(Infragistics.CPJSONObject)" />*/
	setCloudFileOwnerInfo: function (userInfo) {
		if (this.providerType() == ($.ig.CloudProviderType.prototype.microsoft) || this.providerType() == ($.ig.CloudProviderType.prototype.microsoftProvider)) {
			$.ig.MicrosoftFile.prototype.setOwnerInfo(this, userInfo);
		} else if (this.providerType() == ($.ig.CloudProviderType.prototype.google) || this.providerType() == ($.ig.CloudProviderType.prototype.googleProvider)) {
			$.ig.GoogleFile.prototype.setOwnerInfo(this, userInfo);
		} else if (this.providerType() == ($.ig.CloudProviderType.prototype.dropbox)) {
			$.ig.DropboxFile.prototype.setOwnerInfo(this, userInfo);
		} else if (this.providerType() == ($.ig.CloudProviderType.prototype.box)) {
			$.ig.BoxFile.prototype.setOwnerInfo(this, userInfo);
		} else if (this.providerType() == ($.ig.CloudProviderType.prototype.sharePoint)) {
			$.ig.SharePointFile.prototype.setOwnerInfo(this, userInfo);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.GenericCloudFile::SetCloudFileOwnerInfo(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GenericCloudFile::RetrieveEmbedUrl()" />*/
	retrieveEmbedUrl: function () {
		if (this.providerType() == ($.ig.CloudProviderType.prototype.sharePoint)) {
			return $.ig.SharePointFile.prototype.determineEmbedUrl(this);
		} else {
			return this.embedUrl();
		}
	}
	/*<EndMethod Name="System.String Infragistics.GenericCloudFile::RetrieveEmbedUrl()" />*/
	,
	$type: new $.ig.Type('GenericCloudFile', $.ig.CloudFile.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GenericCloudFile" />*/

/*<BeginType Name="Infragistics.GoogleAccountUserInfo" />*/

$.ig.util.defType('GoogleAccountUserInfo', 'CloudAccountUserInfo', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.CloudAccountUserInfo.prototype.init.call(this, 0);
	},
	init1: function (initNumber, response) {
		$.ig.CloudAccountUserInfo.prototype.init1.call(this, 1, response);
	},
	/*<BeginMethod Name="System.String Infragistics.GoogleAccountUserInfo::GetDisplayName()" />*/
	getDisplayName: function () {
		return this.resolveStringForKey("name");
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAccountUserInfo::GetDisplayName()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleAccountUserInfo::GetEmail()" />*/
	getEmail: function () {
		return this.resolveStringForKey("email");
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAccountUserInfo::GetEmail()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleAccountUserInfo::GetUserId()" />*/
	getUserId: function () {
		return this.resolveStringForKey("sub");
	}
	/*<EndMethod Name="System.String Infragistics.GoogleAccountUserInfo::GetUserId()" />*/
	,
	$type: new $.ig.Type('GoogleAccountUserInfo', $.ig.CloudAccountUserInfo.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleAccountUserInfo" />*/

/*<BeginType Name="Infragistics.GoogleFile" />*/

$.ig.util.defType('GoogleFile', 'CloudFile', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.CloudFile.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json, providerId) {
		$.ig.CloudFile.prototype.init1.call(this, 1, json, providerId);
		if (this.isMyDrive()) {
			this.setValueForKey("mimeType", $.ig.GoogleFile.prototype.googleMimeTypeDriveRoot);
			this.setValueForKey("name", $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.myDrive));
			this.setValueForKey("id", $.ig.GoogleFile.prototype.googleMimeTypeDriveRoot);
		}
	},
	/*<BeginMethod Name="Infragistics.GoogleFile Infragistics.GoogleFile::SpecialFileForId(System.String)" />*/
	specialFileForId: function (fileId) {
		$.ig.GoogleFile.prototype.ensureSpecialFolders();
		if ($.ig.NativeDictionaryUtility.prototype.containsKey($.ig.GoogleFile.prototype.__specialFoldersLookup, fileId)) {
			return $.ig.GoogleFile.prototype.__specialFoldersLookup.item(fileId);
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.GoogleFile Infragistics.GoogleFile::SpecialFileForId(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleFile::EnsureSpecialFolders()" />*/
	ensureSpecialFolders: function () {
		if ($.ig.GoogleFile.prototype.__specialFolders == null) {
			$.ig.GoogleFile.prototype.__specialFoldersLookup = new $.ig.Dictionary(0);
			$.ig.GoogleFile.prototype.__specialFolders = new $.ig.Array();
			$.ig.GoogleFile.prototype.createSpecialFolder($.ig.GoogleFile.prototype.googleMimeTypeDriveRoot, $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.myDrive), $.ig.GoogleFile.prototype.googleDriveRootId, "'root' in parents and trashed=false");
			$.ig.GoogleFile.prototype.createSpecialFolder($.ig.GoogleFile.prototype.googleMimeTypeSharedDrives, $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.sharedDrives), $.ig.GoogleFile.prototype.googleDriveSharedDrivesId, null);
			$.ig.GoogleFile.prototype.createSpecialFolder($.ig.GoogleFile.prototype.googleMimeTypeSharedWithMe, $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.sharedWithMe), "fp_sharedWithMe", "sharedWithMe = true");
			$.ig.GoogleFile.prototype.createSpecialFolder($.ig.GoogleFile.prototype.googleMimeTypeStarred, $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.starred), "fp_starred", "starred = true");
			$.ig.GoogleFile.prototype.createSpecialFolder($.ig.GoogleFile.prototype.googleMimeTypeTrash, $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.trash), "fp_trash", "trashed = true");
		}
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleFile::EnsureSpecialFolders()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.GoogleFile::SpecialFolders()" />*/
	specialFolders: function () {
		$.ig.GoogleFile.prototype.ensureSpecialFolders();
		return $.ig.GoogleFile.prototype.__specialFolders;
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.GoogleFile::SpecialFolders()" />*/
	,
	/*<BeginMethod Name="Infragistics.GoogleFile Infragistics.GoogleFile::CreateSpecialFolder(System.String, System.String, System.String, System.String)" />*/
	createSpecialFolder: function (mimeType, name, id, query) {
		var properties = new $.ig.CPJSONObject(1);
		properties.setValueForKey("mimeType", mimeType);
		properties.setValueForKey("name", name);
		properties.setValueForKey("id", id);
		properties.setValueForKey("query", query);
		var file = new $.ig.GoogleFile(1, properties, null);
		$.ig.GoogleFile.prototype.__specialFolders.add(file);
		$.ig.GoogleFile.prototype.__specialFoldersLookup.item(id, file);
		return file;
	}
	/*<EndMethod Name="Infragistics.GoogleFile Infragistics.GoogleFile::CreateSpecialFolder(System.String, System.String, System.String, System.String)" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleFile::IsFolder()" />*/
	isFolder: function () {
		var mimeType = this.resolveStringForKey("mimeType");
		if (mimeType != null) {
			if (mimeType.equals("application/vnd.google-apps.folder")) {
				return true;
			}
			var count = $.ig.GoogleFile.prototype.specialFolders().length;
			for (var i = 0; i < count; i++) {
				var file = $.ig.GoogleFile.prototype.specialFolders()[i];
				if (mimeType.equals(file.mimeType())) {
					return true;
				}
			}
		}
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleFile::IsFolder()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleFile::Type()" />*/
	type: function () {
		if (this.mimeType().equals($.ig.GoogleFile.prototype.googleMimeTypeDriveRoot)) {
			return $.ig.CloudFile.prototype.googleDriveMyDrive;
		} else if (this.mimeType().equals($.ig.GoogleFile.prototype.googleMimeTypeSharedWithMe)) {
			return $.ig.CloudFile.prototype.googleDriveSharedWithMe;
		} else if (this.mimeType().equals($.ig.GoogleFile.prototype.googleMimeTypeStarred)) {
			return $.ig.CloudFile.prototype.googleDriveStarred;
		} else if (this.mimeType().equals($.ig.GoogleFile.prototype.googleMimeTypeTrash)) {
			return $.ig.CloudFile.prototype.googleDriveTrash;
		}
		return $.ig.CloudFile.prototype.type.call(this);
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFile::Type()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.GoogleFile::IsRootFolder()" />*/
	isRootFolder: function () {
		return this.pathIdentifier() == "root";
	}
	/*<EndMethod Name="System.Boolean Infragistics.GoogleFile::IsRootFolder()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleFile::CopyEnabled()" />*/
	copyEnabled: function () {
		return !this.isCustomFolder() && !this.isRootFolder();
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleFile::CopyEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleFile::DeleteEnabled()" />*/
	deleteEnabled: function () {
		return !this.isCustomFolder() && !this.isRootFolder();
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleFile::DeleteEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleFile::DownloadEnabled()" />*/
	downloadEnabled: function () {
		return !this.isCustomFolder() && !this.isRootFolder() && !this.isFolder() && !this.isAppFile() && !$.ig.CPStringUtility.prototype.isNullOrEmpty(this.type());
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleFile::DownloadEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleFile::MoveEnabled()" />*/
	moveEnabled: function () {
		return !this.isCustomFolder() && !this.isRootFolder();
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleFile::MoveEnabled()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleFile::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			$.ig.ActivityTrackingBackingStore.prototype.name.call(this, value);
			return value;
		} else {
			return this.resolveStringForKey("name");
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFile::Name()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleFile::ExtractId(System.String)" />*/
	extractId: function (pathIdentifier) {
		return $.ig.CloudFile.prototype.extractPathIdentifierComponent(pathIdentifier, 0);
	}
	/*<EndMethod Name="System.String Infragistics.GoogleFile::ExtractId(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.GoogleFile::IsInSharedDrive(System.String)" />*/
	isInSharedDrive: function (pathIdentifier) {
		if (pathIdentifier == null || !$.ig.NativeStringUtility.prototype.contains(pathIdentifier, $.ig.CloudFile.prototype.pATH_SEPARATOR)) {
			return false;
		}
		var driveId = $.ig.CloudFile.prototype.extractPathIdentifierComponent(pathIdentifier, 1);
		return driveId != null && driveId.length > 0;
	}
	/*<EndMethod Name="System.Boolean Infragistics.GoogleFile::IsInSharedDrive(System.String)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleFile::PathIdentifier()" />*/
	pathIdentifier: function () {
		var driveId = this.sharedDriveId();
		var fileId = this.resolveStringForKey("id");
		if (driveId == null || $.ig.NativeStringUtility.prototype.contains(fileId, $.ig.CloudFile.prototype.pATH_SEPARATOR)) {
			return fileId;
		} else {
			return fileId + $.ig.CloudFile.prototype.pATH_SEPARATOR + driveId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFile::PathIdentifier()" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.GoogleFile::Size()" />*/
	size: function () {
		var strSize = this.resolveStringForKey("size");
		return strSize == null ? 0 : $.ig.NativeRequestUtility.prototype.utility().tryParseLong(strSize);
	}
	/*<EndProperty Name="System.Int64 Infragistics.GoogleFile::Size()" />*/
	,
	__mDate: null,
	__mdateChecked: false,
	/*<BeginProperty Name="Infragistics.CPDateTime Infragistics.GoogleFile::ModifiedDate()" />*/
	modifiedDate: function () {
		if (!this.__mdateChecked) {
			this.__mdateChecked = true;
			this.__mDate = $.ig.CPDateTime.prototype.createFromUTCTimeString(this.resolveStringForKey("modifiedTime"), $.ig.DateUtility.prototype.getRFC3339FormatStringWithtMilliseconds());
		}
		return this.__mDate;
	}
	/*<EndProperty Name="Infragistics.CPDateTime Infragistics.GoogleFile::ModifiedDate()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleFile::MimeType()" />*/
	mimeType: function () {
		return this.resolveStringForKey("mimeType");
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFile::MimeType()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleFile::AlternateLink()" />*/
	alternateLink: function () {
		return this.resolveStringForKey("webViewLink");
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFile::AlternateLink()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleFile::ParentPathIdentifier()" />*/
	parentPathIdentifier: function () {
		var parents = this.parents();
		if (parents.length > 0) {
			return parents[0];
		} else {
			return null;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFile::ParentPathIdentifier()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.GoogleFile::Parents()" />*/
	parents: function () {
		var parents = this.resolveListForKey("parents");
		if (parents == null) {
			return new $.ig.Array();
		}
		return parents;
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.GoogleFile::Parents()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.GoogleFile::Owners()" />*/
	owners: function () {
		var owners = this.resolveListForKey("owners");
		if (owners == null) {
			return new $.ig.Array();
		}
		return owners;
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.GoogleFile::Owners()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleFile::IsSharedFile()" />*/
	isSharedFile: function () {
		return this.resolveBoolForKey("shared");
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleFile::IsSharedFile()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleFile::IsMyDrive()" />*/
	isMyDrive: function () {
		var isFromAuthenticatedUser = false;
		var owners = this.owners();
		if (owners.length > 0) {
			var json = $.ig.CPJSONObject.prototype.createFromJSONObject(owners[0]);
			isFromAuthenticatedUser = json.resolveBoolForKey("me");
		}
		return (this.isFolder() && this.parents().length == 0 && isFromAuthenticatedUser && !this.isSharedFile());
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleFile::IsMyDrive()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.GoogleFile::IsInTrash()" />*/
	isInTrash: function () {
		return this.resolveBoolForKey("trashed");
	}
	/*<EndProperty Name="System.Boolean Infragistics.GoogleFile::IsInTrash()" />*/
	,
	__author: null,
	/*<BeginProperty Name="System.String Infragistics.GoogleFile::Author()" />*/
	author: function () {
		if (this.__author == null) {
			var ownersList = this.owners();
			if (ownersList != null && ownersList.length > 0) {
				var json = $.ig.CPJSONObject.prototype.createFromJSONObject(ownersList[0]);
				this.__author = json.resolveStringForKey("displayName");
			}
		}
		return this.__author;
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFile::Author()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleFile::ProviderOwnerName()" />*/
	providerOwnerName: function () {
		return this.resolveStringForKey("ProviderOwnerName");
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFile::ProviderOwnerName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleFile::ProviderOwnerGivenName()" />*/
	providerOwnerGivenName: function () {
		return this.resolveStringForKey("ProviderOwnerGivenName");
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFile::ProviderOwnerGivenName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleFile::ProviderOwnerEmail()" />*/
	providerOwnerEmail: function () {
		return this.resolveStringForKey("ProviderOwnerEmail");
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFile::ProviderOwnerEmail()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleFile::EmbedUrl()" />*/
	embedUrl: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFile::EmbedUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleFile::DownloadUrl()" />*/
	downloadUrl: function () {
		return this.resolveStringForKey("webContentLink");
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFile::DownloadUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleFile::OpenUrl()" />*/
	openUrl: function () {
		return this.resolveStringForKey("webViewLink");
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFile::OpenUrl()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleFile::ResolveFilePath()" />*/
	resolveFilePath: function () {
		return this.parentPathIdentifier();
	}
	/*<EndMethod Name="System.String Infragistics.GoogleFile::ResolveFilePath()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleFile::ResolveDestinationPathWithFile(Infragistics.CloudFile)" />*/
	resolveDestinationPathWithFile: function (file) {
		return this.pathIdentifier();
	}
	/*<EndMethod Name="System.String Infragistics.GoogleFile::ResolveDestinationPathWithFile(Infragistics.CloudFile)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.GoogleFile::IsCustomFolder()" />*/
	isCustomFolder: function () {
		if (this.pathIdentifier().length >= 3) {
			return $.ig.NativeStringUtility.prototype.startsWith(this.pathIdentifier(), "fp_");
		} else {
			return false;
		}
	}
	/*<EndMethod Name="System.Boolean Infragistics.GoogleFile::IsCustomFolder()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.GoogleFile::IsAppFile()" />*/
	isAppFile: function () {
		var type = this.type();
		return ($.ig.CloudFile.prototype.googleTypeDoc.equals(type) || $.ig.CloudFile.prototype.googleTypeSpreadSheet.equals(type) || $.ig.CloudFile.prototype.googleTypeSlides.equals(type));
	}
	/*<EndMethod Name="System.Boolean Infragistics.GoogleFile::IsAppFile()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.GoogleFile::IsValidDestination()" />*/
	isValidDestination: function () {
		return !this.isCustomFolder();
	}
	/*<EndMethod Name="System.Boolean Infragistics.GoogleFile::IsValidDestination()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.GoogleFile::PinEnabled()" />*/
	pinEnabled: function () {
		return !this.isCustomFolder() && !this.isRootFolder();
	}
	/*<EndMethod Name="System.Boolean Infragistics.GoogleFile::PinEnabled()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleFile::OpenInAppUrl()" />*/
	openInAppUrl: function () {
		return $.ig.GoogleFile.prototype.encodeInAppUrl(this);
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFile::OpenInAppUrl()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GoogleFile::EncodeInAppUrl(Infragistics.CloudFile)" />*/
	encodeInAppUrl: function (cloudFile) {
		var scheme = $.ig.CloudFile.prototype.getMSOfficeUriSchemeName(cloudFile);
		var type = cloudFile.type();
		if (scheme != null) {
			return scheme + "://" + cloudFile.openUrl();
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.GoogleFile::EncodeInAppUrl(Infragistics.CloudFile)" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.GoogleFile::ProviderType()" />*/
	providerType: function () {
		return $.ig.CloudProviderType.prototype.google;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.GoogleFile::ProviderType()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleFile::ResourceVersionIdentifier()" />*/
	resourceVersionIdentifier: function () {
		return this.resolveStringForKey("version");
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFile::ResourceVersionIdentifier()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleFile::SharedDriveId()" />*/
	sharedDriveId: function () {
		return this.resolveStringForKey("driveId");
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFile::SharedDriveId()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleFile::SharedEditLink()" />*/
	sharedEditLink: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("sharedEditLink", value);
			return value;
		} else {
			return this.resolveStringForKey("sharedEditLink");
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFile::SharedEditLink()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleFile::SharedViewLink()" />*/
	sharedViewLink: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("sharedViewLink", value);
			return value;
		} else {
			return this.resolveStringForKey("sharedViewLink");
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFile::SharedViewLink()" />*/
	,
	/*<BeginProperty Name="Infragistics.ContentProperties Infragistics.GoogleFile::ViewProperties()" />*/
	viewProperties: function () {
		return $.ig.GoogleFile.prototype.getViewProperties(this);
	}
	/*<EndProperty Name="Infragistics.ContentProperties Infragistics.GoogleFile::ViewProperties()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.GoogleFile::LocationPath()" />*/
	locationPath: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("locationPath", value);
			return value;
		} else {
			return this.resolveStringForKey("locationPath");
		}
	}
	/*<EndProperty Name="System.String Infragistics.GoogleFile::LocationPath()" />*/
	,
	/*<BeginMethod Name="Infragistics.ContentProperties Infragistics.GoogleFile::GetViewProperties(Infragistics.CloudFile)" />*/
	getViewProperties: function (cloudFile) {
		var properties = new $.ig.ContentProperties();
		if (cloudFile.author() != null) {
			properties.owner(cloudFile.author());
		}
		if (cloudFile.isFolder()) {
			properties.contentType($.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.folder));
		} else {
			var fileType = cloudFile.type();
			if (fileType.toLowerCase().equals("googledoc")) {
				fileType = $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.googleDoc);
			} else if (fileType.toLowerCase().equals("googlespreadsheet")) {
				fileType = $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.googleSheet);
			} else if (fileType.toLowerCase().equals("googleslides")) {
				fileType = $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.googleSlide);
			}
			properties.contentType(fileType);
		}
		var ownerName = cloudFile.providerOwnerName();
		var ownerEmail = cloudFile.providerOwnerEmail();
		properties.contentLocation($.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.google) + (ownerName == null ? " " : "\n" + ownerName) + (ownerEmail == null ? " " : "\n" + ownerEmail));
		var filePath = cloudFile.locationPath() == null ? "" : cloudFile.locationPath();
		if (!$.ig.CPStringUtility.prototype.isNullOrEmpty(filePath)) {
			if ($.ig.NativeStringUtility.prototype.substring(filePath, 0, 1).equals("/")) {
				filePath = $.ig.NativeStringUtility.prototype.substring(filePath, 1, filePath.length - 1);
			}
		}
		filePath = (cloudFile.providerOwnerGivenName() == null ? "" : cloudFile.providerOwnerGivenName() + "'s ") + $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.googleAccount) + "/" + filePath;
		properties.locationPath(filePath);
		return properties;
	}
	/*<EndMethod Name="Infragistics.ContentProperties Infragistics.GoogleFile::GetViewProperties(Infragistics.CloudFile)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleFile::SetCloudFileOwnerInfo(Infragistics.CPJSONObject)" />*/
	setCloudFileOwnerInfo: function (userInfo) {
		$.ig.GoogleFile.prototype.setOwnerInfo(this, userInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleFile::SetCloudFileOwnerInfo(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GoogleFile::SetOwnerInfo(Infragistics.CloudFile, Infragistics.CPJSONObject)" />*/
	setOwnerInfo: function (cloudFile, userInfo) {
		cloudFile.setValueForKey("ProviderOwnerName", userInfo.resolveStringForKey("name"));
		cloudFile.setValueForKey("ProviderOwnerGivenName", userInfo.resolveStringForKey("given_name"));
		cloudFile.setValueForKey("ProviderOwnerEmail", userInfo.resolveStringForKey("email"));
	}
	/*<EndMethod Name="System.Void Infragistics.GoogleFile::SetOwnerInfo(Infragistics.CloudFile, Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('GoogleFile', $.ig.CloudFile.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GoogleFile" />*/

/*<BeginType Name="Infragistics.HubspotAccountUserInfo" />*/

$.ig.util.defType('HubspotAccountUserInfo', 'CloudAccountUserInfo', {
	init: function (json) {
		$.ig.CloudAccountUserInfo.prototype.init1.call(this, 1, json);
	},
	/*<BeginMethod Name="System.String Infragistics.HubspotAccountUserInfo::GetDisplayName()" />*/
	getDisplayName: function () {
		return this.resolveStringForKey("hub_domain");
	}
	/*<EndMethod Name="System.String Infragistics.HubspotAccountUserInfo::GetDisplayName()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.HubspotAccountUserInfo::GetEmail()" />*/
	getEmail: function () {
		return this.resolveStringForKey("user");
	}
	/*<EndMethod Name="System.String Infragistics.HubspotAccountUserInfo::GetEmail()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.HubspotAccountUserInfo::GetUserId()" />*/
	getUserId: function () {
		return this.resolveStringForKey("user_id");
	}
	/*<EndMethod Name="System.String Infragistics.HubspotAccountUserInfo::GetUserId()" />*/
	,
	$type: new $.ig.Type('HubspotAccountUserInfo', $.ig.CloudAccountUserInfo.prototype.$type)
}, true);

/*<EndType Name="Infragistics.HubspotAccountUserInfo" />*/

/*<BeginType Name="Infragistics.InfragisticsAccountUserInfo" />*/

$.ig.util.defType('InfragisticsAccountUserInfo', 'CloudAccountUserInfo', {
	init: function (json) {
		$.ig.CloudAccountUserInfo.prototype.init1.call(this, 1, json);
	},
	/*<BeginMethod Name="System.String Infragistics.InfragisticsAccountUserInfo::GetDisplayName()" />*/
	getDisplayName: function () {
		return this.resolveStringForKey("name");
	}
	/*<EndMethod Name="System.String Infragistics.InfragisticsAccountUserInfo::GetDisplayName()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.InfragisticsAccountUserInfo::GetEmail()" />*/
	getEmail: function () {
		return this.resolveStringForKey("email");
	}
	/*<EndMethod Name="System.String Infragistics.InfragisticsAccountUserInfo::GetEmail()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.InfragisticsAccountUserInfo::GetUserId()" />*/
	getUserId: function () {
		return this.resolveStringForKey("sub");
	}
	/*<EndMethod Name="System.String Infragistics.InfragisticsAccountUserInfo::GetUserId()" />*/
	,
	$type: new $.ig.Type('InfragisticsAccountUserInfo', $.ig.CloudAccountUserInfo.prototype.$type)
}, true);

/*<EndType Name="Infragistics.InfragisticsAccountUserInfo" />*/

/*<BeginType Name="Infragistics.InfragisticsFile" />*/

$.ig.util.defType('InfragisticsFile', 'CloudFile', {
	__ownerUserId: null,
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.CloudFile.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json, ownerUserId, providerId) {
		$.ig.CloudFile.prototype.init1.call(this, 1, json, providerId);
		this.__ownerUserId = ownerUserId;
	},
	/*<BeginProperty Name="System.Boolean Infragistics.InfragisticsFile::IsFolder()" />*/
	isFolder: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.InfragisticsFile::IsFolder()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.InfragisticsFile::CopyEnabled()" />*/
	copyEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.InfragisticsFile::CopyEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.InfragisticsFile::DeleteEnabled()" />*/
	deleteEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.InfragisticsFile::DeleteEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.InfragisticsFile::DownloadEnabled()" />*/
	downloadEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.InfragisticsFile::DownloadEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.InfragisticsFile::MoveEnabled()" />*/
	moveEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.InfragisticsFile::MoveEnabled()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsFile::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			$.ig.ActivityTrackingBackingStore.prototype.name.call(this, value);
			return value;
		} else {
			return this.resolveStringForKey("name");
		}
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsFile::Name()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsFile::PathIdentifier()" />*/
	pathIdentifier: function () {
		var path = this.internalPathIdentifier();
		if (path != null) {
			return this.__ownerUserId + $.ig.CloudFile.prototype.pATH_SEPARATOR + path;
		}
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsFile::PathIdentifier()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsFile::InternalPathIdentifier()" />*/
	internalPathIdentifier: function () {
		return this.resolveStringForKey("id");
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsFile::InternalPathIdentifier()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.InfragisticsFile::ExtractOwnerUserId(System.String)" />*/
	extractOwnerUserId: function (pathIdentifier) {
		return $.ig.CloudFile.prototype.extractPathIdentifierComponent(pathIdentifier, 0);
	}
	/*<EndMethod Name="System.String Infragistics.InfragisticsFile::ExtractOwnerUserId(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.InfragisticsFile::ExtractItemId(System.String)" />*/
	extractItemId: function (pathIdentifier) {
		return $.ig.CloudFile.prototype.extractPathIdentifierComponent(pathIdentifier, 1);
	}
	/*<EndMethod Name="System.String Infragistics.InfragisticsFile::ExtractItemId(System.String)" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.InfragisticsFile::Size()" />*/
	size: function () {
		return this.resolveLongForKey("size");
	}
	/*<EndProperty Name="System.Int64 Infragistics.InfragisticsFile::Size()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPDateTime Infragistics.InfragisticsFile::ModifiedDate()" />*/
	modifiedDate: function () {
		return null;
	}
	/*<EndProperty Name="Infragistics.CPDateTime Infragistics.InfragisticsFile::ModifiedDate()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsFile::MimeType()" />*/
	mimeType: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsFile::MimeType()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.InfragisticsFile::IsInTrash()" />*/
	isInTrash: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.InfragisticsFile::IsInTrash()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsFile::Author()" />*/
	author: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsFile::Author()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsFile::ProviderOwnerName()" />*/
	providerOwnerName: function () {
		return this.resolveStringForKey("OwnerFullName");
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsFile::ProviderOwnerName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsFile::ProviderOwnerGivenName()" />*/
	providerOwnerGivenName: function () {
		return this.resolveStringForKey("OwnerFirstName");
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsFile::ProviderOwnerGivenName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsFile::ProviderOwnerEmail()" />*/
	providerOwnerEmail: function () {
		return this.resolveStringForKey("OwnerEmail");
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsFile::ProviderOwnerEmail()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsFile::EmbedUrl()" />*/
	embedUrl: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsFile::EmbedUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsFile::DownloadUrl()" />*/
	downloadUrl: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsFile::DownloadUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.InfragisticsFile::OpenUrl()" />*/
	openUrl: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.InfragisticsFile::OpenUrl()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.InfragisticsFile::SupportsFolderSize()" />*/
	supportsFolderSize: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.InfragisticsFile::SupportsFolderSize()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.InfragisticsFile::ResolveDestinationPathWithFile(Infragistics.CloudFile)" />*/
	resolveDestinationPathWithFile: function (file) {
		return this.pathIdentifier();
	}
	/*<EndMethod Name="System.String Infragistics.InfragisticsFile::ResolveDestinationPathWithFile(Infragistics.CloudFile)" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.InfragisticsFile::ProviderType()" />*/
	providerType: function () {
		return $.ig.CloudProviderType.prototype.infragistics;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.InfragisticsFile::ProviderType()" />*/
	,
	$type: new $.ig.Type('InfragisticsFile', $.ig.CloudFile.prototype.$type)
}, true);

/*<EndType Name="Infragistics.InfragisticsFile" />*/

/*<BeginType Name="Infragistics.LinkedDocumentChildPagingInfo" />*/

$.ig.util.defType('LinkedDocumentChildPagingInfo', 'Object', {
	__hasMorePages: false,
	__childIds: null,
	__property: null,
	__documentId: null,
	__documentType: null,
	__newDocumentsAddedToBeginning: false,
	__updatedDocumentsAddedToBeginning: false,
	init: function (documentType, documentId, childCollectionPropertyName, newDocumentsAddedToBeginning, updatedDocumentsAddedToBeginning) {
		$.ig.Object.prototype.init.call(this);
		this.__newDocumentsAddedToBeginning = newDocumentsAddedToBeginning;
		this.__updatedDocumentsAddedToBeginning = updatedDocumentsAddedToBeginning;
		this.__documentType = documentType;
		this.__documentId = documentId;
		this.__property = childCollectionPropertyName;
		this.__childIds = new $.ig.Array();
		this.__hasMorePages = true;
	},
	/*<BeginProperty Name="System.String Infragistics.LinkedDocumentChildPagingInfo::Property()" />*/
	property: function () {
		return this.__property;
	}
	/*<EndProperty Name="System.String Infragistics.LinkedDocumentChildPagingInfo::Property()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.LinkedDocumentChildPagingInfo::DocType()" />*/
	docType: function () {
		return this.__documentType;
	}
	/*<EndProperty Name="System.String Infragistics.LinkedDocumentChildPagingInfo::DocType()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.LinkedDocumentChildPagingInfo::DocId()" />*/
	docId: function () {
		return this.__documentId;
	}
	/*<EndProperty Name="System.String Infragistics.LinkedDocumentChildPagingInfo::DocId()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.LinkedDocumentChildPagingInfo::ChildIds()" />*/
	childIds: function () {
		return this.__childIds;
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.LinkedDocumentChildPagingInfo::ChildIds()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.LinkedDocumentChildPagingInfo::PageSize()" />*/
	pageSize: function () {
		return $.ig.LinkedDocumentChildPagingInfo.prototype.dEFAULT_PAGE_SIZE;
	}
	/*<EndProperty Name="System.Int32 Infragistics.LinkedDocumentChildPagingInfo::PageSize()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.LinkedDocumentChildPagingInfo::HasMorePages()" />*/
	hasMorePages: function () {
		return this.__hasMorePages;
	}
	/*<EndProperty Name="System.Boolean Infragistics.LinkedDocumentChildPagingInfo::HasMorePages()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.LinkedDocumentChildPagingInfo::NumberOfItems()" />*/
	numberOfItems: function () {
		return this.__childIds.length;
	}
	/*<EndProperty Name="System.Int32 Infragistics.LinkedDocumentChildPagingInfo::NumberOfItems()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.LinkedDocumentChildPagingInfo::SupportsUpdatedDocumentsAddedToBeginning()" />*/
	supportsUpdatedDocumentsAddedToBeginning: function () {
		return this.__updatedDocumentsAddedToBeginning;
	}
	/*<EndProperty Name="System.Boolean Infragistics.LinkedDocumentChildPagingInfo::SupportsUpdatedDocumentsAddedToBeginning()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.LinkedDocumentChildPagingInfo::ItemAdded(System.String)" />*/
	itemAdded: function (itemId) {
		if (this.__childIds.contains(itemId)) {
			this.__childIds.removeItem(itemId);
		}
		if (this.__newDocumentsAddedToBeginning) {
			this.__childIds.insert(0, itemId);
		} else if (!this.__hasMorePages) {
			this.__childIds.add(itemId);
		} else {
			return false;
		}
		this.notifyDocument();
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.LinkedDocumentChildPagingInfo::ItemAdded(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocumentChildPagingInfo::ItemRemoved(System.String)" />*/
	itemRemoved: function (itemId) {
		if (this.__childIds.contains(itemId)) {
			this.__childIds.removeItem(itemId);
		}
		this.notifyDocument();
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocumentChildPagingInfo::ItemRemoved(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocumentChildPagingInfo::ItemUpdated(System.String)" />*/
	itemUpdated: function (itemId) {
		if (this.__updatedDocumentsAddedToBeginning) {
			if (this.__childIds.contains(itemId)) {
				this.__childIds.removeItem(itemId);
			}
			this.__childIds.insert(0, itemId);
			this.notifyDocument();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocumentChildPagingInfo::ItemUpdated(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocumentChildPagingInfo::PageReceived(Infragistics.CPList)" />*/
	pageReceived: function (itemIds) {
		if (itemIds.length < this.pageSize()) {
			this.__hasMorePages = false;
		}
		for (var i = 0; i < itemIds.length; i++) {
			var id = itemIds[i];
			if (!this.__childIds.contains(id)) {
				this.__childIds.add(id);
			}
		}
		this.notifyDocument();
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocumentChildPagingInfo::PageReceived(Infragistics.CPList)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.LinkedDocumentChildPagingInfo::NotifyDocument()" />*/
	notifyDocument: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.LinkedDocumentChildPagingInfo::NotifyDocument()" />*/
	,
	$type: new $.ig.Type('LinkedDocumentChildPagingInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.LinkedDocumentChildPagingInfo" />*/

/*<BeginType Name="Infragistics.MicrosoftAccountUserInfo" />*/

$.ig.util.defType('MicrosoftAccountUserInfo', 'CloudAccountUserInfo', {
	init: function (initNumber, json) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.CloudAccountUserInfo.prototype.init1.call(this, 1, json);
	},
	init1: function (initNumber, userId, email) {
		$.ig.MicrosoftAccountUserInfo.prototype.init.call(this, 0, new $.ig.CPJSONObject(1));
		this.setValueForKey($.ig.MicrosoftAccountUserInfo.prototype._uSER_ID, userId);
		this.setValueForKey($.ig.MicrosoftAccountUserInfo.prototype._eMAIL, email);
	},
	/*<BeginMethod Name="System.String Infragistics.MicrosoftAccountUserInfo::GetDisplayName()" />*/
	getDisplayName: function () {
		var displayName = this.resolveStringForKey("displayName");
		if (displayName != null && displayName.length > 0) {
			return displayName;
		}
		return this.resolveStringForKey("userPrincipalName");
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftAccountUserInfo::GetDisplayName()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftAccountUserInfo::GetEmail()" />*/
	getEmail: function () {
		var mail = this.resolveStringForKey($.ig.MicrosoftAccountUserInfo.prototype._eMAIL);
		if (mail != null) {
			return mail;
		}
		return this.resolveStringForKey("userPrincipalName");
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftAccountUserInfo::GetEmail()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftAccountUserInfo::GetUserId()" />*/
	getUserId: function () {
		return this.resolveStringForKey($.ig.MicrosoftAccountUserInfo.prototype._uSER_ID);
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftAccountUserInfo::GetUserId()" />*/
	,
	$type: new $.ig.Type('MicrosoftAccountUserInfo', $.ig.CloudAccountUserInfo.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftAccountUserInfo" />*/

/*<BeginType Name="Infragistics.SharePointAccountUserInfo" />*/

$.ig.util.defType('SharePointAccountUserInfo', 'CloudAccountUserInfo', {
	init: function (json) {
		this.__sharePointUser = null;
		$.ig.CloudAccountUserInfo.prototype.init1.call(this, 1, json);
	},
	/*<BeginMethod Name="System.String Infragistics.SharePointAccountUserInfo::GetDisplayName()" />*/
	getDisplayName: function () {
		return this.resolveStringForKey("name");
	}
	/*<EndMethod Name="System.String Infragistics.SharePointAccountUserInfo::GetDisplayName()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointAccountUserInfo::GetEmail()" />*/
	getEmail: function () {
		return this.resolveStringForKey("upn");
	}
	/*<EndMethod Name="System.String Infragistics.SharePointAccountUserInfo::GetEmail()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointAccountUserInfo::GetUserId()" />*/
	getUserId: function () {
		return this.resolveStringForKey("sub");
	}
	/*<EndMethod Name="System.String Infragistics.SharePointAccountUserInfo::GetUserId()" />*/
	,
	__sharePointUser: null,
	/*<BeginProperty Name="Infragistics.SharePointUser Infragistics.SharePointAccountUserInfo::SharePointUser()" />*/
	sharePointUser: function () {
		if (this.__sharePointUser == null) {
			var sharePointUserInfo = this.resolveJSONForKey("sharePointUserInfo");
			this.__sharePointUser = new $.ig.SharePointUser(sharePointUserInfo);
		}
		return this.__sharePointUser;
	}
	/*<EndProperty Name="Infragistics.SharePointUser Infragistics.SharePointAccountUserInfo::SharePointUser()" />*/
	,
	$type: new $.ig.Type('SharePointAccountUserInfo', $.ig.CloudAccountUserInfo.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointAccountUserInfo" />*/

/*<BeginType Name="Infragistics.MicrosoftFile" />*/

$.ig.util.defType('MicrosoftFile', 'CloudFile', {
	__ownerUserId: null,
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.CloudFile.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json, ownerUserId, providerId) {
		$.ig.CloudFile.prototype.init1.call(this, 1, json, providerId);
		this.__ownerUserId = ownerUserId;
	},
	/*<BeginProperty Name="System.Boolean Infragistics.MicrosoftFile::IsFolder()" />*/
	isFolder: function () {
		return this.resolveObjectForKey("folder") != null || this.resolveObjectForKey("package") != null;
	}
	/*<EndProperty Name="System.Boolean Infragistics.MicrosoftFile::IsFolder()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.MicrosoftFile::CopyEnabled()" />*/
	copyEnabled: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.MicrosoftFile::CopyEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.MicrosoftFile::DeleteEnabled()" />*/
	deleteEnabled: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.MicrosoftFile::DeleteEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.MicrosoftFile::DownloadEnabled()" />*/
	downloadEnabled: function () {
		return !this.isFolder();
	}
	/*<EndProperty Name="System.Boolean Infragistics.MicrosoftFile::DownloadEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.MicrosoftFile::MoveEnabled()" />*/
	moveEnabled: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.MicrosoftFile::MoveEnabled()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftFile::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			$.ig.ActivityTrackingBackingStore.prototype.name.call(this, value);
			return value;
		} else {
			return this.resolveStringForKey("name");
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftFile::Name()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftFile::PathIdentifier()" />*/
	pathIdentifier: function () {
		var path = this.internalPathIdentifier();
		if (path != null) {
			return this.__ownerUserId + $.ig.CloudFile.prototype.pATH_SEPARATOR + path;
		}
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftFile::PathIdentifier()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftFile::InternalPathIdentifier()" />*/
	internalPathIdentifier: function () {
		return this.resolveStringForKey("id");
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftFile::InternalPathIdentifier()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftFile::ExtractOwnerUserId(System.String)" />*/
	extractOwnerUserId: function (pathIdentifier) {
		var ownerUserId = $.ig.CloudFile.prototype.extractPathIdentifierComponent(pathIdentifier, 0);
		if (ownerUserId != null && ownerUserId == pathIdentifier) {
			return null;
		} else {
			return ownerUserId;
		}
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftFile::ExtractOwnerUserId(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftFile::ExtractItemId(System.String)" />*/
	extractItemId: function (pathIdentifier) {
		return $.ig.CloudFile.prototype.extractPathIdentifierComponent(pathIdentifier, 1);
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftFile::ExtractItemId(System.String)" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.MicrosoftFile::Size()" />*/
	size: function () {
		return this.resolveLongForKey("size");
	}
	/*<EndProperty Name="System.Int64 Infragistics.MicrosoftFile::Size()" />*/
	,
	__mDate: null,
	__mdateChecked: false,
	/*<BeginProperty Name="Infragistics.CPDateTime Infragistics.MicrosoftFile::ModifiedDate()" />*/
	modifiedDate: function () {
		if (!this.__mdateChecked) {
			this.__mdateChecked = true;
			var lastModifiedTime = this.resolveStringForKey("LastModifiedTime");
			if (lastModifiedTime != null) {
				this.__mDate = $.ig.CPDateTime.prototype.createFromUTCTimeString(lastModifiedTime, $.ig.DateUtility.prototype.getRFC3339FormatStringWithtMillisecondsDigits(7));
			} else {
				lastModifiedTime = this.resolveStringForKey("lastModifiedDateTime");
				if (lastModifiedTime != null) {
					var rfc3339FormatString = "yyyy-MM-ddTHH:mm:ssZ";
					if (lastModifiedTime.length > rfc3339FormatString.length) {
						var millisecondsDigits = lastModifiedTime.length - rfc3339FormatString.length - 1;
						this.__mDate = $.ig.CPDateTime.prototype.createFromUTCTimeString(lastModifiedTime, $.ig.DateUtility.prototype.getRFC3339FormatStringWithtMillisecondsDigits(millisecondsDigits));
					} else if (lastModifiedTime.length == rfc3339FormatString.length) {
						this.__mDate = $.ig.CPDateTime.prototype.createFromUTCTimeString(lastModifiedTime, $.ig.DateUtility.prototype.getRFC3339FormatString());
					}
				}
			}
		}
		return this.__mDate;
	}
	/*<EndProperty Name="Infragistics.CPDateTime Infragistics.MicrosoftFile::ModifiedDate()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftFile::MimeType()" />*/
	mimeType: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftFile::MimeType()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.MicrosoftFile::IsInTrash()" />*/
	isInTrash: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.MicrosoftFile::IsInTrash()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftFile::Author()" />*/
	author: function () {
		return this.resolveStringForKeyPath((function () {
			var $ret = new $.ig.Array();
			$ret.add("createdBy");
			$ret.add("user");
			$ret.add("displayName");
			return $ret;
		}()));
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftFile::Author()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftFile::ProviderOwnerName()" />*/
	providerOwnerName: function () {
		return this.resolveStringForKey("ProviderOwnerName");
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftFile::ProviderOwnerName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftFile::ProviderOwnerGivenName()" />*/
	providerOwnerGivenName: function () {
		return this.resolveStringForKey("ProviderOwnerGivenName");
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftFile::ProviderOwnerGivenName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftFile::ProviderOwnerEmail()" />*/
	providerOwnerEmail: function () {
		return this.resolveStringForKey("ProviderOwnerEmail");
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftFile::ProviderOwnerEmail()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftFile::EmbedUrl()" />*/
	embedUrl: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftFile::EmbedUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftFile::DownloadUrl()" />*/
	downloadUrl: function () {
		return this.resolveStringForKey("@microsoft.graph.downloadUrl");
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftFile::DownloadUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftFile::OpenUrl()" />*/
	openUrl: function () {
		return this.resolveStringForKey("webUrl");
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftFile::OpenUrl()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.MicrosoftFile::SupportsFolderSize()" />*/
	supportsFolderSize: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.MicrosoftFile::SupportsFolderSize()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftFile::ResolveFilePath()" />*/
	resolveFilePath: function () {
		var driveinfo = this.resolveJSONForKey("parentReference");
		return driveinfo.resolveStringForKey("driveId");
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftFile::ResolveFilePath()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftFile::ResolveDestinationPathWithFile(Infragistics.CloudFile)" />*/
	resolveDestinationPathWithFile: function (file) {
		return this.pathIdentifier();
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftFile::ResolveDestinationPathWithFile(Infragistics.CloudFile)" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.MicrosoftFile::ProviderType()" />*/
	providerType: function () {
		return $.ig.CloudProviderType.prototype.microsoft;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.MicrosoftFile::ProviderType()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftFile::OpenInAppUrl()" />*/
	openInAppUrl: function () {
		return $.ig.MicrosoftFile.prototype.encodeInAppUrl(this, this.pathIdentifier());
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftFile::OpenInAppUrl()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.MicrosoftFile::EncodeInAppUrl(Infragistics.CloudFile, System.String)" />*/
	encodeInAppUrl: function (cloudFile, pathIdentifier) {
		var scheme = $.ig.CloudFile.prototype.getMSOfficeUriSchemeName(cloudFile);
		var url = cloudFile.openUrl();
		var ownerUserId = $.ig.MicrosoftFile.prototype.extractOwnerUserId(pathIdentifier);
		if (scheme != null && url != null) {
			var pos = $.ig.NativeStringUtility.prototype.indexOf(url, "_layout");
			var path = cloudFile.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("parentReference");
				$ret.add("path");
				return $ret;
			}()));
			if (path != null) {
				if (pos >= 0) {
					url = $.ig.NativeStringUtility.prototype.substring(url, 0, pos) + "Documents/";
				} else {
					url = "https://d.docs.live.net/" + ownerUserId;
					path = $.ig.NativeRequestUtility.prototype.utility().uRLDecodeString(path);
				}
				var endOfRootPos = $.ig.NativeStringUtility.prototype.indexOf(path, ":");
				endOfRootPos++;
				url = url + $.ig.NativeStringUtility.prototype.substring(path, endOfRootPos, path.length - endOfRootPos);
				if (!$.ig.NativeStringUtility.prototype.substring(url, url.length - 1, 1).equals("/")) {
					url = url + "/";
				}
				url = url + cloudFile.name();
				return scheme + ":" + $.ig.NativeRequestUtility.prototype.utility().encodeMSOfficeNativeAppUrl($.ig.CloudFile.prototype.getMSOfficeUriSchemaCommands(cloudFile, true), url);
			}
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.MicrosoftFile::EncodeInAppUrl(Infragistics.CloudFile, System.String)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftFile::SharedEditLink()" />*/
	sharedEditLink: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("sharedEditLink", value);
			return value;
		} else {
			return this.resolveStringForKey("sharedEditLink");
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftFile::SharedEditLink()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.MicrosoftFile::SharedViewLink()" />*/
	sharedViewLink: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("sharedViewLink", value);
			return value;
		} else {
			return this.resolveStringForKey("sharedViewLink");
		}
	}
	/*<EndProperty Name="System.String Infragistics.MicrosoftFile::SharedViewLink()" />*/
	,
	/*<BeginProperty Name="Infragistics.ContentProperties Infragistics.MicrosoftFile::ViewProperties()" />*/
	viewProperties: function () {
		return $.ig.MicrosoftFile.prototype.getViewProperties(this);
	}
	/*<EndProperty Name="Infragistics.ContentProperties Infragistics.MicrosoftFile::ViewProperties()" />*/
	,
	/*<BeginMethod Name="Infragistics.ContentProperties Infragistics.MicrosoftFile::GetViewProperties(Infragistics.CloudFile)" />*/
	getViewProperties: function (cloudFile) {
		var fileProperties = new $.ig.Array();
		var properties = new $.ig.ContentProperties();
		if (cloudFile.author() != null) {
			properties.owner(cloudFile.author());
		}
		if (cloudFile.isFolder()) {
			properties.contentType($.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.folder));
		} else {
			properties.contentType(cloudFile.type());
		}
		var ownerName = cloudFile.providerOwnerName();
		var ownerEmail = cloudFile.providerOwnerEmail();
		var driveType = cloudFile.resolveStringForKeyPath((function () {
			var $ret = new $.ig.Array();
			$ret.add("parentReference");
			$ret.add("driveType");
			return $ret;
		}()));
		properties.contentLocation((driveType.toLowerCase() == "business" ? $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.oneDriveForBusiness) : $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.oneDrive)) + (ownerName == null ? " " : "\n" + ownerName) + (ownerEmail == null ? " " : "\n" + ownerEmail));
		var filePath = "";
		var path = cloudFile.resolveStringForKeyPath((function () {
			var $ret = new $.ig.Array();
			$ret.add("parentReference");
			$ret.add("path");
			return $ret;
		}()));
		if (path != null) {
			var endOfRootPos = $.ig.NativeStringUtility.prototype.indexOf(path, ":");
			endOfRootPos++;
			filePath = filePath + $.ig.NativeStringUtility.prototype.substring(path, endOfRootPos, path.length - endOfRootPos);
			filePath = $.ig.NativeRequestUtility.prototype.utility().uRLDecodeString(filePath);
		}
		if (filePath != "" && filePath != null) {
			if ($.ig.NativeStringUtility.prototype.substring(filePath, 0, 1).equals("/")) {
				filePath = $.ig.NativeStringUtility.prototype.substring(filePath, 1, filePath.length - 1);
			}
		}
		filePath = (cloudFile.providerOwnerGivenName() == null ? "" : cloudFile.providerOwnerGivenName() + "'s ") + $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.oneDriveAccount) + "/" + filePath;
		properties.locationPath(filePath);
		return properties;
	}
	/*<EndMethod Name="Infragistics.ContentProperties Infragistics.MicrosoftFile::GetViewProperties(Infragistics.CloudFile)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftFile::SetCloudFileOwnerInfo(Infragistics.CPJSONObject)" />*/
	setCloudFileOwnerInfo: function (userInfo) {
		$.ig.MicrosoftFile.prototype.setOwnerInfo(this, userInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftFile::SetCloudFileOwnerInfo(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.MicrosoftFile::ChildCount()" />*/
	childCount: function () {
		var folder = this.resolveJSONForKey("folder");
		if (folder == null) {
			return 0;
		}
		if (!folder.containsKey("childCount")) {
			return 0;
		}
		return this.resolveIntegerForKey("childCount");
	}
	/*<EndProperty Name="System.Int32 Infragistics.MicrosoftFile::ChildCount()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.MicrosoftFile::SetOwnerInfo(Infragistics.CloudFile, Infragistics.CPJSONObject)" />*/
	setOwnerInfo: function (cloudFile, userInfo) {
		cloudFile.setValueForKey("ProviderOwnerName", userInfo.resolveStringForKey("displayName"));
		cloudFile.setValueForKey("ProviderOwnerGivenName", userInfo.resolveStringForKey("givenName"));
		cloudFile.setValueForKey("ProviderOwnerEmail", (userInfo.resolveStringForKey("mail") != null ? userInfo.resolveStringForKey("mail") : userInfo.resolveStringForKey("userPrincipalName")));
	}
	/*<EndMethod Name="System.Void Infragistics.MicrosoftFile::SetOwnerInfo(Infragistics.CloudFile, Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('MicrosoftFile', $.ig.CloudFile.prototype.$type)
}, true);

/*<EndType Name="Infragistics.MicrosoftFile" />*/

/*<BeginType Name="Infragistics.OAuthKeys" />*/

$.ig.util.defType('OAuthKeys', 'Object', {
	init: function (clientIdentifier, secret, redirectUrl, authScope, authState) {
		$.ig.Object.prototype.init.call(this);
		this.__clientID = clientIdentifier;
		this.__clientSecret = secret;
		this.__redirectURL = redirectUrl;
		this.__scope = authScope;
		this.__state = authState;
	},
	__clientID: null,
	__clientSecret: null,
	__redirectURL: null,
	__scope: null,
	__state: null,
	$type: new $.ig.Type('OAuthKeys', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.OAuthKeys" />*/

/*<BeginType Name="Infragistics.ProviderBase" />*/

$.ig.util.defType('ProviderBase', 'ActivityTrackingBackingStore', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.ActivityTrackingBackingStore.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json) {
		$.ig.ActivityTrackingBackingStore.prototype.init1.call(this, 1, json);
	},
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderBase::CreateNewBackingStoreObject(Infragistics.CPJSONObject)" />*/
	createNewBackingStoreObject: function (json) {
		return new $.ig.ProviderBase(1, json);
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderBase::CreateNewBackingStoreObject(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderBase::CreateNewBackingStoreObjectWithId(System.String)" />*/
	createNewBackingStoreObjectWithId: function (identifier) {
		var provider = new $.ig.ProviderBase(0);
		provider.identifier(identifier);
		return provider;
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderBase::CreateNewBackingStoreObjectWithId(System.String)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderBase::NameKey()" />*/
	nameKey: function () {
		return "title";
	}
	/*<EndProperty Name="System.String Infragistics.ProviderBase::NameKey()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderBase::OrganizationId()" />*/
	organizationId: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("organizationId", value);
			return value;
		} else {
			return this.resolveStringForKey("organizationId");
		}
	}
	/*<EndProperty Name="System.String Infragistics.ProviderBase::OrganizationId()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderBase::SubTitle()" />*/
	subTitle: function () {
		return this.resolveStringForKey("accountName");
	}
	/*<EndProperty Name="System.String Infragistics.ProviderBase::SubTitle()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.ProviderBase::Provider()" />*/
	provider: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("provider", $.ig.CloudProviderTypeUtility.prototype.convertTypeToInt(value));
			return value;
		} else {
			return $.ig.CloudProviderTypeUtility.prototype.convertIntToType(this.resolveIntegerForKey("provider"));
		}
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.ProviderBase::Provider()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.ProviderBase::ActualProvider()" />*/
	actualProvider: function () {
		return this.provider();
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.ProviderBase::ActualProvider()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.ProviderBase::IsLocal()" />*/
	isLocal: function () {
		return this.provider() == $.ig.CloudProviderType.prototype.local;
	}
	/*<EndProperty Name="System.Boolean Infragistics.ProviderBase::IsLocal()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.ProviderBase::IsSharePointTokenState()" />*/
	isSharePointTokenState: function () {
		return this.provider() == $.ig.CloudProviderType.prototype.sharePoint;
	}
	/*<EndProperty Name="System.Boolean Infragistics.ProviderBase::IsSharePointTokenState()" />*/
	,
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderBase::CreateChildItemForProperty(System.String, Infragistics.CPJSONObject)" />*/
	createChildItemForProperty: function (property, store) {
		return new $.ig.SharePointSubsite(0, store);
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderBase::CreateChildItemForProperty(System.String, Infragistics.CPJSONObject)" />*/
	,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.ProviderBase::SubsiteIds()" />*/
	subsiteIds: function () {
		return this.resolveChildListIds($.ig.ProviderBase.prototype._collectionPropertyName);
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.ProviderBase::SubsiteIds()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.ProviderBase::AddSubsite(Infragistics.SharePointSubsite, Infragistics.BackingStoreActivity)" />*/
	addSubsite: function (item, activity) {
		this.addChildItemForProperty($.ig.ProviderBase.prototype._collectionPropertyName, item, true, activity);
	}
	/*<EndMethod Name="System.Void Infragistics.ProviderBase::AddSubsite(Infragistics.SharePointSubsite, Infragistics.BackingStoreActivity)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.ProviderBase::RemoveSubsite(Infragistics.SharePointSubsite, Infragistics.BackingStoreActivity)" />*/
	removeSubsite: function (item, activity) {
		this.removeChildItemForProperty($.ig.ProviderBase.prototype._collectionPropertyName, item, true, activity);
	}
	/*<EndMethod Name="System.Void Infragistics.ProviderBase::RemoveSubsite(Infragistics.SharePointSubsite, Infragistics.BackingStoreActivity)" />*/
	,
	/*<BeginMethod Name="Infragistics.SharePointSubsite Infragistics.ProviderBase::GetSubsiteById(System.String)" />*/
	getSubsiteById: function (id) {
		return this.resolveChildListItembyId($.ig.ProviderBase.prototype._collectionPropertyName, id);
	}
	/*<EndMethod Name="Infragistics.SharePointSubsite Infragistics.ProviderBase::GetSubsiteById(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.ProviderBase::LoadJSON(Infragistics.CPJSONObject)" />*/
	loadJSON: function (json) {
		if (json.containsKey($.ig.ProviderBase.prototype._collectionPropertyName)) {
			var sources = json.resolveListForKey($.ig.ProviderBase.prototype._collectionPropertyName);
			for (var i = 0; i < sources.length; i++) {
				this.addSubsite(new $.ig.SharePointSubsite(0, $.ig.CPJSONObject.prototype.createFromJSONObject(sources[i])), null);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.ProviderBase::LoadJSON(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('ProviderBase', $.ig.ActivityTrackingBackingStore.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ProviderBase" />*/

/*<BeginType Name="Infragistics.ProviderTokenState" />*/

$.ig.util.defType('ProviderTokenState', 'ProviderBase', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
				case 2:
					this.init2.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.ProviderBase.prototype.init.call(this, 0);
		this.setValueForKey("type", $.ig.ProviderTokenState.prototype.typeName);
	},
	init1: function (initNumber, tokenState) {
		$.ig.ProviderBase.prototype.init.call(this, 0);
		this.initProvider(tokenState);
	},
	init2: function (initNumber, json) {
		$.ig.ProviderBase.prototype.init.call(this, 0);
		var tokenState = new $.ig.TokenState(0);
		tokenState.loadJSON(json);
		this.initProvider(tokenState);
	},
	/*<BeginMethod Name="System.Void Infragistics.ProviderTokenState::InitProvider(Infragistics.TokenState)" />*/
	initProvider: function (tokenState) {
		this.__tokenState = tokenState;
		this.__tokenStateChildrenKeys = new $.ig.Array();
		this.__tokenStateChildrenKeys.add($.ig.TokenState.prototype.dataSourcesKey);
		this.updateTokenState1(false);
	}
	/*<EndMethod Name="System.Void Infragistics.ProviderTokenState::InitProvider(Infragistics.TokenState)" />*/
	,
	__tokenStateChildrenKeys: null,
	__tokenState: null,
	/*<BeginProperty Name="Infragistics.TokenState Infragistics.ProviderTokenState::TokenState()" />*/
	tokenState: function () {
		return this.__tokenState;
	}
	/*<EndProperty Name="Infragistics.TokenState Infragistics.ProviderTokenState::TokenState()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.ProviderTokenState::UpdateTokenState(System.Boolean)" />*/
	updateTokenState1: function (updateLedger) {
		if (this.__tokenState != null) {
			var tokenStateJSON = this.__tokenState.getJSON().jSONObject();
			var keys = $.ig.NativeJSONUtility.prototype.getKeys(tokenStateJSON);
			var count = keys.length;
			for (var i = 0; i < count; i++) {
				var key = keys[i];
				if (updateLedger && this.__tokenStateChildrenKeys.contains(key)) {
					this.setObjectProperty(key, tokenStateJSON[key]);
				} else {
					this.setValueForKey(key, tokenStateJSON[key]);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.ProviderTokenState::UpdateTokenState(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.ProviderTokenState::UpdateTokenState()" />*/
	updateTokenState: function () {
		this.updateTokenState1(true);
	}
	/*<EndMethod Name="System.Void Infragistics.ProviderTokenState::UpdateTokenState()" />*/
	,
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderTokenState::CreateNewBackingStoreObject(Infragistics.CPJSONObject)" />*/
	createNewBackingStoreObject: function (json) {
		return new $.ig.ProviderTokenState(2, json);
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderTokenState::CreateNewBackingStoreObject(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderTokenState::CreateNewBackingStoreObjectWithId(System.String)" />*/
	createNewBackingStoreObjectWithId: function (identifier) {
		var provider = new $.ig.ProviderTokenState(0);
		provider.identifier(identifier);
		return provider;
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderTokenState::CreateNewBackingStoreObjectWithId(System.String)" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.ProviderTokenState::Provider()" />*/
	provider: function (value) {
		if (arguments.length === 1) {
			$.ig.ProviderBase.prototype.provider.call(this, value);
			return value;
		} else {
			return this.tokenState().provider();
		}
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.ProviderTokenState::Provider()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderTokenState::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			$.ig.ActivityTrackingBackingStore.prototype.name.call(this, value);
			return value;
		} else {
			if (this.tokenState().userInfo() == null) {
				return null;
			}
			var title = this.tokenState().userInfo().resolveStringForKey("title");
			if (title != null) {
				return title;
			}
			title = this.tokenState().userInfo().getDisplayName();
			if (title != null) {
				return title;
			}
			title = this.tokenState().userInfo().getEmail();
			if (title != null) {
				if ($.ig.NativeStringUtility.prototype.contains(title, "@")) {
					title = $.ig.NativeStringUtility.prototype.split(title, "@")[0];
				}
				return title;
			}
			return null;
		}
	}
	/*<EndProperty Name="System.String Infragistics.ProviderTokenState::Name()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderTokenState::SubTitle()" />*/
	subTitle: function () {
		return this.tokenState().userInfo() == null ? null : this.tokenState().userInfo().getEmail();
	}
	/*<EndProperty Name="System.String Infragistics.ProviderTokenState::SubTitle()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderTokenState::Identifier()" />*/
	identifier: function (value) {
		if (arguments.length === 1) {
			$.ig.ProviderBase.prototype.identifier.call(this, value);
			return value;
		} else {
			if (this.tokenState() != null) {
				return this.tokenState().additionalIdentifier();
			}
			return $.ig.ProviderBase.prototype.identifier.call(this);
		}
	}
	/*<EndProperty Name="System.String Infragistics.ProviderTokenState::Identifier()" />*/
	,
	$type: new $.ig.Type('ProviderTokenState', $.ig.ProviderBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ProviderTokenState" />*/

/*<BeginType Name="Infragistics.ProviderLocal" />*/

$.ig.util.defType('ProviderLocal', 'ProviderBase', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.ProviderBase.prototype.init.call(this, 0);
		this.setValueForKey("type", $.ig.ProviderLocal.prototype.typeName);
	},
	init1: function (initNumber, json) {
		$.ig.ProviderBase.prototype.init1.call(this, 1, json);
		this.setValueForKey("type", $.ig.ProviderLocal.prototype.typeName);
	},
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderLocal::CreateNewBackingStoreObject(Infragistics.CPJSONObject)" />*/
	createNewBackingStoreObject: function (json) {
		return new $.ig.ProviderLocal(1, json);
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderLocal::CreateNewBackingStoreObject(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderLocal::CreateNewBackingStoreObjectWithId(System.String)" />*/
	createNewBackingStoreObjectWithId: function (identifier) {
		var provider = new $.ig.ProviderLocal(0);
		provider.identifier(identifier);
		return provider;
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderLocal::CreateNewBackingStoreObjectWithId(System.String)" />*/
	,
	$type: new $.ig.Type('ProviderLocal', $.ig.ProviderBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ProviderLocal" />*/

/*<BeginType Name="Infragistics.ProviderReportPlus" />*/

$.ig.util.defType('ProviderReportPlus', 'ProviderBase', {
	init: function (initNumber, json) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.ProviderBase.prototype.init1.call(this, 1, json);
		this.initialize();
	},
	init1: function (initNumber) {
		$.ig.ProviderBase.prototype.init.call(this, 0);
		this.initialize();
	},
	/*<BeginMethod Name="System.Void Infragistics.ProviderReportPlus::Initialize()" />*/
	initialize: function () {
		this.setValueForKey("type", $.ig.ProviderReportPlus.prototype.typeName);
		this.provider($.ig.CloudProviderType.prototype.reportPlus);
		if (!this.containsKey($.ig.ProviderReportPlus.prototype.oAUTH_PROVIDERS_KEY)) {
			this.setValueForKey($.ig.ProviderReportPlus.prototype.oAUTH_PROVIDERS_KEY, new $.ig.Array());
		}
	}
	/*<EndMethod Name="System.Void Infragistics.ProviderReportPlus::Initialize()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.ProviderReportPlus::OAuthProviders()" />*/
	oAuthProviders: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey($.ig.ProviderReportPlus.prototype.oAUTH_PROVIDERS_KEY, value);
			return value;
		} else {
			return this.resolveListForKey($.ig.ProviderReportPlus.prototype.oAUTH_PROVIDERS_KEY);
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.ProviderReportPlus::OAuthProviders()" />*/
	,
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderReportPlus::CreateNewBackingStoreObject(Infragistics.CPJSONObject)" />*/
	createNewBackingStoreObject: function (json) {
		return new $.ig.ProviderReportPlus(0, json);
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderReportPlus::CreateNewBackingStoreObject(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderReportPlus::CreateNewBackingStoreObjectWithId(System.String)" />*/
	createNewBackingStoreObjectWithId: function (identifier) {
		var provider = new $.ig.ProviderReportPlus(1);
		provider.identifier(identifier);
		return provider;
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderReportPlus::CreateNewBackingStoreObjectWithId(System.String)" />*/
	,
	$type: new $.ig.Type('ProviderReportPlus', $.ig.ProviderBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ProviderReportPlus" />*/

/*<BeginType Name="Infragistics.ProviderInfragisticsWebProxy" />*/

$.ig.util.defType('ProviderInfragisticsWebProxy', 'ProviderBase', {
	__providerId: null,
	__ownerTeamId: null,
	__mainPath: null,
	__title: null,
	__fileProviderType: 0,
	/*<BeginMethod Name="Infragistics.ProviderInfragisticsWebProxy Infragistics.ProviderInfragisticsWebProxy::Create(Infragistics.CloudFile)" />*/
	create: function (file) {
		var proxy = new $.ig.ProviderInfragisticsWebProxy(0);
		proxy.__title = file.name();
		proxy.setValueForKey("type", $.ig.ProviderInfragisticsWebProxy.prototype.typeName);
		proxy.__ownerTeamId = file.teamId();
		proxy.__providerId = file.providerId();
		proxy.__mainPath = file.pathIdentifier();
		proxy.__fileProviderType = file.providerType();
		return proxy;
	}
	/*<EndMethod Name="Infragistics.ProviderInfragisticsWebProxy Infragistics.ProviderInfragisticsWebProxy::Create(Infragistics.CloudFile)" />*/
	,
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.ProviderBase.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json) {
		$.ig.ProviderBase.prototype.init1.call(this, 1, json);
	},
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderInfragisticsWebProxy::CreateNewBackingStoreObject(Infragistics.CPJSONObject)" />*/
	createNewBackingStoreObject: function (json) {
		return new $.ig.ProviderInfragisticsWebProxy(1, json);
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderInfragisticsWebProxy::CreateNewBackingStoreObject(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderInfragisticsWebProxy::CreateNewBackingStoreObjectWithId(System.String)" />*/
	createNewBackingStoreObjectWithId: function (identifier) {
		var provider = new $.ig.ProviderInfragisticsWebProxy(0);
		provider.identifier(identifier);
		return provider;
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.ProviderInfragisticsWebProxy::CreateNewBackingStoreObjectWithId(System.String)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderInfragisticsWebProxy::ProviderId()" />*/
	providerId: function () {
		return this.__providerId;
	}
	/*<EndProperty Name="System.String Infragistics.ProviderInfragisticsWebProxy::ProviderId()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderInfragisticsWebProxy::OwnerTeamId()" />*/
	ownerTeamId: function () {
		return this.__ownerTeamId;
	}
	/*<EndProperty Name="System.String Infragistics.ProviderInfragisticsWebProxy::OwnerTeamId()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderInfragisticsWebProxy::MainPath()" />*/
	mainPath: function () {
		return this.__mainPath;
	}
	/*<EndProperty Name="System.String Infragistics.ProviderInfragisticsWebProxy::MainPath()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.ProviderInfragisticsWebProxy::ActualProvider()" />*/
	actualProvider: function () {
		return this.__fileProviderType;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.ProviderInfragisticsWebProxy::ActualProvider()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.ProviderInfragisticsWebProxy::Provider()" />*/
	provider: function (value) {
		if (arguments.length === 1) {
			$.ig.ProviderBase.prototype.provider.call(this, value);
			return value;
		} else {
			return $.ig.CloudProviderType.prototype.infragistics;
		}
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.ProviderInfragisticsWebProxy::Provider()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderInfragisticsWebProxy::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			$.ig.ProviderBase.prototype.name.call(this, value);
			return value;
		} else {
			return this.__title;
		}
	}
	/*<EndProperty Name="System.String Infragistics.ProviderInfragisticsWebProxy::Name()" />*/
	,
	$type: new $.ig.Type('ProviderInfragisticsWebProxy', $.ig.ProviderBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ProviderInfragisticsWebProxy" />*/

/*<BeginType Name="Infragistics.ProviderGenericOAuth" />*/

$.ig.util.defType('ProviderGenericOAuth', 'ProviderTokenState', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
				case 2:
					this.init2.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.ProviderTokenState.prototype.init.call(this, 0);
		this.setValueForKey("type", $.ig.ProviderGenericOAuth.prototype.typeName1);
	},
	init1: function (initNumber, json) {
		$.ig.ProviderTokenState.prototype.init.call(this, 0);
		this.setValueForKey("type", $.ig.ProviderGenericOAuth.prototype.typeName1);
		this.identifier(json.resolveStringForKey("id"));
		this.accountId(json.resolveStringForKey("accountId"));
		this.clientId(json.resolveStringForKey("clientId"));
		this.clientSecret(json.resolveStringForKey("clientSecret"));
		this.authenticateUrl(json.resolveStringForKey("authenticateUrl"));
		this.tokenUrl(json.resolveStringForKey("tokenUrl"));
		this.logoutUrl(json.resolveStringForKey("logoutUrl"));
		this.scope(json.resolveStringForKey("scope"));
		this.resource(json.resolveStringForKey("resource"));
		this.additionalParameters(json.resolveStringForKey("additionalParameters"));
		this.redirectUri(json.resolveStringForKey("redirectUri"));
		this.associatedDataSourceIds(json.resolveListForKey("associatedDataSourceIds"));
		var tokenState = new $.ig.GenericOAuthTokenState(1, json);
		tokenState.relatedAccountId(this.accountId());
		this.updateWithGenericOAuthTokenState(tokenState);
	},
	init2: function (initNumber, tokenState) {
		$.ig.ProviderTokenState.prototype.init1.call(this, 1, tokenState);
		this.setValueForKey("type", $.ig.ProviderGenericOAuth.prototype.typeName1);
	},
	/*<BeginMethod Name="System.Void Infragistics.ProviderGenericOAuth::UpdateWithGenericOAuthTokenState(Infragistics.GenericOAuthTokenState)" />*/
	updateWithGenericOAuthTokenState: function (tokenState) {
		this.initProvider(tokenState);
	}
	/*<EndMethod Name="System.Void Infragistics.ProviderGenericOAuth::UpdateWithGenericOAuthTokenState(Infragistics.GenericOAuthTokenState)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderGenericOAuth::Identifier()" />*/
	identifier: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("id", value);
			return value;
		} else {
			return this.resolveStringForKey("id");
		}
	}
	/*<EndProperty Name="System.String Infragistics.ProviderGenericOAuth::Identifier()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderGenericOAuth::AccountId()" />*/
	accountId: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("accountId", value);
			return value;
		} else {
			return this.resolveStringForKey("accountId");
		}
	}
	/*<EndProperty Name="System.String Infragistics.ProviderGenericOAuth::AccountId()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderGenericOAuth::AccountName()" />*/
	accountName: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("accountName", value);
			return value;
		} else {
			return this.resolveStringForKey("accountName");
		}
	}
	/*<EndProperty Name="System.String Infragistics.ProviderGenericOAuth::AccountName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderGenericOAuth::ClientId()" />*/
	clientId: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("clientId", value);
			return value;
		} else {
			return this.resolveStringForKey("clientId");
		}
	}
	/*<EndProperty Name="System.String Infragistics.ProviderGenericOAuth::ClientId()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderGenericOAuth::ClientSecret()" />*/
	clientSecret: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("clientSecret", value);
			return value;
		} else {
			return this.resolveStringForKey("clientSecret");
		}
	}
	/*<EndProperty Name="System.String Infragistics.ProviderGenericOAuth::ClientSecret()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderGenericOAuth::AuthenticateUrl()" />*/
	authenticateUrl: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("authenticateUrl", value);
			return value;
		} else {
			return this.resolveStringForKey("authenticateUrl");
		}
	}
	/*<EndProperty Name="System.String Infragistics.ProviderGenericOAuth::AuthenticateUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderGenericOAuth::TokenUrl()" />*/
	tokenUrl: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("tokenUrl", value);
			return value;
		} else {
			return this.resolveStringForKey("tokenUrl");
		}
	}
	/*<EndProperty Name="System.String Infragistics.ProviderGenericOAuth::TokenUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderGenericOAuth::LogoutUrl()" />*/
	logoutUrl: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("logoutUrl", value);
			return value;
		} else {
			return this.resolveStringForKey("logoutUrl");
		}
	}
	/*<EndProperty Name="System.String Infragistics.ProviderGenericOAuth::LogoutUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderGenericOAuth::Scope()" />*/
	scope: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("scope", value);
			return value;
		} else {
			return this.resolveStringForKey("scope");
		}
	}
	/*<EndProperty Name="System.String Infragistics.ProviderGenericOAuth::Scope()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderGenericOAuth::Resource()" />*/
	resource: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("resource", value);
			return value;
		} else {
			return this.resolveStringForKey("resource");
		}
	}
	/*<EndProperty Name="System.String Infragistics.ProviderGenericOAuth::Resource()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderGenericOAuth::AdditionalParameters()" />*/
	additionalParameters: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("additionalParameters", value);
			return value;
		} else {
			return this.resolveStringForKey("additionalParameters");
		}
	}
	/*<EndProperty Name="System.String Infragistics.ProviderGenericOAuth::AdditionalParameters()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ProviderGenericOAuth::RedirectUri()" />*/
	redirectUri: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("redirectUri", value);
			return value;
		} else {
			return this.resolveStringForKey("redirectUri");
		}
	}
	/*<EndProperty Name="System.String Infragistics.ProviderGenericOAuth::RedirectUri()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.ProviderGenericOAuth::AssociatedDataSourceIds()" />*/
	associatedDataSourceIds: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("associatedDataSourceIds", value);
			return value;
		} else {
			return this.resolveListForKey("associatedDataSourceIds");
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.ProviderGenericOAuth::AssociatedDataSourceIds()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.ProviderGenericOAuth::AssociateDataSourceId(System.String)" />*/
	associateDataSourceId: function (dsId) {
		if (this.associatedDataSourceIds() == null) {
			this.associatedDataSourceIds(new $.ig.Array());
		}
		if (!this.associatedDataSourceIds().contains(dsId)) {
			this.associatedDataSourceIds().add(dsId);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.ProviderGenericOAuth::AssociateDataSourceId(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.ProviderGenericOAuth::RemoveDataSourceAssociation(System.String)" />*/
	removeDataSourceAssociation: function (uniqueDSId) {
		this.associatedDataSourceIds().removeItem(uniqueDSId);
	}
	/*<EndMethod Name="System.Void Infragistics.ProviderGenericOAuth::RemoveDataSourceAssociation(System.String)" />*/
	,
	$type: new $.ig.Type('ProviderGenericOAuth', $.ig.ProviderTokenState.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ProviderGenericOAuth" />*/

/*<BeginType Name="Infragistics.SalesForceAccountUserInfo" />*/

$.ig.util.defType('SalesForceAccountUserInfo', 'CloudAccountUserInfo', {
	init: function (json) {
		$.ig.CloudAccountUserInfo.prototype.init1.call(this, 1, json);
	},
	/*<BeginMethod Name="System.String Infragistics.SalesForceAccountUserInfo::GetDisplayName()" />*/
	getDisplayName: function () {
		return this.resolveStringForKey("name");
	}
	/*<EndMethod Name="System.String Infragistics.SalesForceAccountUserInfo::GetDisplayName()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SalesForceAccountUserInfo::GetEmail()" />*/
	getEmail: function () {
		return this.resolveStringForKey("email");
	}
	/*<EndMethod Name="System.String Infragistics.SalesForceAccountUserInfo::GetEmail()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SalesForceAccountUserInfo::GetUserId()" />*/
	getUserId: function () {
		return this.resolveStringForKey("user_id");
	}
	/*<EndMethod Name="System.String Infragistics.SalesForceAccountUserInfo::GetUserId()" />*/
	,
	$type: new $.ig.Type('SalesForceAccountUserInfo', $.ig.CloudAccountUserInfo.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SalesForceAccountUserInfo" />*/

/*<BeginType Name="Infragistics.SharePointCloudFileBase" />*/

$.ig.util.defType('SharePointCloudFileBase', 'CloudFile', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.CloudFile.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json, providerId) {
		$.ig.CloudFile.prototype.init1.call(this, 1, json, providerId);
	},
	/*<BeginMethod Name="System.String Infragistics.SharePointCloudFileBase::GetParentWebUrl(System.String)" />*/
	getParentWebUrl: function (apiUrl) {
		var strToFind = "/_api/";
		var apiIdx = $.ig.NativeStringUtility.prototype.indexOf(apiUrl.toLowerCase(), strToFind);
		if (apiIdx < 0) {
			return null;
		}
		return $.ig.NativeStringUtility.prototype.substring(apiUrl, 0, apiIdx);
	}
	/*<EndMethod Name="System.String Infragistics.SharePointCloudFileBase::GetParentWebUrl(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointCloudFileBase::GetODataId(Infragistics.CPJSONObject)" />*/
	getODataId: function (obj) {
		if (obj == null) {
			return null;
		}
		if (obj.containsKey("__metadata")) {
			return obj.resolveJSONForKey("__metadata").resolveStringForKey("id");
		} else {
			return obj.resolveStringForKey("odata.id");
		}
	}
	/*<EndMethod Name="System.String Infragistics.SharePointCloudFileBase::GetODataId(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('SharePointCloudFileBase', $.ig.CloudFile.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointCloudFileBase" />*/

/*<BeginType Name="Infragistics.SharePointListBase" />*/

$.ig.util.defType('SharePointListBase', 'SharePointCloudFileBase', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.SharePointCloudFileBase.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json, providerId) {
		$.ig.SharePointCloudFileBase.prototype.init1.call(this, 1, json, providerId);
	},
	/*<BeginProperty Name="System.String Infragistics.SharePointListBase::OriginalType()" />*/
	originalType: function () {
		switch (this.baseTemplate()) {
			case 104: return $.ig.CloudFile.prototype.sPTypeAnnouncements;
			case 851: return $.ig.CloudFile.prototype.sPTypeAssetLibrary;
			case 302: return $.ig.CloudFile.prototype.sPTypeBlogCategories;
			case 303: return $.ig.CloudFile.prototype.sPTypeBlogComments;
			case 301: return $.ig.CloudFile.prototype.sPTypeBlogPosts;
			case 105: return $.ig.CloudFile.prototype.sPTypeContacts;
			case 108: return $.ig.CloudFile.prototype.sPTypeDiscussionBoard;
			case 101: return $.ig.CloudFile.prototype.sPTypeDocumentLibrary;
			case 106: return $.ig.CloudFile.prototype.sPTypeEvents;
			case 100: return $.ig.CloudFile.prototype.sPTypeGeneric;
			case 1100: return $.ig.CloudFile.prototype.sPTypeIssueTracking;
			case 103: return $.ig.CloudFile.prototype.sPTypeLinks;
			case 2002: return $.ig.CloudFile.prototype.sPTypePersonalDocumentLibrary;
			case 109: return $.ig.CloudFile.prototype.sPTypePictureLibrary;
			case 2003: return $.ig.CloudFile.prototype.sPTypePrivateDocumentLibrary;
			case 150: return $.ig.CloudFile.prototype.sPTypeProjectTasks;
			case 102: return $.ig.CloudFile.prototype.sPTypeSurvey;
			case 107: return $.ig.CloudFile.prototype.sPTypeTasks;
			case 119: return $.ig.CloudFile.prototype.sPTypeWikiPageLibrary;
			case 115: return $.ig.CloudFile.prototype.sPTypeXMLFormLibrary;
			case 600: return $.ig.CloudFile.prototype.sPTypeExternalList;
			default: return $.ig.CloudFile.prototype.sPTypeGeneric;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListBase::OriginalType()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListBase::Type()" />*/
	type: function () {
		return $.ig.CloudFile.prototype.typeFolder;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListBase::Type()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointListBase::IsFolder()" />*/
	isFolder: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointListBase::IsFolder()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointListBase::CopyEnabled()" />*/
	copyEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointListBase::CopyEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointListBase::DeleteEnabled()" />*/
	deleteEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointListBase::DeleteEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointListBase::MoveEnabled()" />*/
	moveEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointListBase::MoveEnabled()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListBase::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			$.ig.ActivityTrackingBackingStore.prototype.name.call(this, value);
			return value;
		} else {
			return this.resolveStringForKey("Title");
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListBase::Name()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListBase::PathIdentifier()" />*/
	pathIdentifier: function () {
		return $.ig.SharePointCloudFileBase.prototype.getODataId(this);
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListBase::PathIdentifier()" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.SharePointListBase::Size()" />*/
	size: function () {
		return this.resolveIntegerForKey("ItemCount");
	}
	/*<EndProperty Name="System.Int64 Infragistics.SharePointListBase::Size()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.SharePointListBase::BaseType()" />*/
	baseType: function () {
		return this.resolveIntegerForKey("BaseType");
	}
	/*<EndProperty Name="System.Int32 Infragistics.SharePointListBase::BaseType()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.SharePointListBase::BaseTemplate()" />*/
	baseTemplate: function () {
		return this.resolveIntegerForKey("BaseTemplate");
	}
	/*<EndProperty Name="System.Int32 Infragistics.SharePointListBase::BaseTemplate()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.SharePointListBase::ItemCount()" />*/
	itemCount: function () {
		return this.resolveIntegerForKey("ItemCount");
	}
	/*<EndProperty Name="System.Int32 Infragistics.SharePointListBase::ItemCount()" />*/
	,
	__mDate: null,
	__mdateChecked: false,
	/*<BeginProperty Name="Infragistics.CPDateTime Infragistics.SharePointListBase::ModifiedDate()" />*/
	modifiedDate: function () {
		if (!this.__mdateChecked) {
			this.__mdateChecked = true;
			var lastModifiedTime = this.resolveStringForKey("LastModifiedTime");
			if (lastModifiedTime != null) {
				this.__mDate = $.ig.CPDateTime.prototype.createFromUTCTimeString(lastModifiedTime, $.ig.DateUtility.prototype.getRFC3339FormatStringWithtMillisecondsDigits(7));
			}
		}
		return this.__mDate;
	}
	/*<EndProperty Name="Infragistics.CPDateTime Infragistics.SharePointListBase::ModifiedDate()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListBase::MimeType()" />*/
	mimeType: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListBase::MimeType()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointListBase::IsInTrash()" />*/
	isInTrash: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointListBase::IsInTrash()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListBase::Author()" />*/
	author: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListBase::Author()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListBase::ProviderOwnerName()" />*/
	providerOwnerName: function () {
		return this.resolveStringForKey("ProviderOwnerName");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListBase::ProviderOwnerName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListBase::ProviderOwnerGivenName()" />*/
	providerOwnerGivenName: function () {
		return this.resolveStringForKey("ProviderOwnerGivenName");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListBase::ProviderOwnerGivenName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListBase::ProviderOwnerEmail()" />*/
	providerOwnerEmail: function () {
		return this.resolveStringForKey("ProviderOwnerEmail");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListBase::ProviderOwnerEmail()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListBase::EmbedUrl()" />*/
	embedUrl: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListBase::EmbedUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListBase::DownloadUrl()" />*/
	downloadUrl: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListBase::DownloadUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListBase::OpenUrl()" />*/
	openUrl: function () {
		return this.resolveStringForKey("ServerRelativeUrl");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListBase::OpenUrl()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointListBase::ResolveDestinationPathWithFile(Infragistics.CloudFile)" />*/
	resolveDestinationPathWithFile: function (file) {
		var fileComponents = $.ig.NativeStringUtility.prototype.split(file.name(), "/");
		var fileName = fileComponents[fileComponents.length - 1];
		return this.resolveStringForKey("ServerRawRelativeUrl") + "/" + fileName;
	}
	/*<EndMethod Name="System.String Infragistics.SharePointListBase::ResolveDestinationPathWithFile(Infragistics.CloudFile)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointListBase::ResolveFilePath()" />*/
	resolveFilePath: function () {
		return this.resolveStringForKey("ServerRelativeUrl");
	}
	/*<EndMethod Name="System.String Infragistics.SharePointListBase::ResolveFilePath()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.SharePointListBase::ProviderType()" />*/
	providerType: function () {
		return $.ig.CloudProviderType.prototype.sharePoint;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.SharePointListBase::ProviderType()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListBase::ListId()" />*/
	listId: function () {
		return this.resolveStringForKey("Id");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListBase::ListId()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListBase::ParentWebUrl()" />*/
	parentWebUrl: function () {
		var id = $.ig.SharePointCloudFileBase.prototype.getODataId(this);
		return $.ig.SharePointCloudFileBase.prototype.getParentWebUrl(id);
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListBase::ParentWebUrl()" />*/
	,
	$type: new $.ig.Type('SharePointListBase', $.ig.SharePointCloudFileBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointListBase" />*/

/*<BeginType Name="Infragistics.SharePointList" />*/

$.ig.util.defType('SharePointList', 'SharePointListBase', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.SharePointListBase.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json, providerId) {
		$.ig.SharePointListBase.prototype.init1.call(this, 1, json, providerId);
	},
	/*<BeginProperty Name="System.String Infragistics.SharePointList::SectionKey()" />*/
	sectionKey: function () {
		return $.ig.CloudFile.prototype.sharePointListSectionKey;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointList::SectionKey()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointList::PathIdentifier()" />*/
	pathIdentifier: function () {
		return "ListFolder:" + $.ig.SharePointCloudFileBase.prototype.getODataId(this);
	}
	/*<EndProperty Name="System.String Infragistics.SharePointList::PathIdentifier()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointList::ExtractPath(System.String)" />*/
	extractPath: function (path) {
		return $.ig.util.replace(path, "ListFolder:", "");
	}
	/*<EndMethod Name="System.String Infragistics.SharePointList::ExtractPath(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointList::IsListFolder(System.String)" />*/
	isListFolder: function (fileId) {
		return $.ig.NativeStringUtility.prototype.startsWith(fileId, "ListFolder:");
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointList::IsListFolder(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointList::GetListId(System.String)" />*/
	getListId: function (pathIdentifier) {
		if (pathIdentifier == null) {
			return null;
		}
		var strToFind = "/_api/web/lists(guid'";
		var s = $.ig.SharePointList.prototype.extractPath(pathIdentifier);
		var apiIdx = $.ig.NativeStringUtility.prototype.indexOf(s.toLowerCase(), strToFind);
		if (apiIdx < 0) {
			return null;
		}
		var startIdx = apiIdx + strToFind.length;
		s = $.ig.NativeStringUtility.prototype.substring(s, startIdx, s.length - startIdx);
		var guidEndIdx = $.ig.NativeStringUtility.prototype.indexOf(s, "')");
		if (guidEndIdx <= 0) {
			return null;
		}
		return $.ig.NativeStringUtility.prototype.substring(s, 0, guidEndIdx);
	}
	/*<EndMethod Name="System.String Infragistics.SharePointList::GetListId(System.String)" />*/
	,
	$type: new $.ig.Type('SharePointList', $.ig.SharePointListBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointList" />*/

/*<BeginType Name="Infragistics.SharePointLibrary" />*/

$.ig.util.defType('SharePointLibrary', 'SharePointListBase', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.SharePointListBase.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json, providerId) {
		$.ig.SharePointListBase.prototype.init1.call(this, 1, json, providerId);
	},
	/*<BeginProperty Name="System.String Infragistics.SharePointLibrary::SectionKey()" />*/
	sectionKey: function () {
		return $.ig.CloudFile.prototype.sharePointLibrarySectionKey;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointLibrary::SectionKey()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointLibrary::PathIdentifier()" />*/
	pathIdentifier: function () {
		return "LibFolder:" + $.ig.SharePointCloudFileBase.prototype.getODataId(this) + "/RootFolder";
	}
	/*<EndProperty Name="System.String Infragistics.SharePointLibrary::PathIdentifier()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointLibrary::IsLibraryPath(System.String)" />*/
	isLibraryPath: function (path) {
		return $.ig.NativeStringUtility.prototype.startsWith(path, "LibFolder:");
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointLibrary::IsLibraryPath(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointLibrary::ExtractPath(System.String)" />*/
	extractPath: function (path) {
		return $.ig.NativeStringUtility.prototype.replace(path, "LibFolder:", "");
	}
	/*<EndMethod Name="System.String Infragistics.SharePointLibrary::ExtractPath(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointLibrary::ExtractBasePath(System.String)" />*/
	extractBasePath: function (path) {
		path = $.ig.NativeStringUtility.prototype.replace(path, "LibFolder:", "");
		return $.ig.NativeStringUtility.prototype.replace(path, "/RootFolder", "");
	}
	/*<EndMethod Name="System.String Infragistics.SharePointLibrary::ExtractBasePath(System.String)" />*/
	,
	$type: new $.ig.Type('SharePointLibrary', $.ig.SharePointListBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointLibrary" />*/

/*<BeginType Name="Infragistics.SharePointFileBase" />*/

$.ig.util.defType('SharePointFileBase', 'SharePointCloudFileBase', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.SharePointCloudFileBase.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json, providerId) {
		$.ig.SharePointCloudFileBase.prototype.init1.call(this, 1, json, providerId);
	},
	/*<BeginProperty Name="System.String Infragistics.SharePointFileBase::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			$.ig.ActivityTrackingBackingStore.prototype.name.call(this, value);
			return value;
		} else {
			return this.resolveStringForKey("Name");
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFileBase::Name()" />*/
	,
	__mDate: null,
	__mdateChecked: false,
	/*<BeginProperty Name="Infragistics.CPDateTime Infragistics.SharePointFileBase::ModifiedDate()" />*/
	modifiedDate: function () {
		if (!this.__mdateChecked) {
			this.__mdateChecked = true;
			var lastModifiedTime = this.resolveStringForKey("LastModifiedTime");
			if (lastModifiedTime != null) {
				this.__mDate = $.ig.CPDateTime.prototype.createFromUTCTimeString(lastModifiedTime, $.ig.DateUtility.prototype.getRFC3339FormatStringWithtMillisecondsDigits(7));
			}
		}
		return this.__mDate;
	}
	/*<EndProperty Name="Infragistics.CPDateTime Infragistics.SharePointFileBase::ModifiedDate()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFileBase::MimeType()" />*/
	mimeType: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFileBase::MimeType()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointFileBase::IsInTrash()" />*/
	isInTrash: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointFileBase::IsInTrash()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFileBase::Author()" />*/
	author: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFileBase::Author()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFileBase::ProviderOwnerName()" />*/
	providerOwnerName: function () {
		return this.resolveStringForKey("ProviderOwnerName");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFileBase::ProviderOwnerName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFileBase::ProviderOwnerGivenName()" />*/
	providerOwnerGivenName: function () {
		return this.resolveStringForKey("ProviderOwnerGivenName");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFileBase::ProviderOwnerGivenName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFileBase::ProviderOwnerEmail()" />*/
	providerOwnerEmail: function () {
		return this.resolveStringForKey("ProviderOwnerEmail");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFileBase::ProviderOwnerEmail()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFileBase::EmbedUrl()" />*/
	embedUrl: function () {
		var url = this.resolveStringForKey("ServerRedirectedEmbedUrl");
		return url != null ? $.ig.NativeStringUtility.prototype.replace(url, "&action=interactivepreview", "") : null;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFileBase::EmbedUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFileBase::DownloadUrl()" />*/
	downloadUrl: function () {
		return this.resolveStringForKey("EncodedAbsUrl");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFileBase::DownloadUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFileBase::OpenUrl()" />*/
	openUrl: function () {
		return this.embedUrl();
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFileBase::OpenUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFileBase::PathIdentifier()" />*/
	pathIdentifier: function () {
		var path = this.internalPathIdentifier();
		if (path != null) {
			var listId = this.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("ListItemAllFields");
				$ret.add("ParentList");
				$ret.add("Id");
				return $ret;
			}()));
			var itemId = this.resolveObjectForPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("ListItemAllFields");
				$ret.add("Id");
				return $ret;
			}()));
			return (listId != null ? listId : "") + $.ig.CloudFile.prototype.pATH_SEPARATOR + (itemId != null ? $.ig.NativeStringUtility.prototype.toString1(itemId) : "") + $.ig.CloudFile.prototype.pATH_SEPARATOR + path;
		}
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFileBase::PathIdentifier()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFileBase::InternalPathIdentifier()" />*/
	internalPathIdentifier: function () {
		return $.ig.SharePointCloudFileBase.prototype.getODataId(this);
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFileBase::InternalPathIdentifier()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFileBase::ExtractListId(System.String)" />*/
	extractListId: function (pathIdentifier) {
		if (pathIdentifier == null) {
			return null;
		}
		var parts = $.ig.NativeStringUtility.prototype.split(pathIdentifier, $.ig.CloudFile.prototype.pATH_SEPARATOR);
		if (parts.length < 3) {
			return null;
		}
		return parts[0];
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFileBase::ExtractListId(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFileBase::ExtractListItemId(System.String)" />*/
	extractListItemId: function (pathIdentifier) {
		if (pathIdentifier == null) {
			return null;
		}
		var parts = $.ig.NativeStringUtility.prototype.split(pathIdentifier, $.ig.CloudFile.prototype.pATH_SEPARATOR);
		if (parts.length < 3) {
			return null;
		}
		return parts[1];
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFileBase::ExtractListItemId(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFileBase::ExtractPath(System.String)" />*/
	extractPath: function (pathIdentifier) {
		if (pathIdentifier == null) {
			return null;
		}
		var parts = $.ig.NativeStringUtility.prototype.split(pathIdentifier, $.ig.CloudFile.prototype.pATH_SEPARATOR);
		if (parts.length < 3) {
			return null;
		}
		return parts[2];
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFileBase::ExtractPath(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFileBase::GetItemByIdUrl(System.String)" />*/
	getItemByIdUrl: function (pathIdentifier) {
		if (pathIdentifier == null) {
			return null;
		}
		var parts = $.ig.NativeStringUtility.prototype.split(pathIdentifier, $.ig.CloudFile.prototype.pATH_SEPARATOR);
		if (parts.length < 3) {
			return null;
		}
		var url = parts[2].toLowerCase();
		var urlParts = $.ig.NativeStringUtility.prototype.split(url, "_api/web");
		if (urlParts.length == 0) {
			return null;
		}
		url = urlParts[0] + "_api/web/Lists(guid'" + parts[0] + "')/GetItemById(" + parts[1] + ")";
		return url;
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFileBase::GetItemByIdUrl(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFileBase::ResolveBaseUrlByFile(Infragistics.CloudFile)" />*/
	resolveBaseUrlByFile: function (file) {
		var baseUrl = $.ig.SharePointFile.prototype.getItemByIdUrl(file.pathIdentifier());
		if (baseUrl == null) {
			var obj = file.resolveJSONForKey("ParentList");
			if (obj != null) {
				baseUrl = $.ig.util.replace(obj.resolveStringForKey("odata.id"), "/ParentList", "");
			} else {
				obj = file.resolveJSONForKey("ListItemAllFields");
				baseUrl = $.ig.util.replace(obj.resolveStringForKey("odata.id"), "/ParentList", "");
			}
		}
		return baseUrl;
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFileBase::ResolveBaseUrlByFile(Infragistics.CloudFile)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointFileBase::IsSharePointVersionLessThan2016(Infragistics.CPJSONObject)" />*/
	isSharePointVersionLessThan2016: function (obj) {
		return obj.containsKey("__metadata");
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointFileBase::IsSharePointVersionLessThan2016(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFileBase::CreatePathIdentifier(System.String, System.String, System.String, System.String, System.Boolean)" />*/
	createPathIdentifier: function (siteUrl, listId, itemId, filePath, use2013FriendlyId) {
		var fileId;
		if ($.ig.NativeStringUtility.prototype.endsWith(siteUrl, "/")) {
			siteUrl = $.ig.NativeStringUtility.prototype.substring(siteUrl, 0, siteUrl.length - 1);
		}
		if (use2013FriendlyId) {
			var serverRelativeUrl = $.ig.CPStringUtility.prototype.getPathFromURL(siteUrl) + filePath;
			fileId = siteUrl + "/_api/web/GetFileByServerRelativeUrl('" + serverRelativeUrl + "')";
		} else {
			filePath = $.ig.NativeStringUtility.prototype.replace(filePath, "%", "%25");
			filePath = $.ig.NativeStringUtility.prototype.replace(filePath, "#", "%23");
			fileId = siteUrl + "/_api/web/GetFileByServerRelativePath(decodedurl='" + filePath + "')";
		}
		return listId + $.ig.CloudFile.prototype.pATH_SEPARATOR + itemId + $.ig.CloudFile.prototype.pATH_SEPARATOR + fileId;
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFileBase::CreatePathIdentifier(System.String, System.String, System.String, System.String, System.Boolean)" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.SharePointFileBase::ProviderType()" />*/
	providerType: function () {
		return $.ig.CloudProviderType.prototype.sharePoint;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.SharePointFileBase::ProviderType()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFileBase::ParentWebUrl()" />*/
	parentWebUrl: function () {
		var i0 = $.ig.NativeStringUtility.prototype.indexOf(this.pathIdentifier(), $.ig.CloudFile.prototype.pATH_SEPARATOR + "http");
		if (i0 < 0) {
			return null;
		}
		var i1 = $.ig.NativeStringUtility.prototype.indexOf(this.pathIdentifier(), "/_api/");
		if (i1 <= 0) {
			return null;
		}
		var startIndex = i0 + $.ig.CloudFile.prototype.pATH_SEPARATOR.length;
		return $.ig.NativeStringUtility.prototype.substring(this.pathIdentifier(), startIndex, i1 - startIndex);
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFileBase::ParentWebUrl()" />*/
	,
	$type: new $.ig.Type('SharePointFileBase', $.ig.SharePointCloudFileBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointFileBase" />*/

/*<BeginType Name="Infragistics.SharePointFolder" />*/

$.ig.util.defType('SharePointFolder', 'SharePointFileBase', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.SharePointFileBase.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json, providerId) {
		$.ig.SharePointFileBase.prototype.init1.call(this, 1, json, providerId);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointFolder::IsFolder()" />*/
	isFolder: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointFolder::IsFolder()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointFolder::CopyEnabled()" />*/
	copyEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointFolder::CopyEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointFolder::DeleteEnabled()" />*/
	deleteEnabled: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointFolder::DeleteEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointFolder::MoveEnabled()" />*/
	moveEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointFolder::MoveEnabled()" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.SharePointFolder::Size()" />*/
	size: function () {
		return this.resolveIntegerForKey("ItemCount");
	}
	/*<EndProperty Name="System.Int64 Infragistics.SharePointFolder::Size()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointFolder::SupportsFolderSize()" />*/
	supportsFolderSize: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointFolder::SupportsFolderSize()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFolder::InternalPathIdentifier()" />*/
	internalPathIdentifier: function () {
		if ($.ig.SharePointFileBase.prototype.isSharePointVersionLessThan2016(this)) {
			return $.ig.SharePointCloudFileBase.prototype.getODataId(this);
		}
		var allFields = this.resolveJSONForKey("ListItemAllFields");
		if (allFields == null) {
			return null;
		}
		var uniqueId = allFields.resolveStringForKey("UniqueId");
		if (uniqueId == null) {
			return null;
		}
		var siteURL = this.resolveStringForKey("SPWebUrl");
		if (siteURL == null) {
			var odataId = $.ig.SharePointCloudFileBase.prototype.getODataId(this);
			if (odataId == null) {
				return null;
			}
			var idx = $.ig.NativeStringUtility.prototype.indexOf(odataId, "/_api/");
			if (idx < 0) {
				return null;
			}
			siteURL = $.ig.NativeStringUtility.prototype.substring(odataId, 0, idx);
		}
		return siteURL + "/_api/web/GetFolderById('" + uniqueId + "')";
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFolder::InternalPathIdentifier()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointFolder::IsFolderPath(System.String)" />*/
	isFolderPath: function (path) {
		return $.ig.NativeStringUtility.prototype.contains(path, "/_api/web/GetFolderById('") || $.ig.NativeStringUtility.prototype.contains(path.toLowerCase(), "/_api/web/getfolderbyserverrelativeurl('");
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointFolder::IsFolderPath(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SharePointFolder::SetCloudFileOwnerInfo(Infragistics.CPJSONObject)" />*/
	setCloudFileOwnerInfo: function (userInfo) {
		$.ig.SharePointFile.prototype.setOwnerInfo(this, userInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.SharePointFolder::SetCloudFileOwnerInfo(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginProperty Name="Infragistics.ContentProperties Infragistics.SharePointFolder::ViewProperties()" />*/
	viewProperties: function () {
		return $.ig.SharePointFile.prototype.getViewProperties(this);
	}
	/*<EndProperty Name="Infragistics.ContentProperties Infragistics.SharePointFolder::ViewProperties()" />*/
	,
	$type: new $.ig.Type('SharePointFolder', $.ig.SharePointFileBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointFolder" />*/

/*<BeginType Name="Infragistics.SharePointFile" />*/

$.ig.util.defType('SharePointFile', 'SharePointFileBase', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.SharePointFileBase.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json, providerId) {
		$.ig.SharePointFileBase.prototype.init1.call(this, 1, json, providerId);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointFile::IsFolder()" />*/
	isFolder: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointFile::IsFolder()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointFile::CopyEnabled()" />*/
	copyEnabled: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointFile::CopyEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointFile::DeleteEnabled()" />*/
	deleteEnabled: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointFile::DeleteEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointFile::DownloadEnabled()" />*/
	downloadEnabled: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointFile::DownloadEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointFile::MoveEnabled()" />*/
	moveEnabled: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointFile::MoveEnabled()" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.SharePointFile::Size()" />*/
	size: function () {
		var strSize = this.resolveStringForKey("Length");
		return strSize == null ? 0 : $.ig.NativeRequestUtility.prototype.utility().tryParseLong(strSize);
	}
	/*<EndProperty Name="System.Int64 Infragistics.SharePointFile::Size()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFile::ResolveFilePath()" />*/
	resolveFilePath: function () {
		return this.resolveStringForKey("ServerRelativeUrl");
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFile::ResolveFilePath()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointFile::IsFilePath(System.String)" />*/
	isFilePath: function (path) {
		return $.ig.NativeStringUtility.prototype.contains(path, "/_api/web/GetFileByServerRelativePath(");
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointFile::IsFilePath(System.String)" />*/
	,
	__mDate: null,
	__mdateChecked: false,
	/*<BeginProperty Name="Infragistics.CPDateTime Infragistics.SharePointFile::ModifiedDate()" />*/
	modifiedDate: function () {
		if (!this.__mdateChecked) {
			this.__mdateChecked = true;
			var lastModifiedTime = this.resolveStringForKey("LastModifiedTime");
			if (lastModifiedTime != null) {
				this.__mDate = $.ig.CPDateTime.prototype.createFromUTCTimeString(lastModifiedTime, $.ig.DateUtility.prototype.getRFC3339FormatStringWithtMillisecondsDigits(7));
			} else {
				lastModifiedTime = this.resolveStringForKey("TimeLastModified");
				if (lastModifiedTime != null) {
					this.__mDate = $.ig.CPDateTime.prototype.createFromUTCTimeString(lastModifiedTime, $.ig.DateUtility.prototype.getRFC3339FormatString());
				}
			}
		}
		return this.__mDate;
	}
	/*<EndProperty Name="Infragistics.CPDateTime Infragistics.SharePointFile::ModifiedDate()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFile::ResourceVersionIdentifier()" />*/
	resourceVersionIdentifier: function () {
		return this.resolveStringForKey("ETag");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFile::ResourceVersionIdentifier()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFile::OpenUrl()" />*/
	openUrl: function () {
		return this.resolveStringForKey("EncodedAbsUrl");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFile::OpenUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFile::OpenInAppUrl()" />*/
	openInAppUrl: function () {
		return $.ig.SharePointFile.prototype.encodeInAppUrl(this);
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFile::OpenInAppUrl()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFile::EncodeInAppUrl(Infragistics.CloudFile)" />*/
	encodeInAppUrl: function (cloudFile) {
		var scheme = $.ig.CloudFile.prototype.getMSOfficeUriSchemeName(cloudFile);
		var url = cloudFile.downloadUrl() != null ? cloudFile.downloadUrl() : cloudFile.resolveStringForKey("LinkingUri");
		var relativeUrl = cloudFile.resolveStringForKey("ServerRelativeUrl");
		if (!$.ig.CPStringUtility.prototype.isNullOrEmpty(scheme) && !$.ig.CPStringUtility.prototype.isNullOrEmpty(url) && !$.ig.CPStringUtility.prototype.isNullOrEmpty(relativeUrl)) {
			url = $.ig.NativeRequestUtility.prototype.utility().uRLDecodeString(url);
			relativeUrl = $.ig.NativeRequestUtility.prototype.utility().uRLDecodeString(relativeUrl);
			var hasRelativeUrl = $.ig.NativeStringUtility.prototype.contains(url, relativeUrl);
			if (hasRelativeUrl) {
				var index = $.ig.NativeStringUtility.prototype.indexOf(url, relativeUrl);
				if (index > 0) {
					url = $.ig.NativeStringUtility.prototype.substring(url, 0, relativeUrl.length + index);
				}
				return scheme + ":" + $.ig.NativeRequestUtility.prototype.utility().encodeMSOfficeNativeAppUrl($.ig.CloudFile.prototype.getMSOfficeUriSchemaCommands(cloudFile, true), url);
			}
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFile::EncodeInAppUrl(Infragistics.CloudFile)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFile::SharedEditLink()" />*/
	sharedEditLink: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("sharedEditLink", value);
			return value;
		} else {
			return this.resolveStringForKey("sharedEditLink");
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFile::SharedEditLink()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFile::SharedViewLink()" />*/
	sharedViewLink: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("sharedViewLink", value);
			return value;
		} else {
			return this.resolveStringForKey("sharedViewLink");
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFile::SharedViewLink()" />*/
	,
	/*<BeginProperty Name="Infragistics.ContentProperties Infragistics.SharePointFile::ViewProperties()" />*/
	viewProperties: function () {
		return $.ig.SharePointFile.prototype.getViewProperties(this);
	}
	/*<EndProperty Name="Infragistics.ContentProperties Infragistics.SharePointFile::ViewProperties()" />*/
	,
	/*<BeginMethod Name="Infragistics.ContentProperties Infragistics.SharePointFile::GetViewProperties(Infragistics.CloudFile)" />*/
	getViewProperties: function (cloudFile) {
		var properties = new $.ig.ContentProperties();
		if (cloudFile.author() != null) {
			properties.owner(cloudFile.author());
		}
		if (cloudFile.isFolder()) {
			properties.contentType($.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.folder));
		} else {
			properties.contentType(cloudFile.type());
		}
		var ownerName = cloudFile.providerOwnerName();
		var ownerEmail = cloudFile.providerOwnerEmail();
		properties.contentLocation($.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.sharePoint) + (ownerName == null ? " " : "\n" + ownerName) + (ownerEmail == null ? " " : "\n" + ownerEmail));
		var filePath = "";
		var path = cloudFile.resolveStringForKey("odata.id");
		if (!$.ig.CPStringUtility.prototype.isNullOrEmpty(path)) {
			var root = "decodedurl='";
			if ($.ig.NativeStringUtility.prototype.contains(path, root)) {
				var endOfRootPos = ($.ig.NativeStringUtility.prototype.lastIndexOf(path, root) + root.length - 1) + 1;
				filePath = $.ig.NativeStringUtility.prototype.substring(path, endOfRootPos, path.length - endOfRootPos);
			}
			if ($.ig.NativeStringUtility.prototype.contains(filePath, cloudFile.name())) {
				var fileNamePos = $.ig.NativeStringUtility.prototype.indexOf(filePath, cloudFile.name());
				filePath = $.ig.NativeStringUtility.prototype.substring(filePath, 0, fileNamePos - 1);
			}
			if (!$.ig.CPStringUtility.prototype.isNullOrEmpty(filePath)) {
				if ($.ig.NativeStringUtility.prototype.substring(filePath, 0, 1).equals("/")) {
					filePath = $.ig.NativeStringUtility.prototype.substring(filePath, 1, filePath.length - 1);
				}
				filePath = (cloudFile.providerOwnerGivenName() == null ? "" : cloudFile.providerOwnerGivenName() + "'s ") + $.ig.NativeRequestLocalizeUtil.prototype.localize($.ig.RequestsLocalizationKeys.prototype.sharePointAccount) + "/" + filePath;
				properties.locationPath(filePath);
			}
		}
		return properties;
	}
	/*<EndMethod Name="Infragistics.ContentProperties Infragistics.SharePointFile::GetViewProperties(Infragistics.CloudFile)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SharePointFile::SetCloudFileOwnerInfo(Infragistics.CPJSONObject)" />*/
	setCloudFileOwnerInfo: function (userInfo) {
		$.ig.SharePointFile.prototype.setOwnerInfo(this, userInfo);
	}
	/*<EndMethod Name="System.Void Infragistics.SharePointFile::SetCloudFileOwnerInfo(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SharePointFile::SetOwnerInfo(Infragistics.CloudFile, Infragistics.CPJSONObject)" />*/
	setOwnerInfo: function (cloudFile, userInfo) {
		cloudFile.setValueForKey("ProviderOwnerName", userInfo.resolveStringForKey("name"));
		cloudFile.setValueForKey("ProviderOwnerGivenName", userInfo.resolveStringForKey("given_name"));
		cloudFile.setValueForKey("ProviderOwnerEmail", userInfo.resolveStringForKey("upn"));
	}
	/*<EndMethod Name="System.Void Infragistics.SharePointFile::SetOwnerInfo(Infragistics.CloudFile, Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFile::RetrieveEmbedUrl()" />*/
	retrieveEmbedUrl: function () {
		return $.ig.SharePointFile.prototype.determineEmbedUrl(this);
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFile::RetrieveEmbedUrl()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFile::DetermineEmbedUrl(Infragistics.CloudFile)" />*/
	determineEmbedUrl: function (cloudfile) {
		if (cloudfile.type().equals($.ig.CloudFile.prototype.typePDF)) {
			return cloudfile.openUrl();
		} else {
			return cloudfile.embedUrl();
		}
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFile::DetermineEmbedUrl(Infragistics.CloudFile)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointFile::GetSupportsFilePermissions(Infragistics.CloudFile)" />*/
	getSupportsFilePermissions: function (cloudFile) {
		var fileType = cloudFile.resolveStringForKey("odata.type");
		if (!$.ig.CPStringUtility.prototype.isNullOrEmpty(fileType) && fileType == "SP.File") {
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointFile::GetSupportsFilePermissions(Infragistics.CloudFile)" />*/
	,
	$type: new $.ig.Type('SharePointFile', $.ig.SharePointFileBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointFile" />*/

/*<BeginType Name="Infragistics.SharePointSite" />*/

$.ig.util.defType('SharePointSite', 'SharePointCloudFileBase', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.SharePointCloudFileBase.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json, providerId) {
		$.ig.SharePointCloudFileBase.prototype.init1.call(this, 1, json, providerId);
	},
	/*<BeginProperty Name="System.String Infragistics.SharePointSite::SectionKey()" />*/
	sectionKey: function () {
		return $.ig.CloudFile.prototype.sharePointSiteSectionKey;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointSite::SectionKey()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointSite::OriginalType()" />*/
	originalType: function () {
		return $.ig.CloudFile.prototype.sPTypeSite;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointSite::OriginalType()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointSite::Type()" />*/
	type: function () {
		return $.ig.CloudFile.prototype.typeFolder;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointSite::Type()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointSite::IsFolder()" />*/
	isFolder: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointSite::IsFolder()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointSite::CopyEnabled()" />*/
	copyEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointSite::CopyEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointSite::DeleteEnabled()" />*/
	deleteEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointSite::DeleteEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointSite::MoveEnabled()" />*/
	moveEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointSite::MoveEnabled()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointSite::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			$.ig.ActivityTrackingBackingStore.prototype.name.call(this, value);
			return value;
		} else {
			return this.resolveStringForKey("Title");
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointSite::Name()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointSite::PathIdentifier()" />*/
	pathIdentifier: function () {
		return this.resolveStringForKey("Url");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointSite::PathIdentifier()" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.SharePointSite::Size()" />*/
	size: function () {
		return 0;
	}
	/*<EndProperty Name="System.Int64 Infragistics.SharePointSite::Size()" />*/
	,
	__mDate: null,
	__mdateChecked: false,
	/*<BeginProperty Name="Infragistics.CPDateTime Infragistics.SharePointSite::ModifiedDate()" />*/
	modifiedDate: function () {
		if (!this.__mdateChecked) {
			this.__mdateChecked = true;
			var lastModifiedTime = this.resolveStringForKey("LastModifiedTime");
			if (lastModifiedTime != null) {
				this.__mDate = $.ig.CPDateTime.prototype.createFromUTCTimeString(lastModifiedTime, $.ig.DateUtility.prototype.getRFC3339FormatStringWithtMillisecondsDigits(7));
			}
		}
		return this.__mDate;
	}
	/*<EndProperty Name="Infragistics.CPDateTime Infragistics.SharePointSite::ModifiedDate()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointSite::MimeType()" />*/
	mimeType: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointSite::MimeType()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointSite::IsInTrash()" />*/
	isInTrash: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointSite::IsInTrash()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointSite::Author()" />*/
	author: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointSite::Author()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointSite::ProviderOwnerName()" />*/
	providerOwnerName: function () {
		return this.resolveStringForKey("ProviderOwnerName");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointSite::ProviderOwnerName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointSite::ProviderOwnerGivenName()" />*/
	providerOwnerGivenName: function () {
		return this.resolveStringForKey("ProviderOwnerGivenName");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointSite::ProviderOwnerGivenName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointSite::ProviderOwnerEmail()" />*/
	providerOwnerEmail: function () {
		return this.resolveStringForKey("ProviderOwnerEmail");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointSite::ProviderOwnerEmail()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointSite::EmbedUrl()" />*/
	embedUrl: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointSite::EmbedUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointSite::DownloadUrl()" />*/
	downloadUrl: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointSite::DownloadUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointSite::OpenUrl()" />*/
	openUrl: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointSite::OpenUrl()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointSite::IsValidDestination()" />*/
	isValidDestination: function () {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointSite::IsValidDestination()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.SharePointSite::ProviderType()" />*/
	providerType: function () {
		return $.ig.CloudProviderType.prototype.sharePoint;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.SharePointSite::ProviderType()" />*/
	,
	$type: new $.ig.Type('SharePointSite', $.ig.SharePointCloudFileBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointSite" />*/

/*<BeginType Name="Infragistics.SharePointListItem" />*/

$.ig.util.defType('SharePointListItem', 'SharePointCloudFileBase', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.SharePointCloudFileBase.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json, providerId) {
		$.ig.SharePointCloudFileBase.prototype.init1.call(this, 1, json, providerId);
	},
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointListItem::IsFolder()" />*/
	isFolder: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointListItem::IsFolder()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointListItem::CopyEnabled()" />*/
	copyEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointListItem::CopyEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointListItem::DeleteEnabled()" />*/
	deleteEnabled: function () {
		return true;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointListItem::DeleteEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointListItem::MoveEnabled()" />*/
	moveEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointListItem::MoveEnabled()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListItem::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			$.ig.ActivityTrackingBackingStore.prototype.name.call(this, value);
			return value;
		} else {
			return this.resolveStringForKey("DisplayName");
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListItem::Name()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListItem::PathIdentifier()" />*/
	pathIdentifier: function () {
		return $.ig.SharePointCloudFileBase.prototype.getODataId(this);
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListItem::PathIdentifier()" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.SharePointListItem::Size()" />*/
	size: function () {
		return 0;
	}
	/*<EndProperty Name="System.Int64 Infragistics.SharePointListItem::Size()" />*/
	,
	__mDate: null,
	__mdateChecked: false,
	/*<BeginProperty Name="Infragistics.CPDateTime Infragistics.SharePointListItem::ModifiedDate()" />*/
	modifiedDate: function () {
		if (!this.__mdateChecked) {
			this.__mdateChecked = true;
			var lastModifiedTime = this.resolveStringForKey("LastModifiedTime");
			if (lastModifiedTime != null) {
				this.__mDate = $.ig.CPDateTime.prototype.createFromUTCTimeString(lastModifiedTime, $.ig.DateUtility.prototype.getRFC3339FormatStringWithtMillisecondsDigits(7));
			}
		}
		return this.__mDate;
	}
	/*<EndProperty Name="Infragistics.CPDateTime Infragistics.SharePointListItem::ModifiedDate()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListItem::MimeType()" />*/
	mimeType: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListItem::MimeType()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointListItem::IsInTrash()" />*/
	isInTrash: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointListItem::IsInTrash()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListItem::Author()" />*/
	author: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListItem::Author()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListItem::ProviderOwnerName()" />*/
	providerOwnerName: function () {
		return this.resolveStringForKey("ProviderOwnerName");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListItem::ProviderOwnerName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListItem::ProviderOwnerGivenName()" />*/
	providerOwnerGivenName: function () {
		return this.resolveStringForKey("ProviderOwnerGivenName");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListItem::ProviderOwnerGivenName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListItem::ProviderOwnerEmail()" />*/
	providerOwnerEmail: function () {
		return this.resolveStringForKey("ProviderOwnerEmail");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListItem::ProviderOwnerEmail()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListItem::EmbedUrl()" />*/
	embedUrl: function () {
		return this.resolveStringForKey("ServerRedirectedEmbedUrl");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListItem::EmbedUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListItem::DownloadUrl()" />*/
	downloadUrl: function () {
		return this.resolveStringForKey("EncodedAbsUrl");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListItem::DownloadUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListItem::OpenUrl()" />*/
	openUrl: function () {
		var baseUrl = $.ig.CPStringUtility.prototype.uRLByRemovingPath(this.parentWebUrl());
		return baseUrl + this.resolveStringForKeyPath((function () {
			var $ret = new $.ig.Array();
			$ret.add("ParentList");
			$ret.add("RootFolder");
			$ret.add("ServerRelativeUrl");
			return $ret;
		}())) + "/DispForm.aspx?ID=" + this.resolveStringForKey("Id");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListItem::OpenUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListItem::OriginalType()" />*/
	originalType: function () {
		return this.resolveStringForKey("ContentType");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListItem::OriginalType()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListItem::Type()" />*/
	type: function () {
		if (this.isFolder()) {
			return $.ig.CloudFile.prototype.typeFolder;
		}
		return this.originalType();
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListItem::Type()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.SharePointListItem::ProviderType()" />*/
	providerType: function () {
		return $.ig.CloudProviderType.prototype.sharePoint;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.SharePointListItem::ProviderType()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListItem::ListItemID()" />*/
	listItemID: function () {
		return this.resolveStringForKey("ID");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListItem::ListItemID()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListItem::ParentWebUrl()" />*/
	parentWebUrl: function () {
		return $.ig.SharePointCloudFileBase.prototype.getParentWebUrl(this.listODataId());
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListItem::ParentWebUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListItem::ListId()" />*/
	listId: function () {
		return $.ig.SharePointList.prototype.getListId(this.listODataId());
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListItem::ListId()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointListItem::ListODataId()" />*/
	listODataId: function () {
		var parentList = this.resolveJSONForKey("ParentList");
		return $.ig.SharePointCloudFileBase.prototype.getODataId(parentList);
	}
	/*<EndProperty Name="System.String Infragistics.SharePointListItem::ListODataId()" />*/
	,
	$type: new $.ig.Type('SharePointListItem', $.ig.SharePointCloudFileBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointListItem" />*/

/*<BeginType Name="Infragistics.SharePointUser" />*/

$.ig.util.defType('SharePointUser', 'BackingStoreObjectBase', {
	init: function (json) {
		$.ig.BackingStoreObjectBase.prototype.init1.call(this, 1, json);
	},
	/*<BeginProperty Name="System.String Infragistics.SharePointUser::LoginName()" />*/
	loginName: function () {
		return this.resolveStringForKey("LoginName");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointUser::LoginName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointUser::Email()" />*/
	email: function () {
		return this.resolveStringForKey("Email");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointUser::Email()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointUser::Title()" />*/
	title: function () {
		return this.resolveStringForKey("Title");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointUser::Title()" />*/
	,
	$type: new $.ig.Type('SharePointUser', $.ig.BackingStoreObjectBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointUser" />*/

/*<BeginType Name="Infragistics.SharePointField" />*/

$.ig.util.defType('SharePointField', 'BackingStoreObjectBase', {
	init: function (json) {
		$.ig.BackingStoreObjectBase.prototype.init1.call(this, 1, json);
	},
	/*<BeginProperty Name="System.String Infragistics.SharePointField::EntityPropertyName()" />*/
	entityPropertyName: function () {
		return this.resolveStringForKey("EntityPropertyName");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointField::EntityPropertyName()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.SharePointField::FieldTypeKind()" />*/
	fieldTypeKind: function () {
		return this.resolveIntegerForKey("FieldTypeKind");
	}
	/*<EndProperty Name="System.Int32 Infragistics.SharePointField::FieldTypeKind()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointField::Format()" />*/
	format: function () {
		if (this.typeAsString() == "DateTime") {
			var format = this.resolveIntegerForKey("DisplayFormat");
			return format == 0 ? "DateOnly" : "DateTime";
		} else {
			return null;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointField::Format()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointField::TypeAsString()" />*/
	typeAsString: function () {
		return this.resolveStringForKey("TypeAsString");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointField::TypeAsString()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointField::StaticName()" />*/
	staticName: function () {
		return this.resolveStringForKey("StaticName");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointField::StaticName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointField::Title()" />*/
	title: function () {
		return this.resolveStringForKey("Title");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointField::Title()" />*/
	,
	$type: new $.ig.Type('SharePointField', $.ig.BackingStoreObjectBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointField" />*/

/*<BeginType Name="Infragistics.SharePointFieldCalculated" />*/

$.ig.util.defType('SharePointFieldCalculated', 'SharePointField', {
	init: function (json) {
		$.ig.SharePointField.prototype.init.call(this, json);
	},
	/*<BeginProperty Name="System.Int32 Infragistics.SharePointFieldCalculated::DateFormat()" />*/
	dateFormat: function () {
		return this.resolveIntegerForKey("DateFormat");
	}
	/*<EndProperty Name="System.Int32 Infragistics.SharePointFieldCalculated::DateFormat()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFieldCalculated::Formula()" />*/
	formula: function () {
		return this.resolveStringForKey("Formula");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFieldCalculated::Formula()" />*/
	,
	/*<BeginProperty Name="System.Int32 Infragistics.SharePointFieldCalculated::OutputType()" />*/
	outputType: function () {
		return this.resolveIntegerForKey("OutputType");
	}
	/*<EndProperty Name="System.Int32 Infragistics.SharePointFieldCalculated::OutputType()" />*/
	,
	$type: new $.ig.Type('SharePointFieldCalculated', $.ig.SharePointField.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointFieldCalculated" />*/

/*<BeginType Name="Infragistics.SharePointView" />*/

$.ig.util.defType('SharePointView', 'BackingStoreObjectBase', {
	_viewFields: null,
	init: function (json) {
		$.ig.BackingStoreObjectBase.prototype.init1.call(this, 1, json);
		this.loadViewFields();
	},
	/*<BeginMethod Name="System.Void Infragistics.SharePointView::LoadViewFields()" />*/
	loadViewFields: function () {
		this._viewFields = new $.ig.Array();
	}
	/*<EndMethod Name="System.Void Infragistics.SharePointView::LoadViewFields()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointView::DefaultView()" />*/
	defaultView: function () {
		return this.resolveBoolForKey("DefaultView");
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointView::DefaultView()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointView::Id()" />*/
	id: function () {
		return this.resolveStringForKey("Id");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointView::Id()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointView::Title()" />*/
	title: function () {
		return this.resolveStringForKey("Title");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointView::Title()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.SharePointView::ViewFields()" />*/
	viewFields: function () {
		return this._viewFields;
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.SharePointView::ViewFields()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointView::ViewQuery()" />*/
	viewQuery: function () {
		return this.resolveStringForKey("ViewQuery");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointView::ViewQuery()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointView::Hidden()" />*/
	hidden: function () {
		return this.resolveBoolForKey1("Hidden", false);
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointView::Hidden()" />*/
	,
	$type: new $.ig.Type('SharePointView', $.ig.BackingStoreObjectBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointView" />*/

/*<BeginType Name="Infragistics.SharePointListMetadata" />*/

$.ig.util.defType('SharePointListMetadata', 'Object', {
	init: function (fields, views) {
		$.ig.Object.prototype.init.call(this);
		this.fields(fields);
		this.views(views);
	},
	_fields: null,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.SharePointListMetadata::Fields()" />*/
	fields: function (value) {
		if (arguments.length === 1) {
			this._fields = value;
			return value;
		} else {
			return this._fields;
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.SharePointListMetadata::Fields()" />*/
	,
	_views: null,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.SharePointListMetadata::Views()" />*/
	views: function (value) {
		if (arguments.length === 1) {
			this._views = value;
			return value;
		} else {
			return this._views;
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.SharePointListMetadata::Views()" />*/
	,
	/*<BeginMethod Name="Infragistics.SharePointView Infragistics.SharePointListMetadata::GetDefaultView()" />*/
	getDefaultView: function () {
		for (var i = 0; i < this.views().length; i++) {
			var currentView = this.views()[i];
			if (currentView.defaultView() == true) {
				return currentView;
			}
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.SharePointView Infragistics.SharePointListMetadata::GetDefaultView()" />*/
	,
	/*<BeginMethod Name="Infragistics.SharePointView Infragistics.SharePointListMetadata::GetViewById(System.String)" />*/
	getViewById: function (viewId) {
		for (var i = 0; i < this.views().length; i++) {
			var currentView = this.views()[i];
			if (currentView.id().toLowerCase() == viewId) {
				return currentView;
			}
		}
		return null;
	}
	/*<EndMethod Name="Infragistics.SharePointView Infragistics.SharePointListMetadata::GetViewById(System.String)" />*/
	,
	$type: new $.ig.Type('SharePointListMetadata', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointListMetadata" />*/

/*<BeginType Name="Infragistics.SharePointOnPremSessionInfo" />*/

$.ig.util.defType('SharePointOnPremSessionInfo', 'Object', {
	__jsono: null,
	__expirationTS: 0,
	init: function (o, startedTS) {
		$.ig.Object.prototype.init.call(this);
		this.__jsono = o;
		this.__expirationTS = startedTS + this.timeoutSeconds();
	},
	/*<BeginProperty Name="System.String Infragistics.SharePointOnPremSessionInfo::RequestDigestHeaderValue()" />*/
	requestDigestHeaderValue: function () {
		var info = this.root();
		if (info == null) {
			return null;
		}
		return info.resolveStringForKey("FormDigestValue");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointOnPremSessionInfo::RequestDigestHeaderValue()" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.SharePointOnPremSessionInfo::ExpirationTS()" />*/
	expirationTS: function () {
		return this.__expirationTS;
	}
	/*<EndProperty Name="System.Int64 Infragistics.SharePointOnPremSessionInfo::ExpirationTS()" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.SharePointOnPremSessionInfo::TimeoutSeconds()" />*/
	timeoutSeconds: function () {
		var info = this.root();
		if (info == null) {
			return 0;
		}
		return info.resolveLongForKey("FormDigestTimeoutSeconds");
	}
	/*<EndProperty Name="System.Int64 Infragistics.SharePointOnPremSessionInfo::TimeoutSeconds()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointOnPremSessionInfo::IsExpired(System.Int64, System.Int64)" />*/
	isExpired: function (nowTS, safeSeconds) {
		return nowTS >= this.__expirationTS - safeSeconds;
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointOnPremSessionInfo::IsExpired(System.Int64, System.Int64)" />*/
	,
	/*<BeginProperty Name="Infragistics.CPJSONObject Infragistics.SharePointOnPremSessionInfo::Root()" />*/
	root: function () {
		var jsonD = this.__jsono.resolveJSONForKey("d");
		if (jsonD == null) {
			return null;
		}
		return jsonD.resolveJSONForKey("GetContextWebInformation");
	}
	/*<EndProperty Name="Infragistics.CPJSONObject Infragistics.SharePointOnPremSessionInfo::Root()" />*/
	,
	$type: new $.ig.Type('SharePointOnPremSessionInfo', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointOnPremSessionInfo" />*/

/*<BeginType Name="Infragistics.SharePointSiteGraphObject" />*/

$.ig.util.defType('SharePointSiteGraphObject', 'BackingStoreObjectBase', {
	init: function (json) {
		$.ig.BackingStoreObjectBase.prototype.init1.call(this, 1, json);
	},
	/*<BeginProperty Name="System.String Infragistics.SharePointSiteGraphObject::WebUrl()" />*/
	webUrl: function () {
		return this.resolveStringForKey("webUrl");
	}
	/*<EndProperty Name="System.String Infragistics.SharePointSiteGraphObject::WebUrl()" />*/
	,
	$type: new $.ig.Type('SharePointSiteGraphObject', $.ig.BackingStoreObjectBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointSiteGraphObject" />*/

/*<BeginType Name="Infragistics.SharePointProviderUtility" />*/

$.ig.util.defType('SharePointProviderUtility', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="System.String Infragistics.SharePointProviderUtility::ResolveContentType(System.String, System.String)" />*/
	resolveContentType: function (contentClass, fileExtension) {
		contentClass = contentClass.toLowerCase();
		switch (contentClass) {
			case "sts_web":
			case "sts_site":
			case "sts_listitem_300":
				return $.ig.CloudFile.prototype.sPTypeSite;
			case "sts_list_850": return $.ig.CloudFile.prototype.sPTypeListPageLibrary;
			case "sts_listitem_850": return $.ig.CloudFile.prototype.sPTypeListPageLibraryItem;
			case "sts_list_documentlibrary": return $.ig.CloudFile.prototype.sPTypeDocumentLibrary;
			case "sts_listitem_documentlibrary":
			case "sts_listitem_851":
				{
					return $.ig.SharePointProviderUtility.prototype.resolveContentTypeFromExtension(fileExtension);
				}
			case "sts_list":
			case "sts_list_genericlist":
				return $.ig.CloudFile.prototype.sPTypeCustomList;
			case "sts_listitem":
			case "sts_listitem_genericlist":
				return $.ig.CloudFile.prototype.sPTypeCustomListItem;
			case "sts_list_links": return $.ig.CloudFile.prototype.sPTypeLinks;
			case "sts_listitem_links": return $.ig.CloudFile.prototype.sPTypeLink;
			case "sts_list_tasks": return $.ig.CloudFile.prototype.sPTypeTasks;
			case "sts_listitem_tasks": return $.ig.CloudFile.prototype.sPTypeTask;
			case "sts_list_events": return $.ig.CloudFile.prototype.sPTypeEvents;
			case "sts_listitem_events": return $.ig.CloudFile.prototype.sPTypeEvent;
			case "sts_list_announcements": return $.ig.CloudFile.prototype.sPTypeAnnouncements;
			case "sts_listitem_announcements": return $.ig.CloudFile.prototype.sPTypeAnnouncement;
			case "sts_list_contacts": return $.ig.CloudFile.prototype.sPTypeContacts;
			case "sts_listitem_contacts": return $.ig.CloudFile.prototype.sPTypeContact;
			case "sts_list_discussionboard": return $.ig.CloudFile.prototype.sPTypeDiscussionBoard;
			case "sts_listitem_discussionboard": return $.ig.CloudFile.prototype.sPTypeDiscussion;
			case "sts_list_issuetracking": return $.ig.CloudFile.prototype.sPTypeIssueTracking;
			case "sts_listitem_issuetracking": return $.ig.CloudFile.prototype.sPTypeIssue;
			case "sts_list_gantttasks": return $.ig.CloudFile.prototype.sPTypeGanttTasks;
			case "sts_listitem_gantttasks": return $.ig.CloudFile.prototype.sPTypeGanttTask;
			case "sts_list_survey": return $.ig.CloudFile.prototype.sPTypeSurveys;
			case "sts_listitem_survey": return $.ig.CloudFile.prototype.sPTypeSurvey;
			case "sts_list_picturelibrary": return $.ig.CloudFile.prototype.sPTypePictureLibrary;
			case "sts_listitem_picturelibrary": return $.ig.CloudFile.prototype.sPTypePictureLibraryItem;
			case "sts_list_webpagelibrary": return $.ig.CloudFile.prototype.sPTypeWikiPageLibrary;
			case "sts_listitem_webpagelibrary": return $.ig.CloudFile.prototype.sPTypeWikiPageLibraryItem;
			case "sts_list_xmlform": return $.ig.CloudFile.prototype.sPTypeXMLFormLibrary;
			case "sts_listitem_xmlform": return $.ig.CloudFile.prototype.sPTypeXMLFormLibraryItem;
			case "sts_list_posts": return $.ig.CloudFile.prototype.sPTypeBlogPosts;
			case "sts_listitem_posts": return $.ig.CloudFile.prototype.sPTypePost;
			case "sts_list_categories": return $.ig.CloudFile.prototype.sPTypeBlogCategories;
			case "sts_listitem_categories": return $.ig.CloudFile.prototype.sPTypeBlogCategory;
			case "sts_list_comments": return $.ig.CloudFile.prototype.sPTypeBlogComments;
			case "sts_listitem_comments": return $.ig.CloudFile.prototype.sPTypeComment;
			case "urn:content-class:spspeople": return "";
		}
		return $.ig.CloudFile.prototype.sPTypeGeneric;
	}
	/*<EndMethod Name="System.String Infragistics.SharePointProviderUtility::ResolveContentType(System.String, System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointProviderUtility::ResolveContentTypeFromExtension(System.String)" />*/
	resolveContentTypeFromExtension: function (extension) {
		extension = extension.toLowerCase();
		if ($.ig.SharePointProviderUtility.prototype.isExcelExtension(extension)) {
			return $.ig.CloudFile.prototype.typeExcel;
		} else if ($.ig.SharePointProviderUtility.prototype.isPowerPointExtension(extension)) {
			return $.ig.CloudFile.prototype.typePowerPoint;
		} else if ($.ig.SharePointProviderUtility.prototype.isWordExtension(extension)) {
			return $.ig.CloudFile.prototype.typeWord;
		} else if ($.ig.SharePointProviderUtility.prototype.isPdfExtension(extension)) {
			return $.ig.CloudFile.prototype.typePDF;
		} else if ($.ig.SharePointProviderUtility.prototype.isCompressExtension(extension)) {
			return $.ig.CloudFile.prototype.typeZIP;
		}
		return $.ig.CloudFile.prototype.sPTypeGeneric;
	}
	/*<EndMethod Name="System.String Infragistics.SharePointProviderUtility::ResolveContentTypeFromExtension(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointProviderUtility::IsWordExtension(System.String)" />*/
	isWordExtension: function (extension) {
		return $.ig.CloudFile.prototype.documentExtensions().contains(extension);
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointProviderUtility::IsWordExtension(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointProviderUtility::IsExcelExtension(System.String)" />*/
	isExcelExtension: function (extension) {
		return $.ig.CloudFile.prototype.spreadsheetExtensions().contains(extension);
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointProviderUtility::IsExcelExtension(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointProviderUtility::IsPowerPointExtension(System.String)" />*/
	isPowerPointExtension: function (extension) {
		return $.ig.CloudFile.prototype.presentationExtensions().contains(extension);
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointProviderUtility::IsPowerPointExtension(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointProviderUtility::IsPdfExtension(System.String)" />*/
	isPdfExtension: function (extension) {
		return $.ig.CloudFile.prototype.pdfExtensions().contains(extension);
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointProviderUtility::IsPdfExtension(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointProviderUtility::IsCompressExtension(System.String)" />*/
	isCompressExtension: function (extension) {
		return $.ig.CloudFile.prototype.zipExtensions().contains(extension);
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointProviderUtility::IsCompressExtension(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointProviderUtility::IsListItemContentType(System.String)" />*/
	isListItemContentType: function (contentType) {
		switch (contentType) {
			case $.ig.CloudFile.prototype.sPTypeListPageLibraryItem:
			case $.ig.CloudFile.prototype.sPTypeCustomListItem:
			case $.ig.CloudFile.prototype.sPTypeLink:
			case $.ig.CloudFile.prototype.sPTypeTask:
			case $.ig.CloudFile.prototype.sPTypeEvent:
			case $.ig.CloudFile.prototype.sPTypeAnnouncement:
			case $.ig.CloudFile.prototype.sPTypeContact:
			case $.ig.CloudFile.prototype.sPTypeDiscussion:
			case $.ig.CloudFile.prototype.sPTypeIssue:
			case $.ig.CloudFile.prototype.sPTypeGanttTask:
			case $.ig.CloudFile.prototype.sPTypeSurvey:
			case $.ig.CloudFile.prototype.sPTypePost:
			case $.ig.CloudFile.prototype.sPTypeBlogCategory:
			case $.ig.CloudFile.prototype.sPTypeComment:
				return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointProviderUtility::IsListItemContentType(System.String)" />*/
	,
	$type: new $.ig.Type('SharePointProviderUtility', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointProviderUtility" />*/

/*<BeginType Name="Infragistics.SharePointSubsite" />*/

$.ig.util.defType('SharePointSubsite', 'ActivityTrackingBackingStore', {
	init: function (initNumber, json) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.ActivityTrackingBackingStore.prototype.init1.call(this, 1, json);
	},
	init1: function (initNumber) {
		$.ig.ActivityTrackingBackingStore.prototype.init.call(this, 0);
	},
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.SharePointSubsite::CreateNewBackingStoreObjectWithId(System.String)" />*/
	createNewBackingStoreObjectWithId: function (identifier) {
		var subsite = new $.ig.SharePointSubsite(1);
		subsite.identifier(identifier);
		return subsite;
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.SharePointSubsite::CreateNewBackingStoreObjectWithId(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.SharePointSubsite::CreateNewBackingStoreObject(Infragistics.CPJSONObject)" />*/
	createNewBackingStoreObject: function (json) {
		return new $.ig.SharePointSubsite(0, json);
	}
	/*<EndMethod Name="Infragistics.ActivityTrackingBackingStore Infragistics.SharePointSubsite::CreateNewBackingStoreObject(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointSubsite::Title()" />*/
	title: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("title", value);
			return value;
		} else {
			return this.resolveStringForKey("title");
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointSubsite::Title()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointSubsite::Resource()" />*/
	resource: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("resource", value);
			return value;
		} else {
			return this.resolveStringForKey("resource");
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointSubsite::Resource()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointSubsite::SecondaryResource()" />*/
	secondaryResource: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("secondaryResource", value);
			return value;
		} else {
			return this.resolveStringForKey("secondaryResource");
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointSubsite::SecondaryResource()" />*/
	,
	$type: new $.ig.Type('SharePointSubsite', $.ig.ActivityTrackingBackingStore.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointSubsite" />*/

/*<BeginType Name="Infragistics.WindowsAuthProvider" />*/

$.ig.util.defType('WindowsAuthProvider', 'ProviderBase', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.ProviderBase.prototype.init.call(this, 0);
		this.provider($.ig.CloudProviderType.prototype.windows);
		this.setValueForKey("type", $.ig.WindowsAuthProvider.prototype.typeName);
		this.setValueForKey("accounts", new $.ig.Array());
		this.setValueForKey("assignments", new $.ig.Array());
		this.setValueForKey("rvDataSources", new $.ig.Array());
	},
	init1: function (initNumber, json) {
		$.ig.ProviderBase.prototype.init1.call(this, 1, json);
		this.provider($.ig.CloudProviderType.prototype.windows);
		this.setValueForKey("type", $.ig.WindowsAuthProvider.prototype.typeName);
		this.setValueForKey("accounts", json.resolveListForKey("accounts"));
		this.setValueForKey("assignments", json.resolveListForKey("assignments"));
		this.setValueForKey("rvDataSources", json.resolveListForKey("rvDataSources"));
	},
	/*<BeginProperty Name="Infragistics.CPList Infragistics.WindowsAuthProvider::Accounts()" />*/
	accounts: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("accounts", value);
			return value;
		} else {
			return this.resolveListForKey("accounts");
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.WindowsAuthProvider::Accounts()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.WindowsAuthProvider::Assignments()" />*/
	assignments: function (value) {
		if (arguments.length === 1) {
			this.setValueForKey("assignments", value);
			return value;
		} else {
			return this.resolveListForKey("assignments");
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.WindowsAuthProvider::Assignments()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.WindowsAuthProvider::DataSources()" />*/
	dataSources: function (value) {
		if (arguments.length === 1) {
			if (value == null) {
				this.setValueForKey($.ig.ActivityTrackingBackingStore.prototype.dELETE_PREFIX + "rvDataSources", "");
			}
			this.setValueForKey("rvDataSources", value);
			return value;
		} else {
			return this.resolveListForKey("rvDataSources");
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.WindowsAuthProvider::DataSources()" />*/
	,
	$type: new $.ig.Type('WindowsAuthProvider', $.ig.ProviderBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.WindowsAuthProvider" />*/

/*<BeginType Name="Infragistics.WindowsAuthAccount" />*/

$.ig.util.defType('WindowsAuthAccount', 'Object', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.Object.prototype.init.call(this);
	},
	init1: function (initNumber, json) {
		$.ig.Object.prototype.init.call(this);
		this.id(json.resolveStringForKey("id"));
		this.name(json.resolveStringForKey("name"));
		this.domain(json.resolveStringForKey("domain"));
		this.userName(json.resolveStringForKey("userName"));
		this.password(json.resolveStringForKey("password"));
	},
	_id: null,
	/*<BeginProperty Name="System.String Infragistics.WindowsAuthAccount::Id()" />*/
	id: function (value) {
		if (arguments.length === 1) {
			this._id = value;
			return value;
		} else {
			return this._id;
		}
	}
	/*<EndProperty Name="System.String Infragistics.WindowsAuthAccount::Id()" />*/
	,
	_name: null,
	/*<BeginProperty Name="System.String Infragistics.WindowsAuthAccount::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			this._name = value;
			return value;
		} else {
			return this._name;
		}
	}
	/*<EndProperty Name="System.String Infragistics.WindowsAuthAccount::Name()" />*/
	,
	_domain: null,
	/*<BeginProperty Name="System.String Infragistics.WindowsAuthAccount::Domain()" />*/
	domain: function (value) {
		if (arguments.length === 1) {
			this._domain = value;
			return value;
		} else {
			return this._domain;
		}
	}
	/*<EndProperty Name="System.String Infragistics.WindowsAuthAccount::Domain()" />*/
	,
	_userName: null,
	/*<BeginProperty Name="System.String Infragistics.WindowsAuthAccount::UserName()" />*/
	userName: function (value) {
		if (arguments.length === 1) {
			this._userName = value;
			return value;
		} else {
			return this._userName;
		}
	}
	/*<EndProperty Name="System.String Infragistics.WindowsAuthAccount::UserName()" />*/
	,
	_password: null,
	/*<BeginProperty Name="System.String Infragistics.WindowsAuthAccount::Password()" />*/
	password: function (value) {
		if (arguments.length === 1) {
			this._password = value;
			return value;
		} else {
			return this._password;
		}
	}
	/*<EndProperty Name="System.String Infragistics.WindowsAuthAccount::Password()" />*/
	,
	$type: new $.ig.Type('WindowsAuthAccount', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.WindowsAuthAccount" />*/

/*<BeginType Name="Infragistics.WindowsAuthAssignment" />*/

$.ig.util.defType('WindowsAuthAssignment', 'Object', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.Object.prototype.init.call(this);
	},
	init1: function (initNumber, json) {
		$.ig.Object.prototype.init.call(this);
		this.accountId(json.resolveStringForKey("accountId"));
		this.resourceId(json.resolveStringForKey("resourceId"));
	},
	_accountId: null,
	/*<BeginProperty Name="System.String Infragistics.WindowsAuthAssignment::AccountId()" />*/
	accountId: function (value) {
		if (arguments.length === 1) {
			this._accountId = value;
			return value;
		} else {
			return this._accountId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.WindowsAuthAssignment::AccountId()" />*/
	,
	_resourceId: null,
	/*<BeginProperty Name="System.String Infragistics.WindowsAuthAssignment::ResourceId()" />*/
	resourceId: function (value) {
		if (arguments.length === 1) {
			this._resourceId = value;
			return value;
		} else {
			return this._resourceId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.WindowsAuthAssignment::ResourceId()" />*/
	,
	/*<BeginMethod Name="System.JSDictionary Infragistics.WindowsAuthAssignment::ToJson()" />*/
	toJson: function () {
		var json = new $.ig.CPJSONObject(1);
		json.setValueForKey("accountId", this.accountId());
		json.setValueForKey("resourceId", this.resourceId());
		return json.jSONObject();
	}
	/*<EndMethod Name="System.JSDictionary Infragistics.WindowsAuthAssignment::ToJson()" />*/
	,
	$type: new $.ig.Type('WindowsAuthAssignment', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.WindowsAuthAssignment" />*/

/*<BeginType Name="Infragistics.GenericOAuthProvider" />*/

$.ig.util.defType('GenericOAuthProvider', 'OAuthProvider', {
	__clientId: null,
	__clientSecret: null,
	__authenticateUrl: null,
	__tokenUrl: null,
	__logoutUrl: null,
	__scope: null,
	__resource: null,
	__additionalParameters: null,
	init: function (clientId, clientSecret, authenticateUrl, tokenUrl, logoutUrl, scope, resource, additionalParameters, redirectUri) {
		$.ig.OAuthProvider.prototype.init.call(this, new $.ig.OAuthKeys(clientId, clientSecret, redirectUri, scope, null));
		this.__clientId = clientId;
		this.__clientSecret = clientSecret;
		this.__authenticateUrl = authenticateUrl;
		this.__tokenUrl = tokenUrl;
		this.__logoutUrl = logoutUrl;
		this.__scope = scope;
		this.__resource = resource;
		this.__additionalParameters = additionalParameters;
	},
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.GenericOAuthProvider::CloudProvider()" />*/
	cloudProvider: function () {
		return $.ig.CloudProviderType.prototype.notSet;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.GenericOAuthProvider::CloudProvider()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GenericOAuthProvider::GetAuthURL()" />*/
	getAuthURL: function () {
		var action = this.getAuthAction();
		return $.ig.NativeStringUtility.prototype.substring(this.__authenticateUrl, 0, this.__authenticateUrl.length - action.length);
	}
	/*<EndMethod Name="System.String Infragistics.GenericOAuthProvider::GetAuthURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GenericOAuthProvider::GetAuthAction()" />*/
	getAuthAction: function () {
		return this.getUrlLastComponent(this.__authenticateUrl);
	}
	/*<EndMethod Name="System.String Infragistics.GenericOAuthProvider::GetAuthAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GenericOAuthProvider::GetTokenURL()" />*/
	getTokenURL: function () {
		var action = this.getTokenAction();
		return $.ig.NativeStringUtility.prototype.substring(this.__tokenUrl, 0, this.__tokenUrl.length - action.length);
	}
	/*<EndMethod Name="System.String Infragistics.GenericOAuthProvider::GetTokenURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GenericOAuthProvider::GetTokenAction()" />*/
	getTokenAction: function () {
		return this.getUrlLastComponent(this.__tokenUrl);
	}
	/*<EndMethod Name="System.String Infragistics.GenericOAuthProvider::GetTokenAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GenericOAuthProvider::GetLogoutUrl()" />*/
	getLogoutUrl: function () {
		return this.__logoutUrl;
	}
	/*<EndMethod Name="System.String Infragistics.GenericOAuthProvider::GetLogoutUrl()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GenericOAuthProvider::GetUrlLastComponent(System.String)" />*/
	getUrlLastComponent: function (url) {
		var index = $.ig.NativeStringUtility.prototype.lastIndexOf(url, "/");
		if (index >= 0 && index < url.length - 1) {
			return $.ig.NativeStringUtility.prototype.substring(url, index + 1, url.length - 1 - index);
		}
		return "";
	}
	/*<EndMethod Name="System.String Infragistics.GenericOAuthProvider::GetUrlLastComponent(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GenericOAuthProvider::AddAdditionalAccessCodeParams(Infragistics.CPDictionary)" />*/
	addAdditionalAccessCodeParams: function (json) {
		if (this.__resource != null) {
			json.item("resource", this.__resource);
		}
		if (this.__additionalParameters != null) {
			var parameters = $.ig.NativeStringUtility.prototype.split(this.__additionalParameters, "&");
			for (var i = 0; i < parameters.length; i++) {
				var p = parameters[i];
				var keyValue = $.ig.NativeStringUtility.prototype.split(p, "=");
				if (keyValue.length == 2) {
					json.item(keyValue[0], keyValue[1]);
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.GenericOAuthProvider::AddAdditionalAccessCodeParams(Infragistics.CPDictionary)" />*/
	,
	$type: new $.ig.Type('GenericOAuthProvider', $.ig.OAuthProvider.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GenericOAuthProvider" />*/

/*<BeginType Name="Infragistics.GenericOAuthTokenState" />*/

$.ig.util.defType('GenericOAuthTokenState', 'TokenState', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.TokenState.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json) {
		$.ig.GenericOAuthTokenState.prototype.init.call(this, 0);
		this.loadJSON(json);
	},
	_relatedAccountId: null,
	/*<BeginProperty Name="System.String Infragistics.GenericOAuthTokenState::RelatedAccountId()" />*/
	relatedAccountId: function (value) {
		if (arguments.length === 1) {
			this._relatedAccountId = value;
			return value;
		} else {
			return this._relatedAccountId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GenericOAuthTokenState::RelatedAccountId()" />*/
	,
	$type: new $.ig.Type('GenericOAuthTokenState', $.ig.TokenState.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GenericOAuthTokenState" />*/

/*<BeginType Name="Infragistics.IOAuthAccountStorage" />*/

$.ig.util.defType('IOAuthAccountStorage', 'Object', {
	$type: new $.ig.Type('IOAuthAccountStorage', null)
}, true);

/*<EndType Name="Infragistics.IOAuthAccountStorage" />*/

/*<BeginType Name="Infragistics.JWTDecoder" />*/

$.ig.util.defType('JWTDecoder', 'Object', {
	_json: null,
	_sub: null,
	/*<BeginProperty Name="System.String Infragistics.JWTDecoder::Sub()" />*/
	sub: function (value) {
		if (arguments.length === 1) {
			this._sub = value;
			return value;
		} else {
			return this._sub;
		}
	}
	/*<EndProperty Name="System.String Infragistics.JWTDecoder::Sub()" />*/
	,
	_iss: null,
	/*<BeginProperty Name="System.String Infragistics.JWTDecoder::Iss()" />*/
	iss: function (value) {
		if (arguments.length === 1) {
			this._iss = value;
			return value;
		} else {
			return this._iss;
		}
	}
	/*<EndProperty Name="System.String Infragistics.JWTDecoder::Iss()" />*/
	,
	_exp: 0,
	/*<BeginProperty Name="System.Int64 Infragistics.JWTDecoder::Exp()" />*/
	exp: function (value) {
		if (arguments.length === 1) {
			this._exp = value;
			return value;
		} else {
			return this._exp;
		}
	}
	/*<EndProperty Name="System.Int64 Infragistics.JWTDecoder::Exp()" />*/
	,
	_oID: null,
	/*<BeginProperty Name="System.String Infragistics.JWTDecoder::OID()" />*/
	oID: function (value) {
		if (arguments.length === 1) {
			this._oID = value;
			return value;
		} else {
			return this._oID;
		}
	}
	/*<EndProperty Name="System.String Infragistics.JWTDecoder::OID()" />*/
	,
	_aud: null,
	/*<BeginProperty Name="System.String Infragistics.JWTDecoder::Aud()" />*/
	aud: function (value) {
		if (arguments.length === 1) {
			this._aud = value;
			return value;
		} else {
			return this._aud;
		}
	}
	/*<EndProperty Name="System.String Infragistics.JWTDecoder::Aud()" />*/
	,
	_email: null,
	/*<BeginProperty Name="System.String Infragistics.JWTDecoder::Email()" />*/
	email: function (value) {
		if (arguments.length === 1) {
			this._email = value;
			return value;
		} else {
			return this._email;
		}
	}
	/*<EndProperty Name="System.String Infragistics.JWTDecoder::Email()" />*/
	,
	_uniqueName: null,
	/*<BeginProperty Name="System.String Infragistics.JWTDecoder::UniqueName()" />*/
	uniqueName: function (value) {
		if (arguments.length === 1) {
			this._uniqueName = value;
			return value;
		} else {
			return this._uniqueName;
		}
	}
	/*<EndProperty Name="System.String Infragistics.JWTDecoder::UniqueName()" />*/
	,
	_scp: null,
	/*<BeginProperty Name="System.String Infragistics.JWTDecoder::Scp()" />*/
	scp: function (value) {
		if (arguments.length === 1) {
			this._scp = value;
			return value;
		} else {
			return this._scp;
		}
	}
	/*<EndProperty Name="System.String Infragistics.JWTDecoder::Scp()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPJSONObject Infragistics.JWTDecoder::Json()" />*/
	json: function () {
		return this._json.cloneJSON();
	}
	/*<EndProperty Name="Infragistics.CPJSONObject Infragistics.JWTDecoder::Json()" />*/
	,
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="Infragistics.JWTDecoder Infragistics.JWTDecoder::Decode(System.String)" />*/
	decode: function (token) {
		var json = $.ig.TokenState.prototype.convertPayloadToJSON(token);
		return $.ig.JWTDecoder.prototype.create(json);
	}
	/*<EndMethod Name="Infragistics.JWTDecoder Infragistics.JWTDecoder::Decode(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.JWTDecoder Infragistics.JWTDecoder::JWT(Infragistics.CPJSONObject)" />*/
	jWT: function (json) {
		return $.ig.JWTDecoder.prototype.create(json.cloneJSON());
	}
	/*<EndMethod Name="Infragistics.JWTDecoder Infragistics.JWTDecoder::JWT(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.JWTDecoder Infragistics.JWTDecoder::Create(Infragistics.CPJSONObject)" />*/
	create: function (json) {
		var d = new $.ig.JWTDecoder();
		d._json = json;
		d.sub(json.resolveStringForKey("sub"));
		d.iss(json.resolveStringForKey("iss"));
		d.exp(json.resolveLongForKey("exp"));
		d.oID(json.resolveStringForKey("oid"));
		d.aud(json.resolveStringForKey("aud"));
		d.email(json.resolveStringForKey("email"));
		d.uniqueName(json.resolveStringForKey("unique_name"));
		d.scp(json.resolveStringForKey("scp"));
		return d;
	}
	/*<EndMethod Name="Infragistics.JWTDecoder Infragistics.JWTDecoder::Create(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('JWTDecoder', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.JWTDecoder" />*/

/*<BeginType Name="Infragistics.JWTDecoderAsRequest" />*/

$.ig.util.defType('JWTDecoderAsRequest', 'OAuthRequestBase', {
	init: function (token, success, error) {
		$.ig.OAuthRequestBase.prototype.init.call(this, 0, null, token, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.JWTDecoderAsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.JWTDecoderAsRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.JWTDecoderAsRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.JWTDecoderAsRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="Infragistics.OAuthProvider Infragistics.JWTDecoderAsRequest::ResolveProvider(Infragistics.TokenState)" />*/
	resolveProvider: function (token) {
		return null;
	}
	/*<EndMethod Name="Infragistics.OAuthProvider Infragistics.JWTDecoderAsRequest::ResolveProvider(Infragistics.TokenState)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.JWTDecoderAsRequest::Execute()" />*/
	execute: function () {
		var jwt = $.ig.JWTDecoder.prototype.decode(this.tokenState().token().getAccessToken());
		this.success(new $.ig.CloudAccountUserInfoFromJWT(jwt));
	}
	/*<EndMethod Name="System.Void Infragistics.JWTDecoderAsRequest::Execute()" />*/
	,
	$type: new $.ig.Type('JWTDecoderAsRequest', $.ig.OAuthRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.JWTDecoderAsRequest" />*/

/*<BeginType Name="Infragistics.CloudAccountUserInfoFromJWT" />*/

$.ig.util.defType('CloudAccountUserInfoFromJWT', 'CloudAccountUserInfo', {
	_jwt: null,
	init: function (jwt) {
		$.ig.CloudAccountUserInfo.prototype.init1.call(this, 1, jwt.json());
		this._jwt = jwt;
	},
	/*<BeginMethod Name="System.String Infragistics.CloudAccountUserInfoFromJWT::GetUserId()" />*/
	getUserId: function () {
		return this._jwt.sub();
	}
	/*<EndMethod Name="System.String Infragistics.CloudAccountUserInfoFromJWT::GetUserId()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.CloudAccountUserInfoFromJWT::GetEmail()" />*/
	getEmail: function () {
		var email;
		email = this._jwt.email();
		if (email != null) {
			return email;
		}
		email = this._jwt.uniqueName();
		if (email != null) {
			return email;
		}
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.CloudAccountUserInfoFromJWT::GetEmail()" />*/
	,
	$type: new $.ig.Type('CloudAccountUserInfoFromJWT', $.ig.CloudAccountUserInfo.prototype.$type)
}, true);

/*<EndType Name="Infragistics.CloudAccountUserInfoFromJWT" />*/

/*<BeginType Name="Infragistics.OAuthGetTokenRequest" />*/

$.ig.util.defType('OAuthGetTokenRequest', 'SessionRequestBase', {
	__provider: null,
	__redirectUri: null,
	init: function (key, provider, redirectUri, success, error) {
		$.ig.SessionRequestBase.prototype.init1.call(this, 1, key, success, error);
		this.__provider = provider;
		this.__redirectUri = redirectUri;
	},
	/*<BeginProperty Name="Infragistics.OAuthProvider Infragistics.OAuthGetTokenRequest::Provider()" />*/
	provider: function () {
		return this.__provider;
	}
	/*<EndProperty Name="Infragistics.OAuthProvider Infragistics.OAuthGetTokenRequest::Provider()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.OAuthGetTokenRequest::URLEncodeParams()" />*/
	uRLEncodeParams: function () {
		return this.__provider.shouldURLEncodeParams();
	}
	/*<EndMethod Name="System.Boolean Infragistics.OAuthGetTokenRequest::URLEncodeParams()" />*/
	,
	_code: null,
	/*<BeginProperty Name="System.String Infragistics.OAuthGetTokenRequest::Code()" />*/
	code: function (value) {
		if (arguments.length === 1) {
			this._code = value;
			return value;
		} else {
			return this._code;
		}
	}
	/*<EndProperty Name="System.String Infragistics.OAuthGetTokenRequest::Code()" />*/
	,
	_codeVerifier: null,
	/*<BeginProperty Name="System.String Infragistics.OAuthGetTokenRequest::CodeVerifier()" />*/
	codeVerifier: function (value) {
		if (arguments.length === 1) {
			this._codeVerifier = value;
			return value;
		} else {
			return this._codeVerifier;
		}
	}
	/*<EndProperty Name="System.String Infragistics.OAuthGetTokenRequest::CodeVerifier()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthGetTokenRequest::ResolveGrantType()" />*/
	resolveGrantType: function () {
		return "authorization_code";
	}
	/*<EndMethod Name="System.String Infragistics.OAuthGetTokenRequest::ResolveGrantType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthGetTokenRequest::ResolveCodeKey()" />*/
	resolveCodeKey: function () {
		return "code";
	}
	/*<EndMethod Name="System.String Infragistics.OAuthGetTokenRequest::ResolveCodeKey()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.OAuthGetTokenRequest::ShouldIncludeScope()" />*/
	shouldIncludeScope: function () {
		return this.__provider.shouldIncludeScopeInGetTokenRequest();
	}
	/*<EndMethod Name="System.Boolean Infragistics.OAuthGetTokenRequest::ShouldIncludeScope()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.OAuthGetTokenRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.OAuthGetTokenRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.OAuthGetTokenRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.uRLEncodeForm;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.OAuthGetTokenRequest::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.OAuthGetTokenRequest::ParamsInRequestURL()" />*/
	paramsInRequestURL: function () {
		return this.provider().isTwoLegged();
	}
	/*<EndMethod Name="System.Boolean Infragistics.OAuthGetTokenRequest::ParamsInRequestURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthGetTokenRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return this.__provider.getTokenURL();
	}
	/*<EndMethod Name="System.String Infragistics.OAuthGetTokenRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthGetTokenRequest::ResolveAction()" />*/
	resolveAction: function () {
		return this.__provider.getTokenAction();
	}
	/*<EndMethod Name="System.String Infragistics.OAuthGetTokenRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.OAuthGetTokenRequest::ResolveParams()" />*/
	resolveParams: function () {
		var p = new $.ig.Dictionary(0);
		var provider = this.__provider;
		if (this.code() != null) {
			p.item(this.resolveCodeKey(), this.code());
		}
		if (this.codeVerifier() != null) {
			p.item("code_verifier", this.codeVerifier());
		}
		p.item("client_id", provider.getClientID());
		var redirect = this.__redirectUri == null ? provider.getRedirectURI() : this.__redirectUri;
		if (redirect != null) {
			p.item("redirect_uri", redirect);
		}
		p.item("grant_type", this.resolveGrantType());
		if (provider.getResource() != null) {
			p.item("resource", provider.getResource());
		}
		if (this.shouldIncludeScope()) {
			p.item("scope", provider.getScope());
		}
		if (provider.getClientSecret() != null) {
			p.item("client_secret", provider.getClientSecret());
		}
		return p;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.OAuthGetTokenRequest::ResolveParams()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.OAuthGetTokenRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.OAuthGetTokenRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('OAuthGetTokenRequest', $.ig.SessionRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.OAuthGetTokenRequest" />*/

/*<BeginType Name="Infragistics.OAuthLoginWebRequestDelegate" />*/

$.ig.util.defType('OAuthLoginWebRequestDelegate', 'Object', {
	$type: new $.ig.Type('OAuthLoginWebRequestDelegate', null)
}, true);

/*<EndType Name="Infragistics.OAuthLoginWebRequestDelegate" />*/

/*<BeginType Name="Infragistics.OAuthLoginRequest" />*/

$.ig.util.defType('OAuthLoginRequest', 'SessionRequestBase', {
	__provider: null,
	__browser: null,
	__logoutFirst: false,
	__hintEmail: null,
	init: function (initNumber, key, webview, provider, success, error) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.SessionRequestBase.prototype.init1.call(this, 1, key, success, error);
		this.__browser = webview;
		this.__provider = provider;
		this.__logoutFirst = false;
	},
	init1: function (initNumber, key, webview, hintEmail, provider, success, error) {
		$.ig.SessionRequestBase.prototype.init1.call(this, 1, key, success, error);
		this.__browser = webview;
		this.__provider = provider;
		this.__hintEmail = hintEmail;
		this.__logoutFirst = false;
	},
	_toggleEmptyStateBlock: null,
	/*<BeginProperty Name="Infragistics.ExecutionBoolBlock Infragistics.OAuthLoginRequest::ToggleEmptyStateBlock()" />*/
	toggleEmptyStateBlock: function (value) {
		if (arguments.length === 1) {
			this._toggleEmptyStateBlock = value;
			return value;
		} else {
			return this._toggleEmptyStateBlock;
		}
	}
	/*<EndProperty Name="Infragistics.ExecutionBoolBlock Infragistics.OAuthLoginRequest::ToggleEmptyStateBlock()" />*/
	,
	_urlChanged: null,
	/*<BeginProperty Name="Infragistics.StringBlock Infragistics.OAuthLoginRequest::UrlChanged()" />*/
	urlChanged: function (value) {
		if (arguments.length === 1) {
			this._urlChanged = value;
			return value;
		} else {
			return this._urlChanged;
		}
	}
	/*<EndProperty Name="Infragistics.StringBlock Infragistics.OAuthLoginRequest::UrlChanged()" />*/
	,
	_navigationFailed: null,
	/*<BeginProperty Name="Infragistics.ExecutionBoolBlock Infragistics.OAuthLoginRequest::NavigationFailed()" />*/
	navigationFailed: function (value) {
		if (arguments.length === 1) {
			this._navigationFailed = value;
			return value;
		} else {
			return this._navigationFailed;
		}
	}
	/*<EndProperty Name="Infragistics.ExecutionBoolBlock Infragistics.OAuthLoginRequest::NavigationFailed()" />*/
	,
	/*<BeginProperty Name="System.Object Infragistics.OAuthLoginRequest::Browser()" />*/
	browser: function () {
		return this.__browser;
	}
	/*<EndProperty Name="System.Object Infragistics.OAuthLoginRequest::Browser()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.OAuthLoginRequest::LogoutFirst()" />*/
	logoutFirst: function (value) {
		if (arguments.length === 1) {
			this.__logoutFirst = value;
			return value;
		} else {
			return this.__logoutFirst;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.OAuthLoginRequest::LogoutFirst()" />*/
	,
	/*<BeginProperty Name="Infragistics.OAuthProvider Infragistics.OAuthLoginRequest::AuthProvider()" />*/
	authProvider: function () {
		return this.__provider;
	}
	/*<EndProperty Name="Infragistics.OAuthProvider Infragistics.OAuthLoginRequest::AuthProvider()" />*/
	,
	_usePKCE: false,
	/*<BeginProperty Name="System.Boolean Infragistics.OAuthLoginRequest::UsePKCE()" />*/
	usePKCE: function (value) {
		if (arguments.length === 1) {
			this._usePKCE = value;
			return value;
		} else {
			return this._usePKCE;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.OAuthLoginRequest::UsePKCE()" />*/
	,
	_useNativeBrowser: false,
	/*<BeginProperty Name="System.Boolean Infragistics.OAuthLoginRequest::UseNativeBrowser()" />*/
	useNativeBrowser: function (value) {
		if (arguments.length === 1) {
			this._useNativeBrowser = value;
			return value;
		} else {
			return this._useNativeBrowser;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.OAuthLoginRequest::UseNativeBrowser()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.OAuthLoginRequest::ShouldUseNativeBrowser()" />*/
	shouldUseNativeBrowser: function () {
		return this.useNativeBrowser();
	}
	/*<EndMethod Name="System.Boolean Infragistics.OAuthLoginRequest::ShouldUseNativeBrowser()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthLoginRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return this.__provider.getAuthURL();
	}
	/*<EndMethod Name="System.String Infragistics.OAuthLoginRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthLoginRequest::ResolveAction()" />*/
	resolveAction: function () {
		return this.__provider.getAuthAction();
	}
	/*<EndMethod Name="System.String Infragistics.OAuthLoginRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.OAuthLoginRequest::URLEncodeParams()" />*/
	uRLEncodeParams: function () {
		return this.__provider.shouldURLEncodeParams();
	}
	/*<EndMethod Name="System.Boolean Infragistics.OAuthLoginRequest::URLEncodeParams()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.OAuthLoginRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.OAuthLoginRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.OAuthLoginRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.sTRING;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.OAuthLoginRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.OAuthLoginRequest::ResolveParams()" />*/
	resolveParams: function () {
		var values = new $.ig.Dictionary(0);
		var provider = this.__provider;
		values.item("response_type", "code");
		values.item("client_id", provider.getClientID());
		values.item("redirect_uri", this.getRedirectURI());
		if (provider.getScope() != null) {
			values.item("scope", provider.getScope());
		}
		if (provider.getResponseMode() != null) {
			values.item("response_mode", provider.getResponseMode());
		}
		if (provider.getState() != null) {
			values.item("state", provider.getState());
		}
		if (this.__hintEmail != null && this.__hintEmail.length > 0) {
			values.item("login_hint", this.__hintEmail);
		}
		this.__provider.addAdditionalAccessCodeParams(values);
		return values;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.OAuthLoginRequest::ResolveParams()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.OAuthLoginRequest::IsLoopbackRedirectRequired()" />*/
	isLoopbackRedirectRequired: function () {
		return this.__provider != null && this.__provider.isLoopbackRedirectRequired();
	}
	/*<EndMethod Name="System.Boolean Infragistics.OAuthLoginRequest::IsLoopbackRedirectRequired()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthLoginRequest::GetRedirectURI()" />*/
	getRedirectURI: function () {
		return this.__provider.getRedirectURI();
	}
	/*<EndMethod Name="System.String Infragistics.OAuthLoginRequest::GetRedirectURI()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.OAuthLoginRequest::Execute()" />*/
	execute: function () {
	}
	/*<EndMethod Name="System.Void Infragistics.OAuthLoginRequest::Execute()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.OAuthLoginRequest::Logout()" />*/
	logout: function () {
		var logoutUrl = this.__provider.getLogoutUrl1(this.__token);
		this.logout1(logoutUrl);
	}
	/*<EndMethod Name="System.Void Infragistics.OAuthLoginRequest::Logout()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.OAuthLoginRequest::Logout(System.String)" />*/
	logout1: function (url) {
	}
	/*<EndMethod Name="System.Void Infragistics.OAuthLoginRequest::Logout(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.OAuthLoginRequest::LogoutFinished()" />*/
	logoutFinished: function () {
		$.ig.SessionRequestBase.prototype.success.call(this, this.__token);
	}
	/*<EndMethod Name="System.Void Infragistics.OAuthLoginRequest::LogoutFinished()" />*/
	,
	__getTokenRequest: null,
	/*<BeginMethod Name="System.Void Infragistics.OAuthLoginRequest::ProcessAccessCode(System.String, System.String)" />*/
	processAccessCode: function (accessCode, redirectUri) {
		var $self = this;
		if (this.__getTokenRequest == null) {
			this.__getTokenRequest = new $.ig.OAuthGetTokenRequest("GetToken", this.__provider, redirectUri, function (r, o) {
				$self.foundToken(r, o);
			}, function (r, error) {
				$self.__getTokenRequest = null;
				$self.error(error);
			});
			this.__getTokenRequest.code(accessCode);
			this.__getTokenRequest.execute();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.OAuthLoginRequest::ProcessAccessCode(System.String, System.String)" />*/
	,
	__token: null,
	/*<BeginMethod Name="System.Void Infragistics.OAuthLoginRequest::FoundToken(Infragistics.OAuthGetTokenRequest, Infragistics.CPJSONObject)" />*/
	foundToken: function (request, response) {
		this.__getTokenRequest = null;
		this.successWithToken(this.createToken(response));
	}
	/*<EndMethod Name="System.Void Infragistics.OAuthLoginRequest::FoundToken(Infragistics.OAuthGetTokenRequest, Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.OAuthLoginRequest::SuccessWithToken(Infragistics.Token)" />*/
	successWithToken: function (token) {
		if (this.__logoutFirst) {
			this.__token = token;
			this.logout();
		} else {
			$.ig.SessionRequestBase.prototype.success.call(this, token);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.OAuthLoginRequest::SuccessWithToken(Infragistics.Token)" />*/
	,
	/*<BeginMethod Name="Infragistics.Token Infragistics.OAuthLoginRequest::CreateToken(Infragistics.CPJSONObject)" />*/
	createToken: function (json) {
		return new $.ig.Token(1, json);
	}
	/*<EndMethod Name="Infragistics.Token Infragistics.OAuthLoginRequest::CreateToken(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.OAuthLoginRequest::ProcessOAuthCallback(System.String, System.String)" />*/
	processOAuthCallback: function (requestUrl, redirectUrl) {
		var $self = this;
		var qp = $.ig.CPStringUtility.prototype.getQueryParametersDictionary(requestUrl);
		var code = qp.get("code");
		if (code != null) {
			this.processAccessCode(code, redirectUrl);
		} else {
			$.ig.NativeThreadUtility.prototype.executeOnMainThread(function () {
				$self.error(new $.ig.CloudError(1, $.ig.OAuthLoginRequest.prototype.cloudErrorMessage(qp), null));
			});
		}
	}
	/*<EndMethod Name="System.Void Infragistics.OAuthLoginRequest::ProcessOAuthCallback(System.String, System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.OAuthLoginRequest::CloudErrorMessage(Infragistics.CPDictionary)" />*/
	cloudErrorMessage: function (redirectUrlParams) {
		var error = redirectUrlParams.get("error");
		if (error != null) {
			var errorDescription = redirectUrlParams.get("error_description");
			return "Authentication failed. OAuth error: " + error + ". Detail: " + (errorDescription != null ? errorDescription : "n/a");
		} else {
			return "unknown error";
		}
	}
	/*<EndMethod Name="System.String Infragistics.OAuthLoginRequest::CloudErrorMessage(Infragistics.CPDictionary)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.OAuthLoginRequest::CheckURLForAccessCode(System.String, System.String)" />*/
	checkURLForAccessCode: function (requestUrl, redirectUri) {
		var $self = this;
		if (requestUrl != null) {
			if (this.urlChanged() != null) {
				$.ig.NativeThreadUtility.prototype.executeOnMainThread(function () {
					$self.urlChanged()(requestUrl);
				});
			}
			if (redirectUri == null) {
				redirectUri = this.__provider.getRedirectURI();
			}
			if (redirectUri != null && $.ig.NativeStringUtility.prototype.indexOf(requestUrl.toLowerCase(), redirectUri.toLowerCase()) == 0) {
				this.processOAuthCallback(requestUrl, redirectUri);
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.OAuthLoginRequest::CheckURLForAccessCode(System.String, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.OAuthLoginRequest::FailedToNavigate(System.Boolean)" />*/
	failedToNavigate: function (isRecoverable) {
		if (this.navigationFailed() != null) {
			this.navigationFailed()(isRecoverable);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.OAuthLoginRequest::FailedToNavigate(System.Boolean)" />*/
	,
	$type: new $.ig.Type('OAuthLoginRequest', $.ig.SessionRequestBase.prototype.$type, [$.ig.OAuthLoginWebRequestDelegate.prototype.$type])
}, true);

/*<EndType Name="Infragistics.OAuthLoginRequest" />*/

/*<BeginType Name="Infragistics.QuickBooksOAuthProvider" />*/

$.ig.util.defType('QuickBooksOAuthProvider', 'OAuthProvider', {
	init: function (keys) {
		$.ig.OAuthProvider.prototype.init.call(this, keys);
	},
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.QuickBooksOAuthProvider::CloudProvider()" />*/
	cloudProvider: function () {
		return $.ig.CloudProviderType.prototype.quickBooks;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.QuickBooksOAuthProvider::CloudProvider()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.QuickBooksOAuthProvider::GetAuthURL()" />*/
	getAuthURL: function () {
		return "https://appcenter.intuit.com/connect/";
	}
	/*<EndMethod Name="System.String Infragistics.QuickBooksOAuthProvider::GetAuthURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.QuickBooksOAuthProvider::GetAuthAction()" />*/
	getAuthAction: function () {
		return "oauth2";
	}
	/*<EndMethod Name="System.String Infragistics.QuickBooksOAuthProvider::GetAuthAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.QuickBooksOAuthProvider::GetTokenURL()" />*/
	getTokenURL: function () {
		return "https://oauth.platform.intuit.com/oauth2/v1/tokens/";
	}
	/*<EndMethod Name="System.String Infragistics.QuickBooksOAuthProvider::GetTokenURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.QuickBooksOAuthProvider::GetTokenAction()" />*/
	getTokenAction: function () {
		return "bearer";
	}
	/*<EndMethod Name="System.String Infragistics.QuickBooksOAuthProvider::GetTokenAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.QuickBooksOAuthProvider::AccountId(System.String)" />*/
	accountId: function (providerJson) {
		var cpjson = $.ig.CPJSONObject.prototype.createFromString(providerJson);
		if (cpjson == null) {
			return null;
		}
		var ts = $.ig.TokenState.prototype.loadFromJSON(cpjson);
		if (ts.userInfo() == null) {
			return null;
		}
		return ts.userInfo().getUserId();
	}
	/*<EndMethod Name="System.String Infragistics.QuickBooksOAuthProvider::AccountId(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.QuickBooksOAuthProvider::AddAdditionalAccessCodeParams(Infragistics.CPDictionary)" />*/
	addAdditionalAccessCodeParams: function (json) {
		$.ig.OAuthProvider.prototype.addAdditionalAccessCodeParams.call(this, json);
	}
	/*<EndMethod Name="System.Void Infragistics.QuickBooksOAuthProvider::AddAdditionalAccessCodeParams(Infragistics.CPDictionary)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.QuickBooksOAuthProvider::ShouldURLEncodeParams()" />*/
	shouldURLEncodeParams: function () {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.QuickBooksOAuthProvider::ShouldURLEncodeParams()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.QuickBooksOAuthProvider::GetUserInfoUrl()" />*/
	getUserInfoUrl: function () {
		return $.ig.QuickBooksOAuthProvider.prototype._useSandbox ? "https://sandbox-accounts.platform.intuit.com/v1/openid_connect/userinfo" : "https://accounts.platform.intuit.com/v1/openid_connect/userinfo";
	}
	/*<EndMethod Name="System.String Infragistics.QuickBooksOAuthProvider::GetUserInfoUrl()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.QuickBooksOAuthProvider::GetBaseUrl()" />*/
	getBaseUrl: function () {
		return $.ig.QuickBooksOAuthProvider.prototype.getBaseUrl1($.ig.QuickBooksOAuthProvider.prototype._useSandbox);
	}
	/*<EndMethod Name="System.String Infragistics.QuickBooksOAuthProvider::GetBaseUrl()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.QuickBooksOAuthProvider::GetRealmBaseUrl(System.String)" />*/
	getRealmBaseUrl: function (realmId) {
		return $.ig.QuickBooksOAuthProvider.prototype.getBaseUrl() + "v3/company/" + realmId + "/";
	}
	/*<EndMethod Name="System.String Infragistics.QuickBooksOAuthProvider::GetRealmBaseUrl(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.QuickBooksOAuthProvider::GetBaseUrl(System.Boolean)" />*/
	getBaseUrl1: function (sandbox) {
		return sandbox ? "https://sandbox-quickbooks.api.intuit.com/" : "https://quickbooks.api.intuit.com/";
	}
	/*<EndMethod Name="System.String Infragistics.QuickBooksOAuthProvider::GetBaseUrl(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.QuickBooksOAuthProvider::GetEnvironment()" />*/
	getEnvironment: function () {
		return $.ig.QuickBooksOAuthProvider.prototype._useSandbox ? $.ig.QuickBooksOAuthProvider.prototype.environmentSandbox : $.ig.QuickBooksOAuthProvider.prototype.environmentProduction;
	}
	/*<EndMethod Name="System.String Infragistics.QuickBooksOAuthProvider::GetEnvironment()" />*/
	,
	$type: new $.ig.Type('QuickBooksOAuthProvider', $.ig.OAuthProvider.prototype.$type)
}, true);

/*<EndType Name="Infragistics.QuickBooksOAuthProvider" />*/

/*<BeginType Name="Infragistics.QuickBooksUserInfo" />*/

$.ig.util.defType('QuickBooksUserInfo', 'CloudAccountUserInfo', {
	init: function (json) {
		$.ig.CloudAccountUserInfo.prototype.init1.call(this, 1, json.cloneJSON());
	},
	/*<BeginMethod Name="System.String Infragistics.QuickBooksUserInfo::GetDisplayName()" />*/
	getDisplayName: function () {
		var firstName = this.getFirstName();
		var lastName = this.resolveStringForKey("familyName");
		if ($.ig.CPStringUtility.prototype.isNullOrEmpty(firstName)) {
			if ($.ig.CPStringUtility.prototype.isNullOrEmpty(lastName)) {
				return this.getEmail();
			} else {
				return lastName;
			}
		} else if ($.ig.CPStringUtility.prototype.isNullOrEmpty(lastName)) {
			return firstName;
		} else {
			return firstName + " " + lastName;
		}
	}
	/*<EndMethod Name="System.String Infragistics.QuickBooksUserInfo::GetDisplayName()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.QuickBooksUserInfo::GetFirstName()" />*/
	getFirstName: function () {
		return this.resolveStringForKey("givenName");
	}
	/*<EndMethod Name="System.String Infragistics.QuickBooksUserInfo::GetFirstName()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.QuickBooksUserInfo::GetUserId()" />*/
	getUserId: function () {
		return this.resolveStringForKey("userid");
	}
	/*<EndMethod Name="System.String Infragistics.QuickBooksUserInfo::GetUserId()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.QuickBooksUserInfo::GetEmail()" />*/
	getEmail: function () {
		return this.resolveStringForKey("email");
	}
	/*<EndMethod Name="System.String Infragistics.QuickBooksUserInfo::GetEmail()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.QuickBooksUserInfo::GetRealmId()" />*/
	getRealmId: function () {
		return this.resolveStringForKey("realmid");
	}
	/*<EndMethod Name="System.String Infragistics.QuickBooksUserInfo::GetRealmId()" />*/
	,
	$type: new $.ig.Type('QuickBooksUserInfo', $.ig.CloudAccountUserInfo.prototype.$type)
}, true);

/*<EndType Name="Infragistics.QuickBooksUserInfo" />*/

/*<BeginType Name="Infragistics.ReportPlusFileLocation" />*/

$.ig.util.defType('ReportPlusFileLocation', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	_identifier: null,
	/*<BeginProperty Name="System.String Infragistics.ReportPlusFileLocation::Identifier()" />*/
	identifier: function (value) {
		if (arguments.length === 1) {
			this._identifier = value;
			return value;
		} else {
			return this._identifier;
		}
	}
	/*<EndProperty Name="System.String Infragistics.ReportPlusFileLocation::Identifier()" />*/
	,
	_locationType: 0,
	/*<BeginProperty Name="Infragistics.ReportPlusLocationType Infragistics.ReportPlusFileLocation::LocationType()" />*/
	locationType: function (value) {
		if (arguments.length === 1) {
			this._locationType = value;
			return value;
		} else {
			return this._locationType;
		}
	}
	/*<EndProperty Name="Infragistics.ReportPlusLocationType Infragistics.ReportPlusFileLocation::LocationType()" />*/
	,
	_path: null,
	/*<BeginProperty Name="Infragistics.CPList Infragistics.ReportPlusFileLocation::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="Infragistics.CPList Infragistics.ReportPlusFileLocation::Path()" />*/
	,
	_teamId: null,
	/*<BeginProperty Name="System.String Infragistics.ReportPlusFileLocation::TeamId()" />*/
	teamId: function (value) {
		if (arguments.length === 1) {
			this._teamId = value;
			return value;
		} else {
			return this._teamId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.ReportPlusFileLocation::TeamId()" />*/
	,
	/*<BeginMethod Name="Infragistics.ReportPlusLocationType Infragistics.ReportPlusFileLocation::LocationTypeFromString(System.String)" />*/
	locationTypeFromString: function (location) {
		var locationType = $.ig.ReportPlusLocationType.prototype.notFound;
		if (location.equals("Direct")) {
			locationType = $.ig.ReportPlusLocationType.prototype.direct;
		} else if (location.equals("Shared")) {
			locationType = $.ig.ReportPlusLocationType.prototype.shared;
		} else if (location.equals("Forbidden")) {
			locationType = $.ig.ReportPlusLocationType.prototype.forbidden;
		}
		return locationType;
	}
	/*<EndMethod Name="Infragistics.ReportPlusLocationType Infragistics.ReportPlusFileLocation::LocationTypeFromString(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.ReportPlusFileLocation::LocationTypeToString(Infragistics.ReportPlusLocationType)" />*/
	locationTypeToString: function (location) {
		if (location == $.ig.ReportPlusLocationType.prototype.direct) {
			return "Direct";
		}
		return "Shared";
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusFileLocation::LocationTypeToString(Infragistics.ReportPlusLocationType)" />*/
	,
	$type: new $.ig.Type('ReportPlusFileLocation', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusFileLocation" />*/

/*<BeginType Name="Infragistics.ReportPlusResponse" />*/

$.ig.util.defType('ReportPlusResponse', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	_error: null,
	/*<BeginProperty Name="Infragistics.CloudError Infragistics.ReportPlusResponse::Error()" />*/
	error: function (value) {
		if (arguments.length === 1) {
			this._error = value;
			return value;
		} else {
			return this._error;
		}
	}
	/*<EndProperty Name="Infragistics.CloudError Infragistics.ReportPlusResponse::Error()" />*/
	,
	_result: null,
	/*<BeginProperty Name="System.Object Infragistics.ReportPlusResponse::Result()" />*/
	result: function (value) {
		if (arguments.length === 1) {
			this._result = value;
			return value;
		} else {
			return this._result;
		}
	}
	/*<EndProperty Name="System.Object Infragistics.ReportPlusResponse::Result()" />*/
	,
	$type: new $.ig.Type('ReportPlusResponse', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusResponse" />*/

/*<BeginType Name="Infragistics.ReportPlusRequestBase" />*/

$.ig.util.defType('ReportPlusRequestBase', 'InfragisticsAPIRequestBase', {
	init: function (key, success, error) {
		$.ig.InfragisticsAPIRequestBase.prototype.init.call(this, 0, key, success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.ReportPlusRequestBase::ResolveAction()" />*/
	resolveAction: function () {
		return "RevealFile/";
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusRequestBase::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.ReportPlusResponse Infragistics.ReportPlusRequestBase::ParseReportPlusResponse(Infragistics.CPJSONObject)" />*/
	parseReportPlusResponse: function (response) {
		var error = response.resolveJSONForKey("error");
		var values = response.resolveListForKey("values");
		var cloudError = null;
		if (response.containsKey("error")) {
			var errorCode = error.resolveIntegerForKey("errorCode");
			cloudError = new $.ig.CloudError(1, error.resolveStringForKey("errorMessage"), null);
		}
		var result = new $.ig.ReportPlusResponse();
		result.error(cloudError);
		result.result(values);
		return result;
	}
	/*<EndMethod Name="Infragistics.ReportPlusResponse Infragistics.ReportPlusRequestBase::ParseReportPlusResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.ReportPlusRequestBase::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		if (response.containsKey("error")) {
			var jsonError = $.ig.CPJSONObject.prototype.createFromJSONObject(response.resolveObjectForKey("error"));
			this.error(new $.ig.CloudError(1, jsonError.resolveStringForKey("errorMessage"), null));
			return null;
		} else {
			return this.processJSONSuccessfulResponse(response);
		}
	}
	/*<EndMethod Name="System.Object Infragistics.ReportPlusRequestBase::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.ReportPlusRequestBase::ProcessJSONSuccessfulResponse(Infragistics.CPJSONObject)" />*/
	processJSONSuccessfulResponse: function (response) {
		return $.ig.InfragisticsAPIRequestBase.prototype.processJSONResponse.call(this, response);
	}
	/*<EndMethod Name="System.Object Infragistics.ReportPlusRequestBase::ProcessJSONSuccessfulResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('ReportPlusRequestBase', $.ig.InfragisticsAPIRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusRequestBase" />*/

/*<BeginType Name="Infragistics.ReportPlusUpsertDashboardRequest" />*/

$.ig.util.defType('ReportPlusUpsertDashboardRequest', 'ReportPlusRequestBase', {
	__dashboard: null,
	__parentId: null,
	__name: null,
	__dashboardId: null,
	init: function (name, dashboardId, dashboardJson, parentId, success, error) {
		$.ig.ReportPlusRequestBase.prototype.init.call(this, "RPUpsertDashboard", success, error);
		this.__dashboard = dashboardJson;
		this.__parentId = parentId;
		this.__name = name;
		this.__dashboardId = dashboardId;
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusUpsertDashboardRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusUpsertDashboardRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.ReportPlusUpsertDashboardRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.sTRING;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.ReportPlusUpsertDashboardRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.ReportPlusUpsertDashboardRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setJSONForKey("model", this.__dashboard);
		obj.setValueForKey("type", $.ig.CloudFile.prototype.typeDashboard);
		obj.setValueForKey("parent", this.__parentId);
		obj.setValueForKey("name", this.__name);
		if (this.__dashboardId != null) {
			obj.setValueForKey("id", this.__dashboardId);
		}
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusUpsertDashboardRequest::ResolvePostContent()" />*/
	,
	$type: new $.ig.Type('ReportPlusUpsertDashboardRequest', $.ig.ReportPlusRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusUpsertDashboardRequest" />*/

/*<BeginType Name="Infragistics.ReportPlusUpsertFolderRequest" />*/

$.ig.util.defType('ReportPlusUpsertFolderRequest', 'ReportPlusRequestBase', {
	__parentId: null,
	__name: null,
	init: function (name, parentId, success, error) {
		$.ig.ReportPlusRequestBase.prototype.init.call(this, "RPUpsertFolder", success, error);
		this.__parentId = parentId;
		this.__name = name;
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusUpsertFolderRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusUpsertFolderRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.ReportPlusUpsertFolderRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setValueForKey("type", $.ig.ReportPlusFile.prototype.folderType);
		obj.setValueForKey("parent", this.__parentId);
		obj.setValueForKey("name", this.__name);
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusUpsertFolderRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.ReportPlusUpsertFolderRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.sTRING;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.ReportPlusUpsertFolderRequest::ResolveResponseType()" />*/
	,
	$type: new $.ig.Type('ReportPlusUpsertFolderRequest', $.ig.ReportPlusRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusUpsertFolderRequest" />*/

/*<BeginType Name="Infragistics.ReportPlusGetFriendlyNamesRequest" />*/

$.ig.util.defType('ReportPlusGetFriendlyNamesRequest', 'ReportPlusRequestBase', {
	__ids: null,
	init: function (ids, success, error) {
		$.ig.ReportPlusRequestBase.prototype.init.call(this, "GetFriendlyNames", success, error);
		this.__ids = ids;
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetFriendlyNamesRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetFriendlyNamesRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetFriendlyNamesRequest::ResolveAction()" />*/
	resolveAction: function () {
		return $.ig.ReportPlusRequestBase.prototype.resolveAction.call(this) + this._uniqueKey;
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetFriendlyNamesRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetFriendlyNamesRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setValueForKey("ids", this.__ids);
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetFriendlyNamesRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.ReportPlusGetFriendlyNamesRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.ReportPlusGetFriendlyNamesRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.ReportPlusGetFriendlyNamesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.ReportPlusGetFriendlyNamesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('ReportPlusGetFriendlyNamesRequest', $.ig.ReportPlusRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusGetFriendlyNamesRequest" />*/

/*<BeginType Name="Infragistics.ReportPlusDeleteFileRequest" />*/

$.ig.util.defType('ReportPlusDeleteFileRequest', 'ReportPlusRequestBase', {
	__id: null,
	init: function (fileId, success, error) {
		$.ig.ReportPlusRequestBase.prototype.init.call(this, "ReportPlusDeleteFile", success, error);
		this.__id = fileId;
	},
	/*<BeginMethod Name="System.String Infragistics.ReportPlusDeleteFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return $.ig.ReportPlusRequestBase.prototype.resolveAction.call(this) + this.__id;
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusDeleteFileRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusDeleteFileRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.dELETE;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusDeleteFileRequest::ResolveHTTPMethod()" />*/
	,
	$type: new $.ig.Type('ReportPlusDeleteFileRequest', $.ig.ReportPlusRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusDeleteFileRequest" />*/

/*<BeginType Name="Infragistics.ReportPlusFile" />*/

$.ig.util.defType('ReportPlusFile', 'CloudFile', {
	init: function (initNumber) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.CloudFile.prototype.init.call(this, 0);
	},
	init1: function (initNumber, json, providerId) {
		$.ig.CloudFile.prototype.init1.call(this, 1, json, providerId);
	},
	/*<BeginProperty Name="System.String Infragistics.ReportPlusFile::Author()" />*/
	author: function () {
		return this.resolveStringForKey("author");
	}
	/*<EndProperty Name="System.String Infragistics.ReportPlusFile::Author()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ReportPlusFile::ProviderOwnerName()" />*/
	providerOwnerName: function () {
		return this.resolveStringForKey("OwnerFullName");
	}
	/*<EndProperty Name="System.String Infragistics.ReportPlusFile::ProviderOwnerName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ReportPlusFile::ProviderOwnerGivenName()" />*/
	providerOwnerGivenName: function () {
		return this.resolveStringForKey("OwnerFirstName");
	}
	/*<EndProperty Name="System.String Infragistics.ReportPlusFile::ProviderOwnerGivenName()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ReportPlusFile::ProviderOwnerEmail()" />*/
	providerOwnerEmail: function () {
		return this.resolveStringForKey("OwnerEmail");
	}
	/*<EndProperty Name="System.String Infragistics.ReportPlusFile::ProviderOwnerEmail()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ReportPlusFile::DownloadUrl()" />*/
	downloadUrl: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.ReportPlusFile::DownloadUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ReportPlusFile::EmbedUrl()" />*/
	embedUrl: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.ReportPlusFile::EmbedUrl()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.ReportPlusFile::IsFolder()" />*/
	isFolder: function () {
		var type = this.resolveStringForKey("type");
		return (type == $.ig.ReportPlusFile.prototype.rootType || type == $.ig.ReportPlusFile.prototype.folderType);
	}
	/*<EndProperty Name="System.Boolean Infragistics.ReportPlusFile::IsFolder()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.ReportPlusFile::CopyEnabled()" />*/
	copyEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.ReportPlusFile::CopyEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.ReportPlusFile::DeleteEnabled()" />*/
	deleteEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.ReportPlusFile::DeleteEnabled()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.ReportPlusFile::MoveEnabled()" />*/
	moveEnabled: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.ReportPlusFile::MoveEnabled()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ReportPlusFile::Type()" />*/
	type: function () {
		if (this.isFolder()) {
			return $.ig.CloudFile.prototype.typeFolder;
		} else {
			return $.ig.CloudFile.prototype.typeDashboard;
		}
	}
	/*<EndProperty Name="System.String Infragistics.ReportPlusFile::Type()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.ReportPlusFile::IsInTrash()" />*/
	isInTrash: function () {
		return false;
	}
	/*<EndProperty Name="System.Boolean Infragistics.ReportPlusFile::IsInTrash()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ReportPlusFile::MimeType()" />*/
	mimeType: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.ReportPlusFile::MimeType()" />*/
	,
	/*<BeginMethod Name="System.Nullable Infragistics.ReportPlusFile::ParseDashboardModifiedOn(System.String)" />*/
	parseDashboardModifiedOn: function (modifiedOnString) {
		if (modifiedOnString != null) {
			var dotIndex = $.ig.NativeStringUtility.prototype.indexOf(modifiedOnString, ".");
			if (dotIndex > 0) {
				modifiedOnString = $.ig.NativeStringUtility.prototype.substring(modifiedOnString, 0, dotIndex) + "Z";
			}
			return $.ig.util.toNullable($.ig.Date.prototype.$type, $.ig.NativeDateUtility.prototype.parseString(modifiedOnString, $.ig.DateUtility.prototype.getRFC3339FormatString()));
		}
		return $.ig.util.toNullable($.ig.Date.prototype.$type, null);
	}
	/*<EndMethod Name="System.Nullable Infragistics.ReportPlusFile::ParseDashboardModifiedOn(System.String)" />*/
	,
	/*<BeginProperty Name="Infragistics.CPDateTime Infragistics.ReportPlusFile::ModifiedDate()" />*/
	modifiedDate: function () {
		return null;
	}
	/*<EndProperty Name="Infragistics.CPDateTime Infragistics.ReportPlusFile::ModifiedDate()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ReportPlusFile::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			$.ig.ActivityTrackingBackingStore.prototype.name.call(this, value);
			return value;
		} else {
			return this.resolveStringForKey("name");
		}
	}
	/*<EndProperty Name="System.String Infragistics.ReportPlusFile::Name()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ReportPlusFile::OpenUrl()" />*/
	openUrl: function () {
		return null;
	}
	/*<EndProperty Name="System.String Infragistics.ReportPlusFile::OpenUrl()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ReportPlusFile::PathIdentifier()" />*/
	pathIdentifier: function () {
		return this.resolveStringForKey("id");
	}
	/*<EndProperty Name="System.String Infragistics.ReportPlusFile::PathIdentifier()" />*/
	,
	/*<BeginProperty Name="System.Int64 Infragistics.ReportPlusFile::Size()" />*/
	size: function () {
		return 0;
	}
	/*<EndProperty Name="System.Int64 Infragistics.ReportPlusFile::Size()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ReportPlusFile::SectionKey()" />*/
	sectionKey: function () {
		if (this.isFolder()) {
			return $.ig.CloudFile.prototype.sectionKey.call(this);
		}
		return $.ig.CloudFile.prototype.typeDashboards;
	}
	/*<EndProperty Name="System.String Infragistics.ReportPlusFile::SectionKey()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.ReportPlusFile::ResolveFilePath()" />*/
	resolveFilePath: function () {
		return this.pathIdentifier();
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusFile::ResolveFilePath()" />*/
	,
	/*<BeginProperty Name="Infragistics.CPJSONObject Infragistics.ReportPlusFile::Model()" />*/
	model: function () {
		return this.resolveJSONForKey("model");
	}
	/*<EndProperty Name="Infragistics.CPJSONObject Infragistics.ReportPlusFile::Model()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ReportPlusFile::FileId()" />*/
	fileId: function () {
		return this.resolveStringForKey("fileId");
	}
	/*<EndProperty Name="System.String Infragistics.ReportPlusFile::FileId()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.ReportPlusFile::ParentId()" />*/
	parentId: function () {
		return this.resolveStringForKey("parentId");
	}
	/*<EndProperty Name="System.String Infragistics.ReportPlusFile::ParentId()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.ReportPlusFile::ProviderType()" />*/
	providerType: function () {
		return $.ig.CloudProviderType.prototype.reportPlus;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.ReportPlusFile::ProviderType()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.ReportPlusFile::IsOwner()" />*/
	isOwner: function () {
		return this.resolveBoolForKey("isOwner");
	}
	/*<EndProperty Name="System.Boolean Infragistics.ReportPlusFile::IsOwner()" />*/
	,
	$type: new $.ig.Type('ReportPlusFile', $.ig.CloudFile.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusFile" />*/

/*<BeginType Name="Infragistics.ReportPlusGetFileLocationRequest" />*/

$.ig.util.defType('ReportPlusGetFileLocationRequest', 'ReportPlusRequestBase', {
	__identifier: null,
	init: function (identifier, success, error) {
		$.ig.ReportPlusRequestBase.prototype.init.call(this, "GetFileLocation", success, error);
		this.__identifier = identifier;
	},
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetFileLocationRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "ReportPlusFile/" + this.__identifier + "/location";
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetFileLocationRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetFileLocationRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetFileLocationRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.ReportPlusGetFileLocationRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.ReportPlusGetFileLocationRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.ReportPlusGetFileLocationRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		$.ig.ReportPlusRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.ReportPlusGetFileLocationRequest::Error(Infragistics.CloudError)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.ReportPlusGetFileLocationRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var location = new $.ig.ReportPlusFileLocation();
		location.identifier(response.resolveStringForKey("fileId"));
		location.locationType($.ig.ReportPlusFileLocation.prototype.locationTypeFromString(response.resolveStringForKey("type")));
		location.teamId(response.resolveStringForKey("teamId"));
		location.path(response.resolveListForKey("path"));
		return location;
	}
	/*<EndMethod Name="System.Object Infragistics.ReportPlusGetFileLocationRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('ReportPlusGetFileLocationRequest', $.ig.ReportPlusRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusGetFileLocationRequest" />*/

/*<BeginType Name="Infragistics.ReportPlusApproveShareRequest" />*/

$.ig.util.defType('ReportPlusApproveShareRequest', 'ReportPlusRequestBase', {
	__itemId: null,
	__requestId: null,
	init: function (itemId, requestId, success, error) {
		$.ig.ReportPlusRequestBase.prototype.init.call(this, "ApproveShare", success, error);
		this.__itemId = itemId;
		this.__requestId = requestId;
	},
	/*<BeginMethod Name="System.String Infragistics.ReportPlusApproveShareRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "ReportPlusFile/RequestShare/" + this.__itemId + "/" + this.__requestId;
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusApproveShareRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusApproveShareRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusApproveShareRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.ReportPlusApproveShareRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.ReportPlusApproveShareRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.ReportPlusApproveShareRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		$.ig.ReportPlusRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.ReportPlusApproveShareRequest::Error(Infragistics.CloudError)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.ReportPlusApproveShareRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.ReportPlusApproveShareRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('ReportPlusApproveShareRequest', $.ig.ReportPlusRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusApproveShareRequest" />*/

/*<BeginType Name="Infragistics.ReportPlusCreateWidgetRequest" />*/

$.ig.util.defType('ReportPlusCreateWidgetRequest', 'ReportPlusRequestBase', {
	__dataSources: null,
	__dataSourceItem: null,
	__dataSpec: null,
	__expiration: 0,
	init: function (dataSources, dataSourceItem, dataSpecJson, expiration, success, error) {
		$.ig.ReportPlusRequestBase.prototype.init.call(this, "CreateWidget", success, error);
		this.__dataSources = dataSources;
		this.__dataSourceItem = dataSourceItem;
		this.__dataSpec = dataSpecJson;
		this.__expiration = expiration;
	},
	/*<BeginMethod Name="System.String Infragistics.ReportPlusCreateWidgetRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "dashboard/editor/datasource/createwidget";
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusCreateWidgetRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusCreateWidgetRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusCreateWidgetRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.ReportPlusCreateWidgetRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setValueForKey("dataSources", this.__dataSources);
		obj.setJSONForKey("dataSourceItem", this.__dataSourceItem);
		obj.setJSONForKey("dataSpec", this.__dataSpec);
		obj.setValueForKey("expiration", this.__expiration);
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusCreateWidgetRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.ReportPlusCreateWidgetRequest::ProcessJSONSuccessfulResponse(Infragistics.CPJSONObject)" />*/
	processJSONSuccessfulResponse: function (response) {
		var widget = response.resolveObjectForKey("value");
		return widget;
	}
	/*<EndMethod Name="System.Object Infragistics.ReportPlusCreateWidgetRequest::ProcessJSONSuccessfulResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('ReportPlusCreateWidgetRequest', $.ig.ReportPlusRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusCreateWidgetRequest" />*/

/*<BeginType Name="Infragistics.ReportPlusCloudFileMetadataRequest" />*/

$.ig.util.defType('ReportPlusCloudFileMetadataRequest', 'ReportPlusRequestBase', {
	__dataSource: null,
	__cloudFile: null,
	init: function (dataSource, cloudFile, success, error) {
		$.ig.ReportPlusRequestBase.prototype.init.call(this, "CloudFileMetadata", success, error);
		this.__dataSource = dataSource;
		this.__cloudFile = cloudFile;
	},
	/*<BeginMethod Name="System.String Infragistics.ReportPlusCloudFileMetadataRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "dashboard/editor/datasource/cloudmetadata";
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusCloudFileMetadataRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusCloudFileMetadataRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusCloudFileMetadataRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.ReportPlusCloudFileMetadataRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setJSONForKey("dataSource", this.__dataSource);
		obj.setJSONForKey("cloudFile", this.__cloudFile);
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusCloudFileMetadataRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.ReportPlusCloudFileMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var metadataItem = response.resolveObjectForKey("value");
		return metadataItem;
	}
	/*<EndMethod Name="System.Object Infragistics.ReportPlusCloudFileMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('ReportPlusCloudFileMetadataRequest', $.ig.ReportPlusRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusCloudFileMetadataRequest" />*/

/*<BeginType Name="Infragistics.ReportPlusGetAdditionalMetadataRequest" />*/

$.ig.util.defType('ReportPlusGetAdditionalMetadataRequest', 'ReportPlusRequestBase', {
	__dataSource: null,
	__accountId: null,
	__accountUsername: null,
	__accountDomain: null,
	__accountPassword: null,
	__identifier: null,
	__accountType: 0,
	__account: null,
	init: function (dataSourceJson, identifier, accountId, accountDomain, accountUsername, accountPassword, accountType, account, success, error) {
		$.ig.ReportPlusRequestBase.prototype.init.call(this, "GetAdditionalMetadata", success, error);
		this.__dataSource = dataSourceJson;
		this.__identifier = identifier;
		this.__accountId = accountId;
		this.__accountUsername = accountUsername;
		this.__accountPassword = accountPassword;
		this.__accountDomain = accountDomain;
		this.__accountType = accountType;
		this.__account = account;
	},
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetAdditionalMetadataRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "dashboard/editor/datasource/getadditionalmetadata";
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetAdditionalMetadataRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetAdditionalMetadataRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetAdditionalMetadataRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.ReportPlusGetAdditionalMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return this.parseReportPlusResponse(response);
	}
	/*<EndMethod Name="System.Object Infragistics.ReportPlusGetAdditionalMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetAdditionalMetadataRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setJSONForKey("dataSource", this.__dataSource);
		obj.setValueForKey("identifier", this.__identifier);
		obj.setValueForKey("accountId", this.__accountId);
		obj.setValueForKey("accountUsername", this.__accountUsername);
		obj.setValueForKey("accountDomain", this.__accountDomain);
		obj.setValueForKey("accountPassword", this.__accountPassword);
		obj.setValueForKey("accountType", this.__accountType);
		if (this.__account != null) {
			obj.setJSONForKey("account", this.__account);
		}
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetAdditionalMetadataRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.ReportPlusGetAdditionalMetadataRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.jSON;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.ReportPlusGetAdditionalMetadataRequest::ResolveResponseType()" />*/
	,
	$type: new $.ig.Type('ReportPlusGetAdditionalMetadataRequest', $.ig.ReportPlusRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusGetAdditionalMetadataRequest" />*/

/*<BeginType Name="Infragistics.ReportPlusGetChildrenMetadataRequest" />*/

$.ig.util.defType('ReportPlusGetChildrenMetadataRequest', 'ReportPlusRequestBase', {
	__dataSource: null,
	__metadataItem: null,
	__forceRefresh: false,
	init: function (dataSource, metadataItem, forceRefresh, success, error) {
		$.ig.ReportPlusRequestBase.prototype.init.call(this, "GetChildrenMetadata", success, error);
		this.__dataSource = dataSource;
		this.__metadataItem = metadataItem;
		this.__forceRefresh = forceRefresh;
	},
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetChildrenMetadataRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "dashboard/editor/datasource/getchildren";
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetChildrenMetadataRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetChildrenMetadataRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetChildrenMetadataRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetChildrenMetadataRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setJSONForKey("dataSource", this.__dataSource);
		obj.setJSONForKey("dataSourceMetaDataItem", this.__metadataItem);
		obj.setValueForKey("forceRefresh", this.__forceRefresh);
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetChildrenMetadataRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.ReportPlusGetChildrenMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return this.parseReportPlusResponse(response);
	}
	/*<EndMethod Name="System.Object Infragistics.ReportPlusGetChildrenMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('ReportPlusGetChildrenMetadataRequest', $.ig.ReportPlusRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusGetChildrenMetadataRequest" />*/

/*<BeginType Name="Infragistics.ReportPlusGetRootMetadataRequest" />*/

$.ig.util.defType('ReportPlusGetRootMetadataRequest', 'ReportPlusRequestBase', {
	__dataSource: null,
	init: function (dataSource, success, error) {
		$.ig.ReportPlusRequestBase.prototype.init.call(this, "GetRootMetadata", success, error);
		this.__dataSource = dataSource;
	},
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetRootMetadataRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "dashboard/editor/datasource/getroot";
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetRootMetadataRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetRootMetadataRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetRootMetadataRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetRootMetadataRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setJSONForKey("dataSource", this.__dataSource);
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetRootMetadataRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.ReportPlusGetRootMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var metadataItems = response.resolveListForKey("values");
		return metadataItems;
	}
	/*<EndMethod Name="System.Object Infragistics.ReportPlusGetRootMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('ReportPlusGetRootMetadataRequest', $.ig.ReportPlusRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusGetRootMetadataRequest" />*/

/*<BeginType Name="Infragistics.ReportPlusGetEditorExpressionInfoRequest" />*/

$.ig.util.defType('ReportPlusGetEditorExpressionInfoRequest', 'ReportPlusRequestBase', {
	__fields: null,
	__globalVariables: null,
	__availableFunctions: null,
	__currentField: null,
	__expression: null,
	__isInternalExpression: false,
	init: function (expression, isInternalExpression, currentField, fields, globalVariables, availableFunctions, success, error) {
		$.ig.ReportPlusRequestBase.prototype.init.call(this, "GetExpressionResultType", success, error);
		this.__expression = expression;
		this.__isInternalExpression = isInternalExpression;
		this.__currentField = currentField;
		this.__fields = fields;
		this.__globalVariables = globalVariables;
		this.__availableFunctions = availableFunctions;
	},
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetEditorExpressionInfoRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "dashboard/editor/expression/info";
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetEditorExpressionInfoRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetEditorExpressionInfoRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetEditorExpressionInfoRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetEditorExpressionInfoRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setValueForKey("expression", this.__expression);
		obj.setValueForKey("isInternalExpression", this.__isInternalExpression);
		obj.setJSONForKey("currentField", this.__currentField);
		obj.setValueForKey("fields", this.__fields);
		obj.setValueForKey("globalvariables", this.__globalVariables);
		obj.setValueForKey("availableFunctions", this.__availableFunctions);
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetEditorExpressionInfoRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.ReportPlusGetEditorExpressionInfoRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var result = new $.ig.ReportPlusResponse();
		if (response.containsKey("error")) {
			var jsonError = $.ig.CPJSONObject.prototype.createFromJSONObject(response.resolveObjectForKey("error"));
			result.error(new $.ig.CloudError(1, jsonError.resolveStringForKey("errorMessage"), null));
		} else {
			var list = response.resolveListForKey("values");
			result.result($.ig.CPJSONObject.prototype.createFromJSONObject(list[0]));
		}
		return result;
	}
	/*<EndMethod Name="System.Object Infragistics.ReportPlusGetEditorExpressionInfoRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('ReportPlusGetEditorExpressionInfoRequest', $.ig.ReportPlusRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusGetEditorExpressionInfoRequest" />*/

/*<BeginType Name="Infragistics.ReportPlusValidateExpressionRequest" />*/

$.ig.util.defType('ReportPlusValidateExpressionRequest', 'ReportPlusRequestBase', {
	__expression: null,
	init: function (expression, success, error) {
		$.ig.ReportPlusRequestBase.prototype.init.call(this, "ValidateExpression", success, error);
		this.__expression = expression;
	},
	/*<BeginMethod Name="System.String Infragistics.ReportPlusValidateExpressionRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "dashboard/editor/expression/validate";
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusValidateExpressionRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusValidateExpressionRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusValidateExpressionRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.ReportPlusValidateExpressionRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setValueForKey("expression", this.__expression);
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusValidateExpressionRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.ReportPlusValidateExpressionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var result = new $.ig.ReportPlusResponse();
		if (response.containsKey("error")) {
			var jsonError = $.ig.CPJSONObject.prototype.createFromJSONObject(response.resolveObjectForKey("error"));
			result.error(new $.ig.CloudError(1, jsonError.resolveStringForKey("errorMessage"), null));
		}
		return result;
	}
	/*<EndMethod Name="System.Object Infragistics.ReportPlusValidateExpressionRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('ReportPlusValidateExpressionRequest', $.ig.ReportPlusRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusValidateExpressionRequest" />*/

/*<BeginType Name="Infragistics.ReportPlusGetExpressionFunctionsRequest" />*/

$.ig.util.defType('ReportPlusGetExpressionFunctionsRequest', 'ReportPlusRequestBase', {
	init: function (success, error) {
		$.ig.ReportPlusRequestBase.prototype.init.call(this, "GetExpressionFunctions", success, error);
	},
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetExpressionFunctionsRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "dashboard/editor/expression/getfunctions";
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetExpressionFunctionsRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetExpressionFunctionsRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetExpressionFunctionsRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.ReportPlusGetExpressionFunctionsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var result = new $.ig.ReportPlusResponse();
		if (response.containsKey("error")) {
			var jsonError = $.ig.CPJSONObject.prototype.createFromJSONObject(response.resolveObjectForKey("errorCode"));
			result.error(new $.ig.CloudError(1, jsonError.resolveStringForKey("errorMessage"), null));
		} else {
			result.result(response.resolveListForKey("functions"));
		}
		return result;
	}
	/*<EndMethod Name="System.Object Infragistics.ReportPlusGetExpressionFunctionsRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('ReportPlusGetExpressionFunctionsRequest', $.ig.ReportPlusRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusGetExpressionFunctionsRequest" />*/

/*<BeginType Name="Infragistics.ReportPlusGetParameterValuesRequest" />*/

$.ig.util.defType('ReportPlusGetParameterValuesRequest', 'ReportPlusRequestBase', {
	__dataSource: null,
	__metadataItem: null,
	__paramName: null,
	init: function (dataSource, metadataItem, paramName, success, error) {
		$.ig.ReportPlusRequestBase.prototype.init.call(this, "GetParameterValuesMetadata", success, error);
		this.__dataSource = dataSource;
		this.__metadataItem = metadataItem;
		this.__paramName = paramName;
	},
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetParameterValuesRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "dashboard/editor/datasource/parametervalues";
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetParameterValuesRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetParameterValuesRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetParameterValuesRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetParameterValuesRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setJSONForKey("dataSource", this.__dataSource);
		obj.setJSONForKey("dataSourceMetaDataItem", this.__metadataItem);
		obj.setValueForKey("paramName", this.__paramName);
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetParameterValuesRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.ReportPlusGetParameterValuesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var metadataItems = response.resolveListForKey("values");
		return metadataItems;
	}
	/*<EndMethod Name="System.Object Infragistics.ReportPlusGetParameterValuesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('ReportPlusGetParameterValuesRequest', $.ig.ReportPlusRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusGetParameterValuesRequest" />*/

/*<BeginType Name="Infragistics.ReportPlusGetParametersMetadataRequest" />*/

$.ig.util.defType('ReportPlusGetParametersMetadataRequest', 'ReportPlusRequestBase', {
	__dataSource: null,
	__metadataItem: null,
	init: function (dataSource, metadataItem, success, error) {
		$.ig.ReportPlusRequestBase.prototype.init.call(this, "GetParametersMetadata", success, error);
		this.__dataSource = dataSource;
		this.__metadataItem = metadataItem;
	},
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetParametersMetadataRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "dashboard/editor/datasource/getparameters";
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetParametersMetadataRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetParametersMetadataRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetParametersMetadataRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetParametersMetadataRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setJSONForKey("dataSource", this.__dataSource);
		obj.setJSONForKey("dataSourceMetaDataItem", this.__metadataItem);
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetParametersMetadataRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.ReportPlusGetParametersMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var metadataItems = response.resolveListForKey("values");
		return metadataItems;
	}
	/*<EndMethod Name="System.Object Infragistics.ReportPlusGetParametersMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('ReportPlusGetParametersMetadataRequest', $.ig.ReportPlusRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusGetParametersMetadataRequest" />*/

/*<BeginType Name="Infragistics.ReportPlusGetProviderMetadataRequest" />*/

$.ig.util.defType('ReportPlusGetProviderMetadataRequest', 'ReportPlusRequestBase', {
	__providerId: null,
	init: function (providerId, success, error) {
		$.ig.ReportPlusRequestBase.prototype.init.call(this, "GetParametersMetadata", success, error);
		this.__providerId = providerId;
	},
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetProviderMetadataRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "dashboard/editor/datasource/metadataprovider";
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetProviderMetadataRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetProviderMetadataRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetProviderMetadataRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetProviderMetadataRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var obj = new $.ig.CPJSONObject(1);
		obj.setValueForKey("providerName", this.__providerId);
		return obj.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetProviderMetadataRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.ReportPlusGetProviderMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var values = response.resolveListForKey("values");
		if (values != null && values.length > 0) {
			return values[0];
		} else {
			return null;
		}
	}
	/*<EndMethod Name="System.Object Infragistics.ReportPlusGetProviderMetadataRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('ReportPlusGetProviderMetadataRequest', $.ig.ReportPlusRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusGetProviderMetadataRequest" />*/

/*<BeginType Name="Infragistics.ReportPlusUploadFileRequest" />*/

$.ig.util.defType('ReportPlusUploadFileRequest', 'ReportPlusRequestBase', {
	__json: null,
	init: function (json, success, error) {
		$.ig.ReportPlusRequestBase.prototype.init.call(this, "RPUploadFile", success, error);
		this.__json = json;
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusUploadFileRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusUploadFileRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.ReportPlusUploadFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return $.ig.ReportPlusRequestBase.prototype.resolveAction.call(this) + "insert";
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusUploadFileRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.ReportPlusUploadFileRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.none;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.ReportPlusUploadFileRequest::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.ReportPlusUploadFileRequest::ResolvePostContentAsObject()" />*/
	resolvePostContentAsObject: function () {
		return this.__json;
	}
	/*<EndMethod Name="System.Object Infragistics.ReportPlusUploadFileRequest::ResolvePostContentAsObject()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.ReportPlusUploadFileRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.sTRING;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.ReportPlusUploadFileRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.ReportPlusUploadFileRequest::Success(System.Object)" />*/
	success: function (obj) {
		$.ig.ReportPlusRequestBase.prototype.success.call(this, obj);
	}
	/*<EndMethod Name="System.Void Infragistics.ReportPlusUploadFileRequest::Success(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.ReportPlusUploadFileRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		$.ig.ReportPlusRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.ReportPlusUploadFileRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('ReportPlusUploadFileRequest', $.ig.ReportPlusRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusUploadFileRequest" />*/

/*<BeginType Name="Infragistics.ReportPlusGetJSONDashboardZipRequest" />*/

$.ig.util.defType('ReportPlusGetJSONDashboardZipRequest', 'ReportPlusRequestBase', {
	__dashboardId: null,
	init: function (dashboardId, success, error) {
		$.ig.ReportPlusRequestBase.prototype.init.call(this, "GetDashboardZip", success, error);
		this.__dashboardId = dashboardId;
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetJSONDashboardZipRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetJSONDashboardZipRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetJSONDashboardZipRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "Dashboard/model/" + this.__dashboardId + "/" + "0";
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetJSONDashboardZipRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.ReportPlusGetJSONDashboardZipRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.sTRING;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.ReportPlusGetJSONDashboardZipRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.ReportPlusGetJSONDashboardZipRequest::ProcessStringResponse(System.String)" />*/
	processStringResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.ReportPlusGetJSONDashboardZipRequest::ProcessStringResponse(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.ReportPlusGetJSONDashboardZipRequest::Success(System.Object)" />*/
	success: function (obj) {
		$.ig.ReportPlusRequestBase.prototype.success.call(this, obj);
	}
	/*<EndMethod Name="System.Void Infragistics.ReportPlusGetJSONDashboardZipRequest::Success(System.Object)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.ReportPlusGetJSONDashboardZipRequest::Error(Infragistics.CloudError)" />*/
	error: function (error) {
		$.ig.ReportPlusRequestBase.prototype.error.call(this, error);
	}
	/*<EndMethod Name="System.Void Infragistics.ReportPlusGetJSONDashboardZipRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('ReportPlusGetJSONDashboardZipRequest', $.ig.ReportPlusRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusGetJSONDashboardZipRequest" />*/

/*<BeginType Name="Infragistics.ReportPlusGetLicenseRequest" />*/

$.ig.util.defType('ReportPlusGetLicenseRequest', 'InfragisticsAPIRequestBase', {
	__skipCache: false,
	init: function (forceRefresh, success, error) {
		$.ig.InfragisticsAPIRequestBase.prototype.init.call(this, 0, "ReportPlusGetLicenseRequest", success, error);
		this.__skipCache = forceRefresh;
	},
	/*<BeginMethod Name="System.String Infragistics.ReportPlusGetLicenseRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "subscription";
	}
	/*<EndMethod Name="System.String Infragistics.ReportPlusGetLicenseRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetLicenseRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.ReportPlusGetLicenseRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.ReportPlusGetLicenseRequest::ParamsInRequestURL()" />*/
	paramsInRequestURL: function () {
		return this.__skipCache;
	}
	/*<EndMethod Name="System.Boolean Infragistics.ReportPlusGetLicenseRequest::ParamsInRequestURL()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.ReportPlusGetLicenseRequest::ResolveParams()" />*/
	resolveParams: function () {
		if (!this.__skipCache) {
			return $.ig.InfragisticsAPIRequestBase.prototype.resolveParams.call(this);
		}
		var dict = new $.ig.Dictionary(0);
		dict.item("forceRefresh", this.__skipCache);
		return dict;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.ReportPlusGetLicenseRequest::ResolveParams()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.ReportPlusGetLicenseRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		if (response == null || !response.containsKey("usersubscriptionid")) {
			return null;
		}
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.ReportPlusGetLicenseRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('ReportPlusGetLicenseRequest', $.ig.InfragisticsAPIRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.ReportPlusGetLicenseRequest" />*/

/*<BeginType Name="Infragistics.SharePointOAuthProvider" />*/

$.ig.util.defType('SharePointOAuthProvider', 'MicrosoftOAuthProvider', {
	_endpoint: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointOAuthProvider::Endpoint()" />*/
	endpoint: function (value) {
		if (arguments.length === 1) {
			this._endpoint = value;
			return value;
		} else {
			return this._endpoint;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointOAuthProvider::Endpoint()" />*/
	,
	init: function (keys) {
		$.ig.MicrosoftOAuthProvider.prototype.init.call(this, 0, keys, true);
	},
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointOAuthProvider::ShouldURLEncodeParams()" />*/
	shouldURLEncodeParams: function () {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointOAuthProvider::ShouldURLEncodeParams()" />*/
	,
	/*<BeginProperty Name="Infragistics.CloudProviderType Infragistics.SharePointOAuthProvider::CloudProvider()" />*/
	cloudProvider: function () {
		return $.ig.CloudProviderType.prototype.sharePoint;
	}
	/*<EndProperty Name="Infragistics.CloudProviderType Infragistics.SharePointOAuthProvider::CloudProvider()" />*/
	,
	$type: new $.ig.Type('SharePointOAuthProvider', $.ig.MicrosoftOAuthProvider.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointOAuthProvider" />*/

/*<BeginType Name="Infragistics.SharePointRequestBase" />*/

$.ig.util.defType('SharePointRequestBase', 'OAuthRequestBase', {
	init: function (initNumber, key, token, success, error) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.OAuthRequestBase.prototype.init.call(this, 0, key, token, success, error);
	},
	init1: function (initNumber, key, token, success, error, progress, downloaded) {
		$.ig.OAuthRequestBase.prototype.init1.call(this, 1, key, token, success, error, progress, downloaded);
	},
	_sitePath: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointRequestBase::SitePath()" />*/
	sitePath: function (value) {
		if (arguments.length === 1) {
			this._sitePath = value;
			return value;
		} else {
			return this._sitePath;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointRequestBase::SitePath()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointRequestBase::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		if ($.ig.NativeStringUtility.prototype.endsWith(this.sitePath(), "/")) {
			return this.sitePath() + "_api";
		} else {
			return this.sitePath() + "/" + "_api";
		}
	}
	/*<EndMethod Name="System.String Infragistics.SharePointRequestBase::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="Infragistics.OAuthProvider Infragistics.SharePointRequestBase::ResolveProvider(Infragistics.TokenState)" />*/
	resolveProvider: function (token) {
		return $.ig.SharePointRequestBase.prototype.createProvider(token);
	}
	/*<EndMethod Name="Infragistics.OAuthProvider Infragistics.SharePointRequestBase::ResolveProvider(Infragistics.TokenState)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointRequestBase::AdditionalIdentifier()" />*/
	additionalIdentifier: function () {
		return this.tokenState() != null ? this.tokenState().additionalIdentifier() : null;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointRequestBase::AdditionalIdentifier()" />*/
	,
	/*<BeginMethod Name="Infragistics.SharePointOAuthProvider Infragistics.SharePointRequestBase::CreateProvider(Infragistics.TokenState)" />*/
	createProvider: function (token) {
		var provider = new $.ig.SharePointOAuthProvider(token.providerKeys());
		if (token != null) {
			provider.endpoint(token.token().resolveStringForKey("resource"));
		}
		return provider;
	}
	/*<EndMethod Name="Infragistics.SharePointOAuthProvider Infragistics.SharePointRequestBase::CreateProvider(Infragistics.TokenState)" />*/
	,
	$type: new $.ig.Type('SharePointRequestBase', $.ig.OAuthRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointRequestBase" />*/

/*<BeginType Name="Infragistics.SharePointGetSiteInfoRequest" />*/

$.ig.util.defType('SharePointGetSiteInfoRequest', 'SharePointRequestBase', {
	init: function (token, success, error) {
		$.ig.SharePointRequestBase.prototype.init.call(this, 0, "SharePointGetSiteInfo", token, success, error);
		this.sitePath(token.token().getEndPoint());
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointGetSiteInfoRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointGetSiteInfoRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.SharePointGetSiteInfoRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var header = new $.ig.Dictionary(0);
		header.item("Accept", "application/json");
		return header;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.SharePointGetSiteInfoRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointGetSiteInfoRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "/web?$select=Title";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointGetSiteInfoRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SharePointGetSiteInfoRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.SharePointGetSiteInfoRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('SharePointGetSiteInfoRequest', $.ig.SharePointRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointGetSiteInfoRequest" />*/

/*<BeginType Name="Infragistics.SharePointFileRequest" />*/

$.ig.util.defType('SharePointFileRequest', 'SharePointRequestBase', {
	_filePath: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointFileRequest::FilePath()" />*/
	filePath: function (value) {
		if (arguments.length === 1) {
			this._filePath = value;
			return value;
		} else {
			return this._filePath;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFileRequest::FilePath()" />*/
	,
	_destinationPath: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointFileRequest::DestinationPath()" />*/
	destinationPath: function (value) {
		if (arguments.length === 1) {
			this._destinationPath = value;
			return value;
		} else {
			return this._destinationPath;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFileRequest::DestinationPath()" />*/
	,
	init: function (key, token, success, error) {
		$.ig.SharePointRequestBase.prototype.init.call(this, 0, key, token, success, error);
		this.sitePath(token.token().getEndPoint());
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointFileRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointFileRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.SharePointFileRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var header = new $.ig.Dictionary(0);
		header.item("Accept", "application/json;odata=verbose");
		return header;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.SharePointFileRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFileRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SharePointFileRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return null;
	}
	/*<EndMethod Name="System.Object Infragistics.SharePointFileRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SharePointFileRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.SharePointRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.SharePointFileRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('SharePointFileRequest', $.ig.SharePointRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointFileRequest" />*/

/*<BeginType Name="Infragistics.SharePointCopyFileRequest" />*/

$.ig.util.defType('SharePointCopyFileRequest', 'SharePointFileRequest', {
	_overWriteFile: false,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointCopyFileRequest::OverWriteFile()" />*/
	overWriteFile: function (value) {
		if (arguments.length === 1) {
			this._overWriteFile = value;
			return value;
		} else {
			return this._overWriteFile;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointCopyFileRequest::OverWriteFile()" />*/
	,
	init: function (token, success, error) {
		$.ig.SharePointFileRequest.prototype.init.call(this, "SharePointCopyFile", token, success, error);
		this.overWriteFile(false);
	},
	/*<BeginMethod Name="System.String Infragistics.SharePointCopyFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "/web/getfilebyserverrelativeurl('" + this.filePath() + "')/copyTo('" + this.destinationPath() + "')";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointCopyFileRequest::ResolveAction()" />*/
	,
	$type: new $.ig.Type('SharePointCopyFileRequest', $.ig.SharePointFileRequest.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointCopyFileRequest" />*/

/*<BeginType Name="Infragistics.SharePointMoveFileRequest" />*/

$.ig.util.defType('SharePointMoveFileRequest', 'SharePointFileRequest', {
	init: function (token, success, error) {
		$.ig.SharePointFileRequest.prototype.init.call(this, "SharePointMoveFile", token, success, error);
		this.sitePath(token.token().getEndPoint());
	},
	/*<BeginMethod Name="System.String Infragistics.SharePointMoveFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "/web/getfilebyserverrelativeurl('" + this.filePath() + "')/MoveTo('" + this.destinationPath() + "')";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointMoveFileRequest::ResolveAction()" />*/
	,
	$type: new $.ig.Type('SharePointMoveFileRequest', $.ig.SharePointFileRequest.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointMoveFileRequest" />*/

/*<BeginType Name="Infragistics.SharePointGetPeopleRequest" />*/

$.ig.util.defType('SharePointGetPeopleRequest', 'SharePointRequestBase', {
	init: function (token, success, error) {
		$.ig.SharePointRequestBase.prototype.init.call(this, 0, "SharePointGetPeople", token, success, error);
		this.sitePath(token.token().getEndPoint());
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointGetPeopleRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointGetPeopleRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.SharePointGetPeopleRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var header = new $.ig.Dictionary(0);
		header.item("Accept", "application/json");
		return header;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.SharePointGetPeopleRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointGetPeopleRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "/web/siteusers?$select=LoginName,Email,Title&$orderby=Title&$top=500";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointGetPeopleRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SharePointGetPeopleRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var files = new $.ig.Array();
		var entries = response.resolveListForKey("value");
		var count = entries.length;
		for (var i = 0; i < count; i++) {
			files.add(new $.ig.SharePointUser($.ig.CPJSONObject.prototype.createFromJSONObject(entries[i])));
		}
		return files;
	}
	/*<EndMethod Name="System.Object Infragistics.SharePointGetPeopleRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SharePointGetPeopleRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.SharePointRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.SharePointGetPeopleRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('SharePointGetPeopleRequest', $.ig.SharePointRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointGetPeopleRequest" />*/

/*<BeginType Name="Infragistics.SharePointFileManager" />*/

$.ig.util.defType('SharePointFileManager', 'CloudFileManager', {
	__onPremisesSiteUrl: null,
	init: function (initNumber, token) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.CloudFileManager.prototype.init.call(this, 0, token);
	},
	init1: function (initNumber, siteUrl, credentialsProvider) {
		$.ig.CloudFileManager.prototype.init1.call(this, 1, null, credentialsProvider);
		this.__onPremisesSiteUrl = siteUrl;
	},
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointFileManager::IsOnPrem()" />*/
	isOnPrem: function () {
		return this.__onPremisesSiteUrl != null;
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointFileManager::IsOnPrem()" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFileManager::SessionKey()" />*/
	sessionKey: function () {
		if (!this.isOnPrem()) {
			return null;
		}
		var username = this.credentialsProvider() != null ? this.credentialsProvider()().username() : null;
		return username + "___" + this.__onPremisesSiteUrl;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFileManager::SessionKey()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointFileManager::IsValidSession(System.Object)" />*/
	isValidSession: function (sessionDataO) {
		if (sessionDataO == null) {
			return false;
		}
		var sessionData = sessionDataO;
		if (sessionData.isExpired($.ig.NativeDateUtility.prototype.getCurrentTimeInSeconds(), 10)) {
			return false;
		}
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointFileManager::IsValidSession(System.Object)" />*/
	,
	/*<BeginMethod Name="Infragistics.IRequest Infragistics.SharePointFileManager::RefreshSession(Infragistics.ObjectBlock, Infragistics.CloudErrorBlock)" />*/
	refreshSession: function (sessionReadyBlock, sfb) {
		var r = this.createRequestBuilderWithAcceptJson().setURL(this.__onPremisesSiteUrl + "/_api/contextinfo").setHttpMethod($.ig.SessionHTTPMethod.prototype.pOST).setSuccessHandler(function (o) {
			$.ig.SharePointFileManager.prototype.processRefreshSessionResponse(sessionReadyBlock, sfb, o);
		}).setErrorHandler(sfb).buildAndExecute();
		return r;
	}
	/*<EndMethod Name="Infragistics.IRequest Infragistics.SharePointFileManager::RefreshSession(Infragistics.ObjectBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SharePointFileManager::ProcessRefreshSessionResponse(Infragistics.ObjectBlock, Infragistics.CloudErrorBlock, System.Object)" />*/
	processRefreshSessionResponse: function (sessionReadyBlock, sfb, o) {
		var sessionInfo = new $.ig.SharePointOnPremSessionInfo(o, $.ig.NativeDateUtility.prototype.getCurrentTimeInSeconds());
		if (sessionInfo.requestDigestHeaderValue() == null) {
			sfb(new $.ig.CloudError(1, "Unable to read the request digest", null));
		} else {
			sessionReadyBlock(sessionInfo);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.SharePointFileManager::ProcessRefreshSessionResponse(Infragistics.ObjectBlock, Infragistics.CloudErrorBlock, System.Object)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetFilesFromCloudFolder(Infragistics.CloudFile, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesFromCloudFolder: function (file, handler, errorHandler) {
		return this.getFilesInFolder1((file == null ? null : file.pathIdentifier()), handler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetFilesFromCloudFolder(Infragistics.CloudFile, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetFilesInFolder(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesInFolder1: function (folder, handler, errorHandler) {
		return this.getFilesInFolder(false, folder, handler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetFilesInFolder(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetFilesInFolder(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFilesInFolder: function (foldersOnly, folder, handler, errorHandler) {
		return this.getFiles(foldersOnly, folder, handler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetFilesInFolder(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	__foldersOnly: false,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetFiles(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFiles: function (getFoldersOnly, folder, handler, errorHandler) {
		this.__foldersOnly = getFoldersOnly;
		if (folder == null) {
			if (this.tokenState() != null) {
				folder = this.tokenState().token().getEndPoint();
			} else {
				folder = this.__onPremisesSiteUrl;
			}
			if ($.ig.NativeStringUtility.prototype.endsWith(folder, "/")) {
				folder = $.ig.NativeStringUtility.prototype.substring(folder, 0, folder.length - 1);
			}
		}
		if ($.ig.NativeStringUtility.prototype.startsWith(folder, "People:")) {
			return this.loadPeople(folder, handler, errorHandler);
		} else if ($.ig.SharePointLibrary.prototype.isLibraryPath(folder)) {
			return this.loadLibrary($.ig.SharePointLibrary.prototype.extractPath(folder), handler, errorHandler);
		} else if ($.ig.SharePointFolder.prototype.isFolderPath(folder)) {
			return this.loadLibrary($.ig.SharePointFileBase.prototype.extractPath(folder), handler, errorHandler);
		} else if ($.ig.NativeStringUtility.prototype.contains(folder, "ListFolder:")) {
			return this.loadListItems(folder, handler, errorHandler);
		} else if (!$.ig.NativeStringUtility.prototype.contains(folder, "Lists(guid")) {
			return this.loadSitesAndLists(folder, handler, errorHandler);
		} else {
			return null;
		}
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetFiles(System.Boolean, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::LoadListFields(System.String, Infragistics.ItemsBlock, Infragistics.CloudErrorBlock)" />*/
	loadListFields: function (listUrl, handler, errorHandler) {
		var successHandler = function (o) {
			var items = new $.ig.Array();
			var dJson = (o).resolveJSONForKey("d");
			var fields = dJson.resolveListForKey("results");
			var count = fields.length;
			for (var i = 0; i < count; i++) {
				var fieldJson = $.ig.CPJSONObject.prototype.createFromJSONObject(fields[i]);
				items.add(new $.ig.SharePointField(fieldJson));
			}
			handler(items);
		};
		if (this.tokenState() == null && this.credentialsProvider() == null) {
			errorHandler(new $.ig.CloudError(1, "Cannot create a request since it is missing the TokenState.", null));
			return null;
		}
		return this.createRequestBuilder().setHttpMethod($.ig.SessionHTTPMethod.prototype.gET).setURL($.ig.SharePointFileManager.prototype.encodeSharePointListUrl(listUrl) + "/fields").setAccept("application/json; odata=verbose").setSuccessHandler(successHandler).setErrorHandler(errorHandler).build();
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::LoadListFields(System.String, Infragistics.ItemsBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::LoadListViews(System.String, Infragistics.ItemsBlock, Infragistics.CloudErrorBlock)" />*/
	loadListViews: function (listUrl, handler, errorHandler) {
		var successHandler = function (o) {
			var items = new $.ig.Array();
			var dJson = (o).resolveJSONForKey("d");
			var views = dJson.resolveListForKey("results");
			var count = views.length;
			for (var i = 0; i < count; i++) {
				var viewJson = $.ig.CPJSONObject.prototype.createFromJSONObject(views[i]);
				items.add(new $.ig.SharePointView(viewJson));
			}
			handler(items);
		};
		return this.createRequestBuilder().setHttpMethod($.ig.SessionHTTPMethod.prototype.gET).setURL($.ig.SharePointFileManager.prototype.encodeSharePointListUrl(listUrl) + "/views").setAccept("application/json; odata=verbose").setSuccessHandler(successHandler).setErrorHandler(errorHandler).build();
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::LoadListViews(System.String, Infragistics.ItemsBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFileManager::EncodeSharePointListUrl(System.String)" />*/
	encodeSharePointListUrl: function (url) {
		url = $.ig.SharePointFileManager.prototype.fixSingleQuoteInPath(url);
		return $.ig.NativeStringUtility.prototype.encodeURIPath(url);
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFileManager::EncodeSharePointListUrl(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFileManager::EncodeSharePointWebUrl(System.String)" />*/
	encodeSharePointWebUrl: function (webUrl) {
		return $.ig.NativeStringUtility.prototype.encodeURIPath(webUrl);
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFileManager::EncodeSharePointWebUrl(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFileManager::EncodeSharePointFileOrFolderUrl(System.String)" />*/
	encodeSharePointFileOrFolderUrl: function (url) {
		url = $.ig.SharePointFileManager.prototype.fixSingleQuoteInPath(url);
		url = $.ig.SharePointFileManager.prototype.unescapeSharpAndPercent(url);
		return $.ig.NativeStringUtility.prototype.encodeURIPath(url);
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFileManager::EncodeSharePointFileOrFolderUrl(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFileManager::FixSingleQuoteInPath(System.String)" />*/
	fixSingleQuoteInPath: function (uri) {
		var apiIdx = $.ig.NativeStringUtility.prototype.indexOf(uri.toLowerCase(), "/_api/");
		if (apiIdx < 0) {
			return uri;
		}
		var openingQuoteIdx = $.ig.NativeStringUtility.prototype.indexOf1(uri, "'", apiIdx);
		if (openingQuoteIdx < 0) {
			return uri;
		}
		var closeQuoteIdx = $.ig.NativeStringUtility.prototype.lastIndexOf(uri, "'");
		if (closeQuoteIdx <= openingQuoteIdx) {
			return uri;
		}
		var path = $.ig.NativeStringUtility.prototype.substring(uri, openingQuoteIdx + 1, closeQuoteIdx - openingQuoteIdx - 1);
		return $.ig.NativeStringUtility.prototype.substring(uri, 0, openingQuoteIdx + 1) + $.ig.NativeStringUtility.prototype.replace(path, "'", "''") + $.ig.NativeStringUtility.prototype.substring(uri, closeQuoteIdx, uri.length - closeQuoteIdx);
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFileManager::FixSingleQuoteInPath(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFileManager::UnescapeSharpAndPercent(System.String)" />*/
	unescapeSharpAndPercent: function (filePath) {
		var r1 = $.ig.NativeStringUtility.prototype.replace(filePath, "%23", "#");
		return $.ig.NativeStringUtility.prototype.replace(r1, "%25", "%");
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFileManager::UnescapeSharpAndPercent(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::LoadPeople(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	loadPeople: function (folder, handler, errorHandler) {
		var request = new $.ig.SharePointGetPeopleRequest(this.tokenState(), function (rLists, lists) {
			if (handler != null) {
				handler(lists);
			}
		}, function (rLists, error1) {
			if (errorHandler != null) {
				errorHandler(error1);
			}
		});
		request.sitePath($.ig.NativeRequestUtility.prototype.utility().uRLStringByAddingPercentEncoding($.ig.util.replace(folder, "People:", "")));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::LoadPeople(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.IRequest Infragistics.SharePointFileManager::LoadSitesAndLists(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	loadSitesAndLists: function (folder, handler, errorHandler) {
		var $self = this;
		var rwrap = new $.ig.RequestWrapper();
		var sitesRequest = this.loadSites(folder, function (sites) {
			$self.loadLists1(folder, handler, errorHandler, sites);
		}, errorHandler);
		rwrap.request(sitesRequest);
		return rwrap;
	}
	/*<EndMethod Name="Infragistics.IRequest Infragistics.SharePointFileManager::LoadSitesAndLists(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::LoadSites(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	loadSites: function (folder, handler, errorHandler) {
		var $self = this;
		var sitesRequest = this.createRequestBuilderWithAcceptJson().setURL($.ig.SharePointFileManager.prototype.encodeSharePointWebUrl(folder) + "/_api/web/webs?$select=Title,Id,Url&$orderby=Title").setHttpMethod($.ig.SessionHTTPMethod.prototype.gET).setSuccessHandler(function (o) {
			handler(o != null ? $self.processSites(o) : new $.ig.Array());
		}).setErrorHandler(function (e) {
			if (e.errorCode() == 403 || ($self.isOnPrem() && e.errorCode() == 401)) {
				handler(new $.ig.Array());
			} else {
				errorHandler(e);
			}
		}).build();
		return sitesRequest;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::LoadSites(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginProperty Name="System.String Infragistics.SharePointFileManager::AdditionalIdentifier()" />*/
	additionalIdentifier: function () {
		return this.tokenState() != null ? this.tokenState().additionalIdentifier() : null;
	}
	/*<EndProperty Name="System.String Infragistics.SharePointFileManager::AdditionalIdentifier()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.SharePointFileManager::ProcessSites(Infragistics.CPJSONObject)" />*/
	processSites: function (response) {
		var sites = new $.ig.Array();
		var entries = this.resolveODataRootCollectionOf(response);
		var count = entries.length;
		for (var i = 0; i < count; i++) {
			sites.add(new $.ig.SharePointSite(1, $.ig.CPJSONObject.prototype.createFromJSONObject(entries[i]), this.additionalIdentifier()));
		}
		return sites;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.SharePointFileManager::ProcessSites(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::LoadLists(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	loadLists: function (folder, handler, errorHandler) {
		var $self = this;
		return this.createRequestBuilderWithAcceptJson().setURL($.ig.SharePointFileManager.prototype.encodeSharePointWebUrl(folder) + "/_api/web/lists?$select=Title,Id,BaseType,ItemCount,BaseTemplate&$filter=Hidden%20eq%20false&$orderby=BaseType%20desc,Title&$expand=RootFolder").setHttpMethod($.ig.SessionHTTPMethod.prototype.gET).setSuccessHandler(function (ovalue) {
			handler(ovalue != null ? $self.processLists(ovalue) : new $.ig.Array());
		}).setErrorHandler(errorHandler).build();
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::LoadLists(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.SharePointFileManager::ProcessLists(Infragistics.CPJSONObject)" />*/
	processLists: function (result) {
		var files = new $.ig.Array();
		var entries = this.resolveODataRootCollectionOf(result);
		var count = entries.length;
		for (var i = 0; i < count; i++) {
			var fileJson = $.ig.CPJSONObject.prototype.createFromJSONObject(entries[i]);
			var baseType = fileJson.resolveStringForKey("BaseType");
			if (baseType.equals($.ig.SharePointLibrary.prototype.baseTypeList)) {
				if (this.tokenState() != null) {
					var folderInfo = fileJson.resolveJSONForKey("RootFolder");
					var value = this.tokenState().token().getResource() + folderInfo.resolveStringForKey("ServerRelativeUrl");
					fileJson.setValueForKey("ServerRelativeUrl", value);
					fileJson.setValueForKey("ServerRawRelativeUrl", folderInfo.resolveStringForKey("ServerRelativeUrl"));
					fileJson.removeForKey("RootFolder");
				}
				files.add(new $.ig.SharePointList(1, fileJson, this.additionalIdentifier()));
			} else if (baseType.equals($.ig.SharePointLibrary.prototype.baseTypeLibrary)) {
				var folderInfo1 = fileJson.resolveJSONForKey("RootFolder");
				fileJson.setValueForKey("ServerRawRelativeUrl", folderInfo1.resolveStringForKey("ServerRelativeUrl"));
				files.add(new $.ig.SharePointLibrary(1, fileJson, this.additionalIdentifier()));
			}
		}
		return files;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.SharePointFileManager::ProcessLists(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.IRequest Infragistics.SharePointFileManager::LoadListItems(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	loadListItems: function (folder, handler, errorHandler) {
		var $self = this;
		var listUrl = $.ig.NativeRequestUtility.prototype.utility().uRLStringByAddingPercentEncoding($.ig.util.replace(folder, "ListFolder:", ""));
		var url = listUrl + "/items?$select=Title,DisplayName,ContentType/Name,Id,ParentList/RootFolder/ServerRelativeUrl&$expand=ContentType,ParentList/RootFolder";
		return this.createRequestBuilderWithAcceptJson().setURL(url).setHttpMethod($.ig.SessionHTTPMethod.prototype.gET).setSuccessHandler(function (ovalue) {
			handler($self.processListItems($self.resolveODataRootCollectionOf(ovalue), listUrl));
		}).setErrorHandler(errorHandler).build();
	}
	/*<EndMethod Name="Infragistics.IRequest Infragistics.SharePointFileManager::LoadListItems(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.IRequest Infragistics.SharePointFileManager::LoadLibrary(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	loadLibrary: function (folder, handler, errorHandler) {
		var $self = this;
		var action = "?$select=Files/Length,Files/Name,Files/ServerRelativeUrl,Files/ListItemAllFields/ServerRedirectedEmbedUrl,Files/ListItemAllFields/EncodedAbsUrl," + "Folders/Name,Folders/ItemCount,Folders/ServerRelativeUrl,Folders/ListItemAllFields/FileSystemObjectType,Files/ListItemAllFields/Id,Files/ListItemAllFields/ParentList/Id,Folders/ListItemAllFields/Id,Folders/ListItemAllFields/ParentList/Id," + "Files/ListItemAllFields/UniqueId,Folders/ListItemAllFields/UniqueId" + "&$expand=Folders,Files,Folders/ListItemAllFields,Folders/ListItemAllFields/ParentList,Files/ListItemAllFields,Files/ListItemAllFields/ParentList";
		return this.createRequestBuilderWithAcceptJson().setURL($.ig.NativeRequestUtility.prototype.utility().uRLStringByAddingPercentEncoding(folder) + action).setHttpMethod($.ig.SessionHTTPMethod.prototype.gET).setSuccessHandler(function (ovalue) {
			handler($self.processLibraryItems($self.resolveODataRoot(ovalue)));
		}).setErrorHandler(errorHandler).build();
	}
	/*<EndMethod Name="Infragistics.IRequest Infragistics.SharePointFileManager::LoadLibrary(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.SharePointFileManager::ProcessListItems(Infragistics.CPList, System.String)" />*/
	processListItems: function (entries, listUrl) {
		var items = new $.ig.Array();
		if (!this.__foldersOnly) {
			var count = entries.length;
			for (var i = 0; i < count; i++) {
				var fileJson = $.ig.CPJSONObject.prototype.createFromJSONObject(entries[i]);
				var contentType = fileJson.resolveStringForKeyPath((function () {
					var $ret = new $.ig.Array();
					$ret.add("ContentType");
					$ret.add("Name");
					return $ret;
				}()));
				fileJson.setValueForKey("ContentType", contentType);
				items.add(new $.ig.SharePointListItem(1, fileJson, this.additionalIdentifier()));
			}
		}
		return items;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.SharePointFileManager::ProcessListItems(Infragistics.CPList, System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.SharePointFileManager::ProcessLibraryItems(Infragistics.CPJSONObject)" />*/
	processLibraryItems: function (response) {
		var items = new $.ig.Array();
		var folders = this.resolveODataCollectionOf(response, "Folders");
		var count = folders.length;
		for (var i = 0; i < count; i++) {
			var fileJson = $.ig.CPJSONObject.prototype.createFromJSONObject(folders[i]);
			var listItemAllFields = fileJson.resolveJSONForKey("ListItemAllFields");
			if (listItemAllFields != null) {
				var fileSystemObjectType = listItemAllFields.resolveStringForKey("FileSystemObjectType");
				if (fileSystemObjectType != null && fileSystemObjectType.equals("1")) {
					items.add(new $.ig.SharePointFolder(1, fileJson, this.additionalIdentifier()));
				}
			}
		}
		if (!this.__foldersOnly) {
			var files = this.resolveODataCollectionOf(response, "Files");
			count = files.length;
			for (var i1 = 0; i1 < count; i1++) {
				var fileJson1 = $.ig.CPJSONObject.prototype.createFromJSONObject(files[i1]);
				var listItemAllFields1 = fileJson1.resolveJSONForKey("ListItemAllFields");
				if (listItemAllFields1 != null) {
					fileJson1.setValueForKey("ServerRedirectedEmbedUrl", listItemAllFields1.resolveStringForKey("ServerRedirectedEmbedUrl"));
					fileJson1.setValueForKey("EncodedAbsUrl", listItemAllFields1.resolveStringForKey("EncodedAbsUrl"));
					items.add(new $.ig.SharePointFile(1, fileJson1, this.additionalIdentifier()));
				}
			}
		}
		return items;
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.SharePointFileManager::ProcessLibraryItems(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::LoadSubsites(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	loadSubsites: function (folder, handler, errorHandler) {
		var $self = this;
		var sitesRequest = this.loadSites(folder, function (sites) {
			$self.loadLists1(folder, handler, errorHandler, sites);
		}, function (e) {
			$self.loadLists1(folder, handler, errorHandler, new $.ig.Array());
		});
		return sitesRequest;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::LoadSubsites(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SharePointFileManager::LoadLists(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock, Infragistics.CPList)" />*/
	loadLists1: function (folder, handler, errorHandler, sites) {
		var listsRequest = this.loadLists(folder, function (lists) {
			$.ig.ArrayUtility.prototype.addToCPReadOnlyList(sites, lists);
			handler(sites);
		}, errorHandler);
		this.executeAndManage(listsRequest);
	}
	/*<EndMethod Name="System.Void Infragistics.SharePointFileManager::LoadLists(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock, Infragistics.CPList)" />*/
	,
	/*<BeginMethod Name="Infragistics.SharePointFileRequest Infragistics.SharePointFileManager::CreateFileRequest(System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock, System.Boolean)" />*/
	createFileRequest: function (filePath, destinationPath, progress, successHandler, errorHandler, copyFile) {
		var request;
		var internalSuccessHandler = function (rLists, lists) {
			successHandler(null);
		};
		var internalErrorHandler = function (rLists, error1) {
			if (errorHandler != null) {
				errorHandler(error1);
			}
		};
		if (copyFile) {
			request = new $.ig.SharePointCopyFileRequest(this.tokenState(), internalSuccessHandler, internalErrorHandler);
		} else {
			request = new $.ig.SharePointMoveFileRequest(this.tokenState(), internalSuccessHandler, internalErrorHandler);
		}
		request.filePath(filePath);
		request.destinationPath(destinationPath);
		this.executeAndManage(request);
		return request;
	}
	/*<EndMethod Name="Infragistics.SharePointFileRequest Infragistics.SharePointFileManager::CreateFileRequest(System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock, System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::CopyFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	copyFile: function (fileId, filePath, destinationPath, progress, successHandler, errorHandler) {
		var copyRequest = this.createFileRequest(filePath, destinationPath, progress, successHandler, errorHandler, true);
		copyRequest.overWriteFile(false);
		return copyRequest;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::CopyFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::MoveFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	moveFile: function (fileId, filePath, destinationPath, progress, success, errorHandler) {
		var moveRequest = this.createFileRequest(filePath, destinationPath, progress, success, errorHandler, false);
		return moveRequest;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::MoveFile(System.String, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::DownloadFile(System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	downloadFile1: function (file, mimeType, handler, downloadHandler, errorHandler) {
		return this.downloadFile(file, handler, downloadHandler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::DownloadFile(System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.SharePointFileManager::CreateRequestBuilder()" />*/
	createRequestBuilder: function () {
		return this.createRequestBuilder1(false);
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.SharePointFileManager::CreateRequestBuilder()" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.SharePointFileManager::CreateRequestBuilderWithAcceptJson()" />*/
	createRequestBuilderWithAcceptJson: function () {
		return this.createRequestBuilder1(true);
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.SharePointFileManager::CreateRequestBuilderWithAcceptJson()" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.SharePointFileManager::CreateRequestBuilder(System.Boolean)" />*/
	createRequestBuilder1: function (acceptOdataJson) {
		var builder = this.tokenState() != null ? $.ig.HttpRequestBuilder.prototype.create1($.ig.SharePointRequestBase.prototype.createProvider(this.tokenState()), this.tokenState()) : $.ig.HttpRequestBuilder.prototype.create();
		if (this.credentialsProvider() != null) {
			builder.setCredentials(this.credentialsProvider()());
		}
		if (acceptOdataJson) {
			var accept = this.mustUseJSONVerbose() ? "application/json;odata=verbose" : "application/json";
			builder.setAccept(accept);
		}
		return builder;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.SharePointFileManager::CreateRequestBuilder(System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointFileManager::MustUseJSONVerbose()" />*/
	mustUseJSONVerbose: function () {
		return this.__onPremisesSiteUrl != null;
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointFileManager::MustUseJSONVerbose()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPJSONObject Infragistics.SharePointFileManager::ResolveODataRoot(Infragistics.CPJSONObject)" />*/
	resolveODataRoot: function (obj) {
		return this.mustUseJSONVerbose() ? obj.resolveJSONForKey("d") : obj;
	}
	/*<EndMethod Name="Infragistics.CPJSONObject Infragistics.SharePointFileManager::ResolveODataRoot(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.SharePointFileManager::ResolveODataRootCollectionOf(Infragistics.CPJSONObject)" />*/
	resolveODataRootCollectionOf: function (obj) {
		if (this.mustUseJSONVerbose()) {
			return obj.resolveJSONForKey("d").resolveListForKey("results");
		} else {
			return obj.resolveListForKey("value");
		}
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.SharePointFileManager::ResolveODataRootCollectionOf(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.CPList Infragistics.SharePointFileManager::ResolveODataCollectionOf(Infragistics.CPJSONObject, System.String)" />*/
	resolveODataCollectionOf: function (obj, key) {
		return this.mustUseJSONVerbose() ? obj.resolveJSONForKey(key).resolveListForKey("results") : obj.resolveListForKey(key);
	}
	/*<EndMethod Name="Infragistics.CPList Infragistics.SharePointFileManager::ResolveODataCollectionOf(Infragistics.CPJSONObject, System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::DownloadFile(System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	downloadFile: function (file, progress, success, errorHandler) {
		var url = $.ig.SharePointFileManager.prototype.encodeSharePointFileOrFolderUrl($.ig.SharePointFile.prototype.extractPath(file)) + "/$value";
		return this.createRequestBuilder().setHttpMethod($.ig.SessionHTTPMethod.prototype.gET).setURL(url).setProgressHandler(progress).setFileDownloadedHandler(success).setErrorHandler(errorHandler).build();
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::DownloadFile(System.String, Infragistics.ProgressFileBlock, Infragistics.FileDownloadedBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.CloudProviderType Infragistics.SharePointFileManager::GetProviderType()" />*/
	getProviderType: function () {
		return $.ig.CloudProviderType.prototype.sharePoint;
	}
	/*<EndMethod Name="Infragistics.CloudProviderType Infragistics.SharePointFileManager::GetProviderType()" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetMetadata(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	getMetadata: function (path, handler, errorHandler) {
		var $self = this;
		var url = $.ig.SharePointFileManager.prototype.encodeSharePointFileOrFolderUrl(this.getUrlFromPathIdentifier(path)) + "?$select=*&$expand=ListItemAllFields/ParentList";
		return this.createRequestBuilderWithAcceptJson().setURL(url).setHttpMethod($.ig.SessionHTTPMethod.prototype.gET).setSuccessHandler(function (o) {
			handler(new $.ig.SharePointFile(1, $self.resolveODataRoot(o), $self.additionalIdentifier()));
		}).setErrorHandler(errorHandler).build();
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetMetadata(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetFileMetaData(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	getFileMetaData: function (path, handler, errorHandler) {
		var $self = this;
		if (!this.isFileTypeBasedOnPath(path)) {
			return $.ig.CloudFileManager.prototype.getFileMetaData.call(this, path, handler, errorHandler);
		}
		var url = $.ig.SharePointFileManager.prototype.encodeSharePointFileOrFolderUrl($.ig.SharePointFileBase.prototype.getItemByIdUrl(path)) + "/File?$select=*&$expand=ListItemAllFields/ParentList";
		var request = this.createRequestBuilderWithAcceptJson().setURL(url).setHttpMethod($.ig.SessionHTTPMethod.prototype.gET).setSuccessHandler(function (o) {
			handler(new $.ig.SharePointFile(1, $self.resolveODataRoot(o), $self.additionalIdentifier()));
		}).setErrorHandler(errorHandler).build();
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetFileMetaData(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::SearchFiles(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	searchFiles: function (searchText, handler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::SearchFiles(System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name=" Infragistics.SharePointFileManager::GetSearchCapabilities()" />*/
	getSearchCapabilities: function () {
		return [ $.ig.SearchCapabilities.prototype.searchByText, $.ig.SearchCapabilities.prototype.searchByAuthor, $.ig.SearchCapabilities.prototype.searchByFileExtensions, $.ig.SearchCapabilities.prototype.searchByModifiedDateTime ];
	}
	/*<EndMethod Name=" Infragistics.SharePointFileManager::GetSearchCapabilities()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointFileManager::HasDropCapability()" />*/
	hasDropCapability: function () {
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointFileManager::HasDropCapability()" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::SearchFilesWithQuery(Infragistics.SearchQuery, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	searchFilesWithQuery: function (searchQuery, handler, errorHandler) {
		var request = new $.ig.SharePointSearchFilesRequest(this.tokenState(), function (r, o) {
			if (handler != null) {
				handler(o);
			}
		}, function (r, error) {
			if (errorHandler != null) {
				errorHandler(error);
			}
		});
		request.searchQuery(searchQuery);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::SearchFilesWithQuery(Infragistics.SearchQuery, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::CreateFolder(System.String, System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	createFolder: function (newFolderName, remoteParentFolderId, successHandler, errorHandler) {
		var $self = this;
		var folderPath = null;
		if ($.ig.SharePointLibrary.prototype.isLibraryPath(remoteParentFolderId)) {
			var root = "LibFolder:";
			folderPath = $.ig.NativeStringUtility.prototype.substring(remoteParentFolderId, root.length, remoteParentFolderId.length - root.length);
		} else if ($.ig.SharePointFolder.prototype.isFolderPath(remoteParentFolderId)) {
			folderPath = $.ig.SharePointFolder.prototype.extractPath(remoteParentFolderId);
		} else {
			return null;
		}
		var url = folderPath + "/folders/add(url='" + newFolderName + "')";
		return this.createRequestBuilderWithAcceptJson().setURL(url).setHttpMethod($.ig.SessionHTTPMethod.prototype.pOST).setSuccessHandler(function (o) {
			successHandler(new $.ig.SharePointFolder(1, $self.resolveODataRoot(o), $self.additionalIdentifier()));
		}).setErrorHandler(errorHandler).build();
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::CreateFolder(System.String, System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::DeleteFile(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	deleteFile: function (path, successHandler, errorHandler) {
		var request = new $.ig.SharePointDeleteRequest(this.tokenState(), successHandler, function (r, e) {
			if (errorHandler != null) {
				errorHandler(e);
			}
		});
		request.pathIdentifier($.ig.SharePointFile.prototype.extractPath(path));
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::DeleteFile(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::DeleteFilePermanent(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	deleteFilePermanent: function (fileId, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::DeleteFilePermanent(System.String, Infragistics.RequestSuccessBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetAccountInfo(Infragistics.CloudAccountUserInfoBlock, Infragistics.CloudErrorBlock)" />*/
	getAccountInfo: function (successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetAccountInfo(Infragistics.CloudAccountUserInfoBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointFileManager::CanAddFileInFolder(System.String)" />*/
	canAddFileInFolder: function (fileId) {
		if (fileId != null && ($.ig.SharePointFolder.prototype.isFolderPath(fileId) || $.ig.SharePointLibrary.prototype.isLibraryPath(fileId))) {
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointFileManager::CanAddFileInFolder(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointFileManager::CanDeleteFile(System.String)" />*/
	canDeleteFile: function (fileId) {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointFileManager::CanDeleteFile(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetParentForFile(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	getParentForFile: function (fileId, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetParentForFile(System.String, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetFileByName(System.String, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	getFileByName: function (fileName, remoteFolderId, handler, errorHandler) {
		var request = this.getFilesInFolder1(remoteFolderId, function (o) {
			if (handler != null) {
				var files = o;
				var result = new $.ig.Array();
				var count = files.length;
				for (var i = 0; i < count; i++) {
					if ($.ig.util.cast($.ig.SharePointFile.prototype.$type, files[i]) !== null) {
						var file = files[i];
						if ($.ig.CPStringUtility.prototype.areStringsEqual(file.name().toLowerCase(), fileName.toLowerCase())) {
							result.add(file);
						}
					} else if ($.ig.util.cast($.ig.SharePointFolder.prototype.$type, files[i]) !== null) {
						var folder = files[i];
						if ($.ig.CPStringUtility.prototype.areStringsEqual(folder.name().toLowerCase(), fileName.toLowerCase())) {
							result.add(folder);
						}
					}
				}
				handler(result);
			}
		}, function (e) {
			errorHandler(e);
		});
		var requestWrapper = new $.ig.RequestWrapper();
		requestWrapper.request(request);
		return requestWrapper;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetFileByName(System.String, System.String, Infragistics.CloudFilesBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetDownloadLink(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	getDownloadLink: function (fileId, successHandler, errorHandler) {
		var request = new $.ig.SharePointDownloadLinkRequest(this.tokenState(), successHandler, errorHandler);
		request.path(fileId);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetDownloadLink(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetFilePermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	getFilePermissions: function (fileId, requestSuccessBlock, requestErrorBlock) {
		var request = new $.ig.SharePointGetFilePermissions(this.tokenState(), function (r, o) {
			requestSuccessBlock(o);
		}, requestErrorBlock);
		if ($.ig.SharePointLibrary.prototype.isLibraryPath(fileId)) {
			return null;
		} else if ($.ig.SharePointFolder.prototype.isFolderPath(fileId)) {
			request.baseURL($.ig.SharePointFolder.prototype.extractPath(fileId));
		} else if ($.ig.SharePointList.prototype.isListFolder(fileId)) {
			return null;
		} else if ($.ig.SharePointFile.prototype.isFilePath(fileId)) {
			request.baseURL($.ig.SharePointFile.prototype.extractPath(fileId));
		} else if ($.ig.NativeStringUtility.prototype.contains(fileId, "Lists(guid")) {
			return null;
		} else {
			return null;
		}
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetFilePermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetFileMembersPermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	getFileMembersPermissions: function (fileId, successHandler, errorHandler) {
		var email = this.tokenState().userInfo().getEmail();
		var name = this.tokenState().userInfo().getDisplayName();
		var userId = this.tokenState().userInfo().getUserId();
		var request = new $.ig.SharePointGetSharingInformation(fileId, this.tokenState(), function (r, o) {
			successHandler(new $.ig.SPSharingInfoPermissions(o, email, name, userId));
		}, errorHandler);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetFileMembersPermissions(System.String, Infragistics.CloudFilePermissionsBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::DeleteFileMemberPermissions(System.String, Infragistics.CloudFileMemberPermissions, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	deleteFileMemberPermissions: function (fileId, memberPermission, successHandler, errorHandler) {
		if (memberPermission == null) {
			return null;
		}
		var permissions = memberPermission;
		if (permissions.isExternal()) {
			var request = new $.ig.SharePointRemoveShareLinkObject(fileId, this.tokenState(), successHandler, errorHandler);
			request.linkKind(permissions.linkKind());
			request.role(permissions.role());
			request.shareId(permissions.shareId());
			request.id(permissions.id());
			request.loginName(permissions.loginName());
			request.name(permissions.name());
			request.isExternal(permissions.isExternal());
			request.principalType(permissions.principalType());
			request.email(permissions.email());
			return request;
		} else {
			var request1 = new $.ig.SharePointRemoveShareObject(fileId, this.tokenState(), successHandler, errorHandler);
			request1.loginName(permissions.loginName());
			request1.role(permissions.role());
			return request1;
		}
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::DeleteFileMemberPermissions(System.String, Infragistics.CloudFileMemberPermissions, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::DeleteFilePermissions(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	deleteFilePermissions: function (fileId, successHandler, errorHandler) {
		return null;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::DeleteFilePermissions(System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GrantPermissionsForFile(System.String, Infragistics.TokenState, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	grantPermissionsForFile: function (fileId, granteeTokenState, requestSuccessBlock, requestErrorBlock) {
		var $self = this;
		if (granteeTokenState.userInfo() == null || (granteeTokenState.userInfo()).sharePointUser().loginName() == null) {
			requestErrorBlock(null, (function () {
				var $ret = new $.ig.CloudError(0);
				$ret.errorMessage("Missing customer information from SharePoint. Try adding your SharePoint provider");
				return $ret;
			}()));
			return null;
		}
		var request = new $.ig.SharePointShareObject(fileId, (granteeTokenState.userInfo()).sharePointUser(), this.tokenState(), function (r1, o1) {
			var permissions = new $.ig.SPSharingInfoPermissions(o1, granteeTokenState.userInfo().getEmail(), granteeTokenState.userInfo().getDisplayName(), $self.tokenState().userInfo().getUserId());
			requestSuccessBlock(r1, permissions);
		}, requestErrorBlock);
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GrantPermissionsForFile(System.String, Infragistics.TokenState, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFileManager::GetEndpoint()" />*/
	getEndpoint: function () {
		return this.tokenState().token().getEndPoint();
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFileManager::GetEndpoint()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFileManager::GetUrlFromPathIdentifier(System.String)" />*/
	getUrlFromPathIdentifier: function (pathIdentifier) {
		if ($.ig.SharePointLibrary.prototype.isLibraryPath(pathIdentifier)) {
			return $.ig.SharePointLibrary.prototype.extractPath(pathIdentifier);
		} else if ($.ig.SharePointList.prototype.isListFolder(pathIdentifier)) {
			return $.ig.SharePointList.prototype.extractPath(pathIdentifier);
		} else if ($.ig.NativeStringUtility.prototype.startsWith(pathIdentifier, "http:") || $.ig.NativeStringUtility.prototype.startsWith(pathIdentifier, "https:")) {
			return pathIdentifier + "/_api/web";
		} else {
			return $.ig.SharePointFileBase.prototype.extractPath(pathIdentifier);
		}
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFileManager::GetUrlFromPathIdentifier(System.String)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFileManager::GetBaseUrlFromPathIdentifier(System.String)" />*/
	getBaseUrlFromPathIdentifier: function (pathIdentifier) {
		if ($.ig.SharePointLibrary.prototype.isLibraryPath(pathIdentifier)) {
			return $.ig.SharePointLibrary.prototype.extractBasePath(pathIdentifier);
		} else {
			return this.getUrlFromPathIdentifier(pathIdentifier);
		}
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFileManager::GetBaseUrlFromPathIdentifier(System.String)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointFileManager::IsFileTypeBasedOnPath(System.String)" />*/
	isFileTypeBasedOnPath: function (pathIdentifier) {
		if (!($.ig.SharePointLibrary.prototype.isLibraryPath(pathIdentifier) || $.ig.SharePointList.prototype.isListFolder(pathIdentifier) || $.ig.NativeStringUtility.prototype.startsWith(pathIdentifier, "http:") || $.ig.NativeStringUtility.prototype.startsWith(pathIdentifier, "https:"))) {
			return true;
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointFileManager::IsFileTypeBasedOnPath(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GenerateSharedLink(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	generateSharedLink: function (cloudFile, successHandler, errorHandler) {
		var $self = this;
		if (!cloudFile.sectionKey().equals($.ig.CloudFile.prototype.typeFile)) {
			successHandler(cloudFile);
			return null;
		}
		var baseUrl = $.ig.SharePointFile.prototype.resolveBaseUrlByFile(cloudFile);
		var action = "/GetSharingInformation?@a1" + $.ig.SharePointFile.prototype.extractListId(cloudFile.pathIdentifier()) + "&@a2=" + $.ig.SharePointFile.prototype.extractListItemId(cloudFile.pathIdentifier()) + "&$Expand=permissionsInformation,pickerSettings";
		var url = baseUrl + action;
		return this.createRequestBuilderWithAcceptJson().setURL(url).setHttpMethod($.ig.SessionHTTPMethod.prototype.pOST).setSuccessHandler(function (o) {
			$self.successfulSharedLink(o, cloudFile, successHandler, errorHandler);
		}).setErrorHandler(function (e) {
			errorHandler(e);
		}).build();
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GenerateSharedLink(Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SharePointFileManager::SuccessfulSharedLink(Infragistics.CPJSONObject, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	successfulSharedLink: function (response, cloudFile, successHandler, errorHandler) {
		if (successHandler != null) {
			var sharedLinkFound = false;
			var links = response.resolveListForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("permissionsInformation");
				$ret.add("links");
				return $ret;
			}()));
			if (links != null) {
				for (var i = 0; i < links.length; i++) {
					var item = $.ig.CPJSONObject.prototype.createFromJSONObject(links[i]);
					var linkDetails = item.resolveJSONForKey("linkDetails");
					if (linkDetails == null) {
						continue;
					}
					var url = linkDetails.resolveStringForKey("Url");
					var linkKind = linkDetails.resolveStringForKey("LinkKind");
					if (!$.ig.CPStringUtility.prototype.isNullOrEmpty(url) && !$.ig.CPStringUtility.prototype.isNullOrEmpty(linkKind)) {
						if (linkKind.equals("2") || linkKind.equals("4")) {
							cloudFile.sharedViewLink(url);
							sharedLinkFound = true;
						} else if (linkKind.equals("3") || linkKind.equals("5")) {
							cloudFile.sharedEditLink(url);
							sharedLinkFound = true;
						}
					}
				}
			}
			if (sharedLinkFound) {
				successHandler(cloudFile);
			} else {
				var sharingAbilities = response.resolveJSONForKey("sharingAbilities");
				if (sharingAbilities != null) {
					if (this.canCreateLink(sharingAbilities, "anonymousLinkAbilities", "canGetEditLink")) {
						this.createSharedLink("5", "2", cloudFile, successHandler, errorHandler);
					} else if (this.canCreateLink(sharingAbilities, "anonymousLinkAbilities", "canGetReadLink")) {
						this.createSharedLink("4", "1", cloudFile, successHandler, errorHandler);
					} else if (this.canCreateLink(sharingAbilities, "organizationLinkAbilities", "canGetEditLink")) {
						this.createSharedLink("3", "2", cloudFile, successHandler, errorHandler);
					} else if (this.canCreateLink(sharingAbilities, "organizationLinkAbilities", "canGetReadLink")) {
						this.createSharedLink("2", "1", cloudFile, successHandler, errorHandler);
					} else {
						successHandler(cloudFile);
					}
				}
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.SharePointFileManager::SuccessfulSharedLink(Infragistics.CPJSONObject, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointFileManager::CanCreateLink(Infragistics.CPJSONObject, System.String, System.String)" />*/
	canCreateLink: function (sharingAbilities, sharingAbilitykey, linkTypeKey) {
		var linkAbilities = sharingAbilities.resolveJSONForKey(sharingAbilitykey);
		if (linkAbilities != null) {
			var canGetLink = linkAbilities.resolveJSONForKey(linkTypeKey);
			if (canGetLink != null) {
				if (canGetLink.resolveBoolForKey("enabled")) {
					return true;
				}
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointFileManager::CanCreateLink(Infragistics.CPJSONObject, System.String, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SharePointFileManager::CreateSharedLink(System.String, System.String, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	createSharedLink: function (linkKind, role, cloudFile, successHandler, errorHandler) {
		var request = new $.ig.SharePointCreateSharedLinkRequest(this.tokenState(), function (r, o) {
			if (o != null) {
				if (role == "2") {
					cloudFile.sharedEditLink(o);
				} else {
					cloudFile.sharedViewLink(o);
				}
			}
			successHandler(cloudFile);
		}, function (r, e) {
			if (errorHandler != null) {
				errorHandler(e);
			}
		});
		request.linkKind(linkKind);
		request.baseUrl($.ig.SharePointFile.prototype.resolveBaseUrlByFile(cloudFile));
		request.role(role);
		this.executeAndManage(request);
	}
	/*<EndMethod Name="System.Void Infragistics.SharePointFileManager::CreateSharedLink(System.String, System.String, Infragistics.CloudFile, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::ValidateUrl(System.String, System.String, Infragistics.DoubleStringBlock, Infragistics.CloudErrorBlock)" />*/
	validateUrl: function (siteUrl, fullPath, successHandler, errorHandler) {
		var $self = this;
		var endpoint = siteUrl + "/_api/sp.web.getweburlfrompageurl(@v)?@v='" + fullPath + "'";
		return this.createRequestBuilderWithAcceptJson().setURL(endpoint).setHttpMethod($.ig.SessionHTTPMethod.prototype.gET).setSuccessHandler(function (o) {
			$self.getSiteTitle((o).resolveStringForKey("value"), successHandler, errorHandler);
		}).setErrorHandler(errorHandler).build();
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::ValidateUrl(System.String, System.String, Infragistics.DoubleStringBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SharePointFileManager::GetSiteTitle(System.String, Infragistics.DoubleStringBlock, Infragistics.CloudErrorBlock)" />*/
	getSiteTitle: function (finalUrl, successHandler, errorHandler) {
		var url = finalUrl;
		if (!$.ig.NativeStringUtility.prototype.endsWith(url, "/")) {
			url = url + "/_api/web/title";
		} else {
			url = url + "_api/web/title";
		}
		var request = this.createRequestBuilderWithAcceptJson().setURL(url).setHttpMethod($.ig.SessionHTTPMethod.prototype.pOST).setSuccessHandler(function (o) {
			if (successHandler != null) {
				successHandler(finalUrl, (o).resolveStringForKey("value"));
			}
		}).setErrorHandler(errorHandler).build();
		this.executeAndManage(request);
	}
	/*<EndMethod Name="System.Void Infragistics.SharePointFileManager::GetSiteTitle(System.String, Infragistics.DoubleStringBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetFilePathName(System.String, Infragistics.StringBlock, Infragistics.CloudErrorBlock)" />*/
	getFilePathName: function (path, handler, errorHandler) {
		var fileManager = new $.ig.SharePointFileManager(0, this.tokenState());
		var url = $.ig.SharePointFileManager.prototype.encodeSharePointFileOrFolderUrl(this.getBaseUrlFromPathIdentifier(path)) + "?$select=*";
		return this.createRequestBuilderWithAcceptJson().setURL(url).setHttpMethod($.ig.SessionHTTPMethod.prototype.gET).setSuccessHandler(function (o) {
			handler(fileManager.getFilePathNameSuccess(o));
		}).setErrorHandler(errorHandler).build();
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::GetFilePathName(System.String, Infragistics.StringBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointFileManager::GetFilePathNameSuccess(Infragistics.CPJSONObject)" />*/
	getFilePathNameSuccess: function (json) {
		var file = $.ig.SharePointFileManager.prototype.createCloudFile(this.resolveODataRoot(json), this.additionalIdentifier());
		return file.name();
	}
	/*<EndMethod Name="System.String Infragistics.SharePointFileManager::GetFilePathNameSuccess(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="Infragistics.CloudFile Infragistics.SharePointFileManager::CreateCloudFile(Infragistics.CPJSONObject, System.String)" />*/
	createCloudFile: function (jsonData, providerId) {
		var type = jsonData.resolveStringForKey("odata.type");
		if ("SP.List" == type) {
			return new $.ig.SharePointList(1, jsonData, providerId);
		} else if ("SP.Web" == type) {
			return new $.ig.SharePointSite(1, jsonData, providerId);
		} else {
			return new $.ig.SharePointFile(1, jsonData, providerId);
		}
	}
	/*<EndMethod Name="Infragistics.CloudFile Infragistics.SharePointFileManager::CreateCloudFile(Infragistics.CPJSONObject, System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::DownloadFileFromLink(System.String, System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	downloadFileFromLink: function (fileId, downloadLink, successHandler, errorHandler) {
		return new $.ig.SharePointDownloadFileFromLinkRequest(downloadLink, this.tokenState(), successHandler, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::DownloadFileFromLink(System.String, System.String, Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::OverwriteFile(System.String, System.Object, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	overwriteFile: function (fileName, file, remoteFolderId, remoteFileId, progress, success, errorHandler) {
		return this.uploadFileWithDataRequest(fileName, file, remoteFolderId, true, progress, success, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::OverwriteFile(System.String, System.Object, System.String, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::UploadFile(System.String, System.Object, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadFile: function (fileName, file, remoteFolderId, progress, success, errorHandler) {
		return this.uploadFileWithDataRequest(fileName, file, remoteFolderId, false, progress, success, errorHandler);
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::UploadFile(System.String, System.Object, System.String, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::UploadFileWithDataRequest(System.String, System.Object, System.String, System.Boolean, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadFileWithDataRequest: function (fileName, file, remoteFolderId, overwrite, progress, success, errorHandler) {
		var $self = this;
		var fileSize = $.ig.NativeFileUtility.prototype.getFileSize(file);
		var readFileRequest = $.ig.NativeRequestUtility.prototype.utility().readFile(file, 0, fileSize, function (r, o) {
			var data = o;
			var startUploadRequest = $self.uploadFileWithData(fileName, data, remoteFolderId, overwrite, progress, success, errorHandler);
			startUploadRequest.execute();
		}, function (r, o) {
		});
		return readFileRequest;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::UploadFileWithDataRequest(System.String, System.Object, System.String, System.Boolean, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.SharePointFileManager::UploadFileWithData(System.String, System.Object, System.String, System.Boolean, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	uploadFileWithData: function (fileName, data, remoteFolderId, overwrite, progress, success, errorHandler) {
		var request = new $.ig.SharePointCreateFileRequest(this.tokenState(), function (r, o) {
			if (success != null) {
				success(o);
			}
		}, function (r, e) {
			if (errorHandler != null) {
				errorHandler(e);
			}
		}, function (r, a, b) {
			if (progress != null) {
				progress(a, b);
			}
		});
		request.file(data);
		request.url(fileName);
		request.overwrite(overwrite);
		request.parent($.ig.NativeRequestUtility.prototype.utility().uRLStringByAddingPercentEncoding(this.getUrlFromPathIdentifier(remoteFolderId)));
		var requestWrapper = new $.ig.RequestWrapper();
		requestWrapper.request(request);
		return requestWrapper;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.SharePointFileManager::UploadFileWithData(System.String, System.Object, System.String, System.Boolean, Infragistics.ProgressFileBlock, Infragistics.CloudFileBlock, Infragistics.CloudErrorBlock)" />*/
	,
	$type: new $.ig.Type('SharePointFileManager', $.ig.CloudFileManager.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointFileManager" />*/

/*<BeginType Name="Infragistics.SharePointCreateSharedLinkRequest" />*/

$.ig.util.defType('SharePointCreateSharedLinkRequest', 'SharePointRequestBase', {
	init: function (token, success, error) {
		$.ig.SharePointRequestBase.prototype.init.call(this, 0, "SharePointCreateSharedLinkRequest", token, success, error);
		this.sitePath(token.token().getEndPoint());
	},
	_baseUrl: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointCreateSharedLinkRequest::BaseUrl()" />*/
	baseUrl: function (value) {
		if (arguments.length === 1) {
			this._baseUrl = value;
			return value;
		} else {
			return this._baseUrl;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointCreateSharedLinkRequest::BaseUrl()" />*/
	,
	_linkKind: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointCreateSharedLinkRequest::LinkKind()" />*/
	linkKind: function (value) {
		if (arguments.length === 1) {
			this._linkKind = value;
			return value;
		} else {
			return this._linkKind;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointCreateSharedLinkRequest::LinkKind()" />*/
	,
	_role: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointCreateSharedLinkRequest::Role()" />*/
	role: function (value) {
		if (arguments.length === 1) {
			this._role = value;
			return value;
		} else {
			return this._role;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointCreateSharedLinkRequest::Role()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointCreateSharedLinkRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return this.baseUrl();
	}
	/*<EndMethod Name="System.String Infragistics.SharePointCreateSharedLinkRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointCreateSharedLinkRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "/ShareLink";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointCreateSharedLinkRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointCreateSharedLinkRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointCreateSharedLinkRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.SharePointCreateSharedLinkRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var header = new $.ig.Dictionary(0);
		header.item("Accept", "application/json;odata=verbose");
		header.item("Content-Type", "application/json;odata=verbose");
		return header;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.SharePointCreateSharedLinkRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointCreateSharedLinkRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		return "{\"request\":{\"createLink\":true,\"settings\":{\"linkKind\":" + this.linkKind() + ",\"expiration\":null,\"role\":" + this.role() + ",\"restrictShareMembership\":false,\"updatePassword\":false,\"password\":\"\"}}}";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointCreateSharedLinkRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SharePointCreateSharedLinkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var url = null;
		var dJson = response.resolveJSONForKey("d");
		if (dJson != null) {
			var shareLink = dJson.resolveJSONForKey("ShareLink");
			if (shareLink != null) {
				var sharingLinkInfo = shareLink.resolveJSONForKey("sharingLinkInfo");
				if (sharingLinkInfo != null) {
					url = sharingLinkInfo.resolveStringForKey("Url");
				}
			}
		}
		return url;
	}
	/*<EndMethod Name="System.Object Infragistics.SharePointCreateSharedLinkRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('SharePointCreateSharedLinkRequest', $.ig.SharePointRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointCreateSharedLinkRequest" />*/

/*<BeginType Name="Infragistics.SharePointDeleteRequest" />*/

$.ig.util.defType('SharePointDeleteRequest', 'SharePointRequestBase', {
	init: function (token, success, error) {
		$.ig.SharePointRequestBase.prototype.init.call(this, 0, "SharePointDelete", token, success, error);
	},
	_pathIdentifier: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointDeleteRequest::PathIdentifier()" />*/
	pathIdentifier: function (value) {
		if (arguments.length === 1) {
			this._pathIdentifier = value;
			return value;
		} else {
			return this._pathIdentifier;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointDeleteRequest::PathIdentifier()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointDeleteRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointDeleteRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.SharePointDeleteRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var header = new $.ig.Dictionary(0);
		header.item("X-HTTP-Method", "DELETE");
		return header;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.SharePointDeleteRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointDeleteRequest::ResolveURL()" />*/
	resolveURL: function () {
		return $.ig.NativeRequestUtility.prototype.utility().uRLStringByAddingPercentEncoding(this.pathIdentifier());
	}
	/*<EndMethod Name="System.String Infragistics.SharePointDeleteRequest::ResolveURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointDeleteRequest::ResolveAction()" />*/
	resolveAction: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.SharePointDeleteRequest::ResolveAction()" />*/
	,
	$type: new $.ig.Type('SharePointDeleteRequest', $.ig.SharePointRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointDeleteRequest" />*/

/*<BeginType Name="Infragistics.SharePointSearchFilesRequest" />*/

$.ig.util.defType('SharePointSearchFilesRequest', 'SharePointRequestBase', {
	init: function (token, success, error) {
		$.ig.SharePointRequestBase.prototype.init.call(this, 0, "SharePointSearchFiles", token, success, error);
		this.sitePath(token.token().getEndPoint());
	},
	_query: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointSearchFilesRequest::Query()" />*/
	query: function (value) {
		if (arguments.length === 1) {
			this._query = value;
			return value;
		} else {
			return this._query;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointSearchFilesRequest::Query()" />*/
	,
	_searchQuery: null,
	/*<BeginProperty Name="Infragistics.SearchQuery Infragistics.SharePointSearchFilesRequest::SearchQuery()" />*/
	searchQuery: function (value) {
		if (arguments.length === 1) {
			this._searchQuery = value;
			return value;
		} else {
			return this._searchQuery;
		}
	}
	/*<EndProperty Name="Infragistics.SearchQuery Infragistics.SharePointSearchFilesRequest::SearchQuery()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointSearchFilesRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointSearchFilesRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.SharePointSearchFilesRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var header = new $.ig.Dictionary(0);
		header.item("Accept", "application/json");
		return header;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.SharePointSearchFilesRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointSearchFilesRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var json = new $.ig.CPJSONObject(1);
		var request = new $.ig.CPJSONObject(1);
		json.setJSONForKey("request", request);
		request.setValueForKey("RowLimit", this.searchQuery()._itemsPerPage);
		request.setValueForKey("StartRow", this.searchQuery()._startAt);
		if (this.searchQuery()._text != null && this.searchQuery()._text.length > 0) {
			request.setValueForKey("Querytext", this.searchQuery()._text);
		} else {
			request.setValueForKey("Querytext", "*");
		}
		var selectProperties = new $.ig.Array();
		selectProperties.add("Title");
		selectProperties.add("Name");
		selectProperties.add("Path");
		selectProperties.add("DisplayName");
		selectProperties.add("Author");
		selectProperties.add("FileExtension");
		selectProperties.add("Size");
		selectProperties.add("ContentClass");
		selectProperties.add("UniqueID");
		selectProperties.add("SPWebUrl");
		selectProperties.add("ServerRedirectedEmbedURL");
		selectProperties.add("LastModifiedTime");
		request.setValueForKey("SelectProperties", selectProperties);
		var refinementFilters = new $.ig.Array();
		if (this.searchQuery()._fileExtensions != null && this.searchQuery()._fileExtensions.length > 0) {
			var extensions = "";
			for (var i = 0; i < this.searchQuery()._fileExtensions.length; i++) {
				var extension = this.searchQuery()._fileExtensions[i];
				if (i > 0) {
					extensions = extensions + ",";
				}
				extensions = extensions + "\"" + extension + "\"";
			}
			if (this.searchQuery()._fileExtensions.length == 1) {
				refinementFilters.add("fileExtension:equals(" + extensions + ")");
			} else {
				refinementFilters.add("fileExtension:or(" + extensions + ")");
			}
		}
		if (this.searchQuery()._author != null && this.searchQuery()._author.length > 0) {
			refinementFilters.add("Author:(\"" + this.searchQuery()._author + "\")");
		}
		if (!$.ig.NativeDateUtility.prototype.dateIsNull(this.searchQuery()._modifiedSince) && !$.ig.NativeDateUtility.prototype.dateIsNull(this.searchQuery()._modifiedBefore)) {
			refinementFilters.add("LastModifiedTime:range(" + $.ig.DateUtility.prototype.formatDateToRFC3339UTC(this.searchQuery()._modifiedSince) + ", " + $.ig.DateUtility.prototype.formatDateToRFC3339UTC(this.searchQuery()._modifiedBefore) + ")");
		} else {
			if (!$.ig.NativeDateUtility.prototype.dateIsNull(this.searchQuery()._modifiedBefore)) {
				refinementFilters.add("LastModifiedTime:range(min, " + $.ig.DateUtility.prototype.formatDateToRFC3339UTC(this.searchQuery()._modifiedBefore) + ")");
			}
			if (!$.ig.NativeDateUtility.prototype.dateIsNull(this.searchQuery()._modifiedSince)) {
				refinementFilters.add("LastModifiedTime:range(" + $.ig.DateUtility.prototype.formatDateToRFC3339UTC(this.searchQuery()._modifiedSince) + ", max)");
			}
		}
		var searchSitesResultType = (this.searchQuery())._searchSites;
		if (searchSitesResultType) {
			refinementFilters.add("contentclass:or(\"STS_Web\", \"STS_Site\")");
		}
		if (refinementFilters.length > 0) {
			request.setValueForKey("RefinementFilters", refinementFilters);
		}
		return json.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.SharePointSearchFilesRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointSearchFilesRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "/search/postquery";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointSearchFilesRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SharePointSearchFilesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var files = new $.ig.Array();
		var rows = response.resolveListForKeyPath((function () {
			var $ret = new $.ig.Array();
			$ret.add("PrimaryQueryResult");
			$ret.add("RelevantResults");
			$ret.add("Table");
			$ret.add("Rows");
			return $ret;
		}()));
		var count = rows.length;
		for (var i = 0; i < count; i++) {
			var responseJson = new $.ig.CPJSONObject(1);
			var rowJSON = $.ig.CPJSONObject.prototype.createFromJSONObject(rows[i]);
			var cells = rowJSON.resolveListForKey("Cells");
			var countCells = cells.length;
			for (var j = 0; j < countCells; j++) {
				var cellJson = $.ig.CPJSONObject.prototype.createFromJSONObject(cells[j]);
				if (cellJson.containsKey("Value")) {
					var key = cellJson.resolveStringForKey("Key");
					var value = cellJson.resolveStringForKey("Value");
					if (key.equals("Author")) {
						responseJson.setValueForKey("Author", value);
					} else if (key.equals("Title")) {
						responseJson.setValueForKey("Name", value);
					} else if (key.equals("FileExtension")) {
						responseJson.setValueForKey("FileExtension", value);
					} else if (key.equals("ContentClass")) {
						responseJson.setValueForKey("ContentClass", value);
					} else if (key.equals("Size")) {
						responseJson.setValueForKey("Size", value);
					} else if (key.equals("Path")) {
						responseJson.setValueForKey("Path", value);
					} else if (key.equals("UniqueID")) {
						responseJson.setValueForKey("UniqueId", value);
					} else if (key.equals("SPWebUrl")) {
						responseJson.setValueForKey("SPWebUrl", value);
					} else if (key.equals("ServerRedirectedEmbedURL")) {
						responseJson.setValueForKey("ServerRedirectedEmbedUrl", value);
					} else if (key.equals("LastModifiedTime")) {
						responseJson.setValueForKey("LastModifiedTime", value);
					}
				}
			}
			if (this.isFolder(responseJson)) {
				files.add(new $.ig.SharePointFolder(1, responseJson, this.additionalIdentifier()));
			} else {
				var contentClass = responseJson.resolveStringForKey("ContentClass");
				var fileExtension = responseJson.resolveStringForKey("FileExtension");
				var contentType = $.ig.SharePointProviderUtility.prototype.resolveContentType(contentClass, fileExtension);
				if (contentType == $.ig.CloudFile.prototype.sPTypeSite) {
					var name = responseJson.resolveStringForKey("Name");
					responseJson.setValueForKey("Title", name);
					files.add(new $.ig.SharePointSite(1, responseJson, this.additionalIdentifier()));
				} else if (contentType == $.ig.CloudFile.prototype.sPTypeExternalList) {
					files.add(new $.ig.SharePointList(1, responseJson, this.additionalIdentifier()));
				} else {
					var resultFile = null;
					if ($.ig.SharePointProviderUtility.prototype.isListItemContentType(contentType)) {
						responseJson.setValueForKey("ContentType", contentType);
						resultFile = new $.ig.SharePointListItem(1, responseJson, this.additionalIdentifier());
						files.add(resultFile);
					} else {
						var name1 = responseJson.resolveStringForKey("Name");
						var fileName = name1 + "." + fileExtension;
						responseJson.setValueForKey("Name", fileName);
						resultFile = new $.ig.SharePointFile(1, responseJson, this.additionalIdentifier());
					}
					if (responseJson.containsKey("Path")) {
						resultFile.setValueForKey("EncodedAbsUrl", $.ig.NativeRequestUtility.prototype.utility().uRLEncodeString(responseJson.resolveStringForKey("Path")));
					}
					files.add(resultFile);
				}
			}
		}
		return files;
	}
	/*<EndMethod Name="System.Object Infragistics.SharePointSearchFilesRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SharePointSearchFilesRequest::isFolder(Infragistics.CPJSONObject)" />*/
	isFolder: function (json) {
		var contentClass = json.resolveStringForKey("ContentClass").toLowerCase();
		var isItem = $.ig.NativeStringUtility.prototype.startsWith(contentClass, "sts_listitem");
		var sizeVal = json.resolveStringForKey("Size");
		var size = 0;
		if (sizeVal != null && sizeVal.length > 0) {
			size = $.ig.truncate($.ig.NativeStringUtility.prototype.convertToDouble(sizeVal));
		}
		var fileExtenstion = json.resolveStringForKey("FileExtension");
		return isItem && size == 0 && (fileExtenstion == null || fileExtenstion.length == 0);
	}
	/*<EndMethod Name="System.Boolean Infragistics.SharePointSearchFilesRequest::isFolder(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SharePointSearchFilesRequest::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.SharePointRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.SharePointSearchFilesRequest::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('SharePointSearchFilesRequest', $.ig.SharePointRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointSearchFilesRequest" />*/

/*<BeginType Name="Infragistics.DiscoveryServices" />*/

$.ig.util.defType('DiscoveryServices', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	_rootSharePointSite: null,
	/*<BeginProperty Name="System.String Infragistics.DiscoveryServices::RootSharePointSite()" />*/
	rootSharePointSite: function (value) {
		if (arguments.length === 1) {
			this._rootSharePointSite = value;
			return value;
		} else {
			return this._rootSharePointSite;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DiscoveryServices::RootSharePointSite()" />*/
	,
	_azureDirectory: null,
	/*<BeginProperty Name="System.String Infragistics.DiscoveryServices::AzureDirectory()" />*/
	azureDirectory: function (value) {
		if (arguments.length === 1) {
			this._azureDirectory = value;
			return value;
		} else {
			return this._azureDirectory;
		}
	}
	/*<EndProperty Name="System.String Infragistics.DiscoveryServices::AzureDirectory()" />*/
	,
	$type: new $.ig.Type('DiscoveryServices', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.DiscoveryServices" />*/

/*<BeginType Name="Infragistics.SharePointCreateFileRequest" />*/

$.ig.util.defType('SharePointCreateFileRequest', 'SharePointRequestBase', {
	init: function (token, success, error, progress) {
		$.ig.SharePointRequestBase.prototype.init1.call(this, 1, "SharePointCreateFile", token, success, error, progress, null);
		this.sitePath(token.token().getEndPoint());
	},
	_filePath: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointCreateFileRequest::FilePath()" />*/
	filePath: function (value) {
		if (arguments.length === 1) {
			this._filePath = value;
			return value;
		} else {
			return this._filePath;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointCreateFileRequest::FilePath()" />*/
	,
	_parent: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointCreateFileRequest::Parent()" />*/
	parent: function (value) {
		if (arguments.length === 1) {
			this._parent = value;
			return value;
		} else {
			return this._parent;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointCreateFileRequest::Parent()" />*/
	,
	_url: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointCreateFileRequest::Url()" />*/
	url: function (value) {
		if (arguments.length === 1) {
			this._url = value;
			return value;
		} else {
			return this._url;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointCreateFileRequest::Url()" />*/
	,
	_overwrite: false,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointCreateFileRequest::Overwrite()" />*/
	overwrite: function (value) {
		if (arguments.length === 1) {
			this._overwrite = value;
			return value;
		} else {
			return this._overwrite;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointCreateFileRequest::Overwrite()" />*/
	,
	_file: null,
	/*<BeginProperty Name="System.Object Infragistics.SharePointCreateFileRequest::File()" />*/
	file: function (value) {
		if (arguments.length === 1) {
			this._file = value;
			return value;
		} else {
			return this._file;
		}
	}
	/*<EndProperty Name="System.Object Infragistics.SharePointCreateFileRequest::File()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointCreateFileRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointCreateFileRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.SharePointCreateFileRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.none;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.SharePointCreateFileRequest::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.SharePointCreateFileRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var hs = new $.ig.Dictionary(0);
		hs.item("Accept", "application/json");
		hs.item("Content-Type", "application/octet-stream");
		return hs;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.SharePointCreateFileRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointCreateFileRequest::ResolvePostContentFilePath()" />*/
	resolvePostContentFilePath: function () {
		return this.filePath();
	}
	/*<EndMethod Name="System.String Infragistics.SharePointCreateFileRequest::ResolvePostContentFilePath()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SharePointCreateFileRequest::ResolvePostContentAsObject()" />*/
	resolvePostContentAsObject: function () {
		return this.file();
	}
	/*<EndMethod Name="System.Object Infragistics.SharePointCreateFileRequest::ResolvePostContentAsObject()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointCreateFileRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return this.parent();
	}
	/*<EndMethod Name="System.String Infragistics.SharePointCreateFileRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointCreateFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "/Files/add(url='" + this.url() + "',overwrite=" + (this.overwrite() ? "true" : "false") + ")";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointCreateFileRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SharePointCreateFileRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return new $.ig.SharePointFile(1, response, this.additionalIdentifier());
	}
	/*<EndMethod Name="System.Object Infragistics.SharePointCreateFileRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('SharePointCreateFileRequest', $.ig.SharePointRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointCreateFileRequest" />*/

/*<BeginType Name="Infragistics.SharePointUpdateFileRequest" />*/

$.ig.util.defType('SharePointUpdateFileRequest', 'SharePointRequestBase', {
	init: function (token, success, error, progress) {
		$.ig.SharePointRequestBase.prototype.init1.call(this, 1, "SharePointUpdateFile", token, success, error, progress, null);
		this.sitePath(token.token().getEndPoint());
	},
	_filePath: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointUpdateFileRequest::FilePath()" />*/
	filePath: function (value) {
		if (arguments.length === 1) {
			this._filePath = value;
			return value;
		} else {
			return this._filePath;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointUpdateFileRequest::FilePath()" />*/
	,
	_url: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointUpdateFileRequest::Url()" />*/
	url: function (value) {
		if (arguments.length === 1) {
			this._url = value;
			return value;
		} else {
			return this._url;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointUpdateFileRequest::Url()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointUpdateFileRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pUT;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointUpdateFileRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.SharePointUpdateFileRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		return $.ig.SessionContentType.prototype.none;
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.SharePointUpdateFileRequest::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.SharePointUpdateFileRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var hs = new $.ig.Dictionary(0);
		hs.item("Accept", "application/json");
		hs.item("Content-Type", "application/octet-stream");
		return hs;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.SharePointUpdateFileRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointUpdateFileRequest::ResolvePostContentFilePath()" />*/
	resolvePostContentFilePath: function () {
		return this.filePath();
	}
	/*<EndMethod Name="System.String Infragistics.SharePointUpdateFileRequest::ResolvePostContentFilePath()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointUpdateFileRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return this.url() + "/$value";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointUpdateFileRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointUpdateFileRequest::ResolveAction()" />*/
	resolveAction: function () {
		return null;
	}
	/*<EndMethod Name="System.String Infragistics.SharePointUpdateFileRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SharePointUpdateFileRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return null;
	}
	/*<EndMethod Name="System.Object Infragistics.SharePointUpdateFileRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('SharePointUpdateFileRequest', $.ig.SharePointRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointUpdateFileRequest" />*/

/*<BeginType Name="Infragistics.SharePointGetFilePermissions" />*/

$.ig.util.defType('SharePointGetFilePermissions', 'SharePointRequestBase', {
	_baseURL: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointGetFilePermissions::BaseURL()" />*/
	baseURL: function (value) {
		if (arguments.length === 1) {
			this._baseURL = value;
			return value;
		} else {
			return this._baseURL;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointGetFilePermissions::BaseURL()" />*/
	,
	init: function (token, success, error) {
		$.ig.SharePointRequestBase.prototype.init.call(this, 0, "SharePointGetFilePermissions", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointGetFilePermissions::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointGetFilePermissions::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.SharePointGetFilePermissions::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var header = new $.ig.Dictionary(0);
		header.item("Accept", "application/json");
		return header;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.SharePointGetFilePermissions::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointGetFilePermissions::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return this.baseURL();
	}
	/*<EndMethod Name="System.String Infragistics.SharePointGetFilePermissions::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointGetFilePermissions::ResolveAction()" />*/
	resolveAction: function () {
		return "?$select=ListItemAllFields/EffectiveBasePermissions&$expand=ListItemAllFields";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointGetFilePermissions::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SharePointGetFilePermissions::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var high = response.resolveIntegerForKeyPath((function () {
			var $ret = new $.ig.Array();
			$ret.add("ListItemAllFields");
			$ret.add("EffectiveBasePermissions");
			$ret.add("High");
			return $ret;
		}()));
		var low = response.resolveIntegerForKeyPath((function () {
			var $ret = new $.ig.Array();
			$ret.add("ListItemAllFields");
			$ret.add("EffectiveBasePermissions");
			$ret.add("Low");
			return $ret;
		}()));
		return new $.ig.SPPermissions(high, low);
	}
	/*<EndMethod Name="System.Object Infragistics.SharePointGetFilePermissions::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SharePointGetFilePermissions::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.SharePointRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.SharePointGetFilePermissions::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('SharePointGetFilePermissions', $.ig.SharePointRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointGetFilePermissions" />*/

/*<BeginType Name="Infragistics.SharePointGetListPermissions" />*/

$.ig.util.defType('SharePointGetListPermissions', 'SharePointRequestBase', {
	_baseURL: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointGetListPermissions::BaseURL()" />*/
	baseURL: function (value) {
		if (arguments.length === 1) {
			this._baseURL = value;
			return value;
		} else {
			return this._baseURL;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointGetListPermissions::BaseURL()" />*/
	,
	init: function (token, success, error) {
		$.ig.SharePointRequestBase.prototype.init.call(this, 0, "SharePointGetListPermissions", token, success, error);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointGetListPermissions::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointGetListPermissions::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.SharePointGetListPermissions::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var header = new $.ig.Dictionary(0);
		header.item("Accept", "application/json");
		return header;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.SharePointGetListPermissions::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointGetListPermissions::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return this.baseURL();
	}
	/*<EndMethod Name="System.String Infragistics.SharePointGetListPermissions::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointGetListPermissions::ResolveAction()" />*/
	resolveAction: function () {
		return "/EffectiveBasePermissions";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointGetListPermissions::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SharePointGetListPermissions::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		var high = response.resolveIntegerForKey("High");
		var low = response.resolveIntegerForKey("Low");
		return new $.ig.SPPermissions(high, low);
	}
	/*<EndMethod Name="System.Object Infragistics.SharePointGetListPermissions::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SharePointGetListPermissions::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.SharePointRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.SharePointGetListPermissions::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('SharePointGetListPermissions', $.ig.SharePointRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointGetListPermissions" />*/

/*<BeginType Name="Infragistics.SharePointGetCurrentUser" />*/

$.ig.util.defType('SharePointGetCurrentUser', 'SharePointRequestBase', {
	init: function (token, success, error) {
		$.ig.SharePointRequestBase.prototype.init.call(this, 0, "SharePointGetCurrentUser", token, success, error);
		this.sitePath(token.token().getEndPoint());
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointGetCurrentUser::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointGetCurrentUser::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.SharePointGetCurrentUser::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var header = new $.ig.Dictionary(0);
		header.item("Accept", "application/json");
		return header;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.SharePointGetCurrentUser::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointGetCurrentUser::ResolveAction()" />*/
	resolveAction: function () {
		return "/web/CurrentUser";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointGetCurrentUser::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SharePointGetCurrentUser::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return new $.ig.SharePointUser(response);
	}
	/*<EndMethod Name="System.Object Infragistics.SharePointGetCurrentUser::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SharePointGetCurrentUser::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.SharePointRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.SharePointGetCurrentUser::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('SharePointGetCurrentUser', $.ig.SharePointRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointGetCurrentUser" />*/

/*<BeginType Name="Infragistics.SharePointDownloadLinkRequest" />*/

$.ig.util.defType('SharePointDownloadLinkRequest', 'SharePointRequestBase', {
	init: function (token, success, error) {
		$.ig.SharePointRequestBase.prototype.init.call(this, 0, "SharePointDownloadLinkRequest", token, success, error);
	},
	_path: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointDownloadLinkRequest::Path()" />*/
	path: function (value) {
		if (arguments.length === 1) {
			this._path = value;
			return value;
		} else {
			return this._path;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointDownloadLinkRequest::Path()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointDownloadLinkRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointDownloadLinkRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointDownloadLinkRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return $.ig.NativeRequestUtility.prototype.utility().uRLStringByAddingPercentEncoding($.ig.SharePointFile.prototype.extractPath(this.path()));
	}
	/*<EndMethod Name="System.String Infragistics.SharePointDownloadLinkRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointDownloadLinkRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "/$value";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointDownloadLinkRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SharePointDownloadLinkRequest::Execute()" />*/
	execute: function () {
		this.success(this.resolveURL());
	}
	/*<EndMethod Name="System.Void Infragistics.SharePointDownloadLinkRequest::Execute()" />*/
	,
	$type: new $.ig.Type('SharePointDownloadLinkRequest', $.ig.SharePointRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointDownloadLinkRequest" />*/

/*<BeginType Name="Infragistics.SharePointDownloadFileFromLinkRequest" />*/

$.ig.util.defType('SharePointDownloadFileFromLinkRequest', 'SharePointRequestBase', {
	__downloadLink: null,
	init: function (downloadLink, token, success, error) {
		$.ig.SharePointRequestBase.prototype.init.call(this, 0, "SharePointDownloadLinkRequest", token, success, error);
		this.__downloadLink = downloadLink;
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointDownloadFileFromLinkRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.gET;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointDownloadFileFromLinkRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointDownloadFileFromLinkRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return this.__downloadLink;
	}
	/*<EndMethod Name="System.String Infragistics.SharePointDownloadFileFromLinkRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointDownloadFileFromLinkRequest::ResolveAction()" />*/
	resolveAction: function () {
		return "";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointDownloadFileFromLinkRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionTaskType Infragistics.SharePointDownloadFileFromLinkRequest::ResolveTaskType()" />*/
	resolveTaskType: function () {
		return $.ig.SessionTaskType.prototype.data;
	}
	/*<EndMethod Name="Infragistics.SessionTaskType Infragistics.SharePointDownloadFileFromLinkRequest::ResolveTaskType()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.SharePointDownloadFileFromLinkRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.dATA;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.SharePointDownloadFileFromLinkRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SharePointDownloadFileFromLinkRequest::ProcessDataResponse(System.Array)" />*/
	processDataResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.SharePointDownloadFileFromLinkRequest::ProcessDataResponse(System.Array)" />*/
	,
	$type: new $.ig.Type('SharePointDownloadFileFromLinkRequest', $.ig.SharePointRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointDownloadFileFromLinkRequest" />*/

/*<BeginType Name="Infragistics.SharePointShareObject" />*/

$.ig.util.defType('SharePointShareObject', 'SharePointRequestBase', {
	_pathIdentifier: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointShareObject::PathIdentifier()" />*/
	pathIdentifier: function (value) {
		if (arguments.length === 1) {
			this._pathIdentifier = value;
			return value;
		} else {
			return this._pathIdentifier;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointShareObject::PathIdentifier()" />*/
	,
	_sharePointUser: null,
	/*<BeginProperty Name="Infragistics.SharePointUser Infragistics.SharePointShareObject::SharePointUser()" />*/
	sharePointUser: function (value) {
		if (arguments.length === 1) {
			this._sharePointUser = value;
			return value;
		} else {
			return this._sharePointUser;
		}
	}
	/*<EndProperty Name="Infragistics.SharePointUser Infragistics.SharePointShareObject::SharePointUser()" />*/
	,
	init: function (pathIdentifier, sharePointUser, token, success, error) {
		$.ig.SharePointRequestBase.prototype.init.call(this, 0, "SharePointShareObject", token, success, error);
		this.pathIdentifier(pathIdentifier);
		this.sharePointUser(sharePointUser);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointShareObject::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointShareObject::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.SharePointShareObject::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var header = new $.ig.Dictionary(0);
		header.item("Accept", "application/json");
		return header;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.SharePointShareObject::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointShareObject::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return $.ig.SharePointFile.prototype.getItemByIdUrl(this.pathIdentifier());
	}
	/*<EndMethod Name="System.String Infragistics.SharePointShareObject::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointShareObject::ResolveAction()" />*/
	resolveAction: function () {
		return "/ShareObject";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointShareObject::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointShareObject::ResolvePostContent()" />*/
	resolvePostContent: function () {
		var json = new $.ig.CPJSONObject(1);
		json.setValueForKey("emailBody", "");
		json.setValueForKey("includeAnonymousLinkInEmail", false);
		json.setValueForKey("peoplePickerInput", "[{\"Key\":\"" + this.sharePointUser().loginName() + "\",\"Description\":\"" + this.sharePointUser().email() + "\",\"DisplayText\":\"" + this.sharePointUser().title() + "\",\"EntityType\":\"User\",\"ProviderDisplayName\":\"Tenant\",\"ProviderName\":\"Tenant\",\"IsResolved\":true,\"EntityData\":{\"IsAltSecIdPresent\":\"False\",\"Title\":\"\",\"Email\":\"" + this.sharePointUser().email() + "\",\"MobilePhone\":\"\",\"ObjectId\":\"\",\"Department\":\"\"},\"MultipleMatches\":[]}]");
		json.setValueForKey("propagateAcl", false);
		json.setValueForKey("roleValue", "role:1073741827");
		json.setValueForKey("sendEmail", false);
		json.setValueForKey("useSimplifiedRoles", true);
		return json.convertToString();
	}
	/*<EndMethod Name="System.String Infragistics.SharePointShareObject::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SharePointShareObject::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.SharePointShareObject::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SharePointShareObject::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.SharePointRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.SharePointShareObject::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('SharePointShareObject', $.ig.SharePointRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointShareObject" />*/

/*<BeginType Name="Infragistics.SharePointGetSharingInformation" />*/

$.ig.util.defType('SharePointGetSharingInformation', 'SharePointRequestBase', {
	_pathIdentifier: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointGetSharingInformation::PathIdentifier()" />*/
	pathIdentifier: function (value) {
		if (arguments.length === 1) {
			this._pathIdentifier = value;
			return value;
		} else {
			return this._pathIdentifier;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointGetSharingInformation::PathIdentifier()" />*/
	,
	_sharePointUser: null,
	/*<BeginProperty Name="Infragistics.SharePointUser Infragistics.SharePointGetSharingInformation::SharePointUser()" />*/
	sharePointUser: function (value) {
		if (arguments.length === 1) {
			this._sharePointUser = value;
			return value;
		} else {
			return this._sharePointUser;
		}
	}
	/*<EndProperty Name="Infragistics.SharePointUser Infragistics.SharePointGetSharingInformation::SharePointUser()" />*/
	,
	init: function (pathIdentifier, token, success, error) {
		$.ig.SharePointRequestBase.prototype.init.call(this, 0, "SharePointGetShareObject", token, success, error);
		this.pathIdentifier(pathIdentifier);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointGetSharingInformation::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointGetSharingInformation::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.SharePointGetSharingInformation::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var header = new $.ig.Dictionary(0);
		header.item("Accept", "application/json");
		return header;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.SharePointGetSharingInformation::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointGetSharingInformation::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return $.ig.SharePointFile.prototype.getItemByIdUrl(this.pathIdentifier());
	}
	/*<EndMethod Name="System.String Infragistics.SharePointGetSharingInformation::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointGetSharingInformation::ResolveAction()" />*/
	resolveAction: function () {
		return "/GetSharingInformation?@a1=" + $.ig.SharePointFile.prototype.extractListId(this.pathIdentifier()) + "&@a2=" + $.ig.SharePointFile.prototype.extractListItemId(this.pathIdentifier()) + "&$Expand=permissionsInformation,pickerSettings";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointGetSharingInformation::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointGetSharingInformation::ResolvePostContent()" />*/
	resolvePostContent: function () {
		return "{}";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointGetSharingInformation::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.SharePointGetSharingInformation::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.SharePointGetSharingInformation::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	$type: new $.ig.Type('SharePointGetSharingInformation', $.ig.SharePointRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointGetSharingInformation" />*/

/*<BeginType Name="Infragistics.SharePointRemoveShareObject" />*/

$.ig.util.defType('SharePointRemoveShareObject', 'SharePointRequestBase', {
	_pathIdentifier: null,
	_loginName: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointRemoveShareObject::LoginName()" />*/
	loginName: function (value) {
		if (arguments.length === 1) {
			this._loginName = value;
			return value;
		} else {
			return this._loginName;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointRemoveShareObject::LoginName()" />*/
	,
	_role: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.SharePointRemoveShareObject::Role()" />*/
	role: function (value) {
		if (arguments.length === 1) {
			this._role = value;
			return value;
		} else {
			return this._role;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.SharePointRemoveShareObject::Role()" />*/
	,
	init: function (pathIdentifier, token, success, error) {
		$.ig.SharePointRequestBase.prototype.init.call(this, 0, "SharePointRemoveShareObject", token, success, error);
		this._pathIdentifier = pathIdentifier;
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointRemoveShareObject::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointRemoveShareObject::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.SharePointRemoveShareObject::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var header = new $.ig.Dictionary(0);
		header.item("Accept", "application/json;odata=verbose");
		header.item("Content-Type", "application/json;odata=verbose");
		return header;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.SharePointRemoveShareObject::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointRemoveShareObject::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return $.ig.SharePointFile.prototype.getItemByIdUrl(this._pathIdentifier);
	}
	/*<EndMethod Name="System.String Infragistics.SharePointRemoveShareObject::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointRemoveShareObject::ResolveAction()" />*/
	resolveAction: function () {
		return "/UpdateDocumentSharingInfo";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointRemoveShareObject::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointRemoveShareObject::ResolvePostContent()" />*/
	resolvePostContent: function () {
		return "{\"userRoleAssignments\":[{\"UserId\":\"" + this.loginName() + "\",\"Role\":0}],\"validateExistingPermissions\":false,\"additiveMode\":false,\"sendServerManagedNotification\":false,\"customMessage\":null,\"includeAnonymousLinksInNotification\":false,\"propagateAcl\":true}";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointRemoveShareObject::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.SharePointRemoveShareObject::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.sTRING;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.SharePointRemoveShareObject::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SharePointRemoveShareObject::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.SharePointRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.SharePointRemoveShareObject::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('SharePointRemoveShareObject', $.ig.SharePointRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointRemoveShareObject" />*/

/*<BeginType Name="Infragistics.SharePointRemoveShareLinkObject" />*/

$.ig.util.defType('SharePointRemoveShareLinkObject', 'SharePointRequestBase', {
	_pathIdentifier: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointRemoveShareLinkObject::PathIdentifier()" />*/
	pathIdentifier: function (value) {
		if (arguments.length === 1) {
			this._pathIdentifier = value;
			return value;
		} else {
			return this._pathIdentifier;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointRemoveShareLinkObject::PathIdentifier()" />*/
	,
	_linkKind: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.SharePointRemoveShareLinkObject::LinkKind()" />*/
	linkKind: function (value) {
		if (arguments.length === 1) {
			this._linkKind = value;
			return value;
		} else {
			return this._linkKind;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.SharePointRemoveShareLinkObject::LinkKind()" />*/
	,
	_role: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.SharePointRemoveShareLinkObject::Role()" />*/
	role: function (value) {
		if (arguments.length === 1) {
			this._role = value;
			return value;
		} else {
			return this._role;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.SharePointRemoveShareLinkObject::Role()" />*/
	,
	_shareId: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointRemoveShareLinkObject::ShareId()" />*/
	shareId: function (value) {
		if (arguments.length === 1) {
			this._shareId = value;
			return value;
		} else {
			return this._shareId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointRemoveShareLinkObject::ShareId()" />*/
	,
	_id: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.SharePointRemoveShareLinkObject::Id()" />*/
	id: function (value) {
		if (arguments.length === 1) {
			this._id = value;
			return value;
		} else {
			return this._id;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.SharePointRemoveShareLinkObject::Id()" />*/
	,
	_loginName: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointRemoveShareLinkObject::LoginName()" />*/
	loginName: function (value) {
		if (arguments.length === 1) {
			this._loginName = value;
			return value;
		} else {
			return this._loginName;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointRemoveShareLinkObject::LoginName()" />*/
	,
	_name: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointRemoveShareLinkObject::Name()" />*/
	name: function (value) {
		if (arguments.length === 1) {
			this._name = value;
			return value;
		} else {
			return this._name;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointRemoveShareLinkObject::Name()" />*/
	,
	_isExternal: false,
	/*<BeginProperty Name="System.Boolean Infragistics.SharePointRemoveShareLinkObject::IsExternal()" />*/
	isExternal: function (value) {
		if (arguments.length === 1) {
			this._isExternal = value;
			return value;
		} else {
			return this._isExternal;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.SharePointRemoveShareLinkObject::IsExternal()" />*/
	,
	_principalType: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.SharePointRemoveShareLinkObject::PrincipalType()" />*/
	principalType: function (value) {
		if (arguments.length === 1) {
			this._principalType = value;
			return value;
		} else {
			return this._principalType;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.SharePointRemoveShareLinkObject::PrincipalType()" />*/
	,
	_email: null,
	/*<BeginProperty Name="System.String Infragistics.SharePointRemoveShareLinkObject::Email()" />*/
	email: function (value) {
		if (arguments.length === 1) {
			this._email = value;
			return value;
		} else {
			return this._email;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SharePointRemoveShareLinkObject::Email()" />*/
	,
	init: function (pathIdentifier, token, success, error) {
		$.ig.SharePointRequestBase.prototype.init.call(this, 0, "SharePointRemoveShareObject", token, success, error);
		this.pathIdentifier(pathIdentifier);
	},
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointRemoveShareLinkObject::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return $.ig.SessionHTTPMethod.prototype.pOST;
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.SharePointRemoveShareLinkObject::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.SharePointRemoveShareLinkObject::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var header = new $.ig.Dictionary(0);
		header.item("Accept", "application/json;odata=verbose");
		header.item("Content-Type", "application/json;odata=verbose");
		return header;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.SharePointRemoveShareLinkObject::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointRemoveShareLinkObject::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return $.ig.SharePointFile.prototype.getItemByIdUrl(this.pathIdentifier());
	}
	/*<EndMethod Name="System.String Infragistics.SharePointRemoveShareLinkObject::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointRemoveShareLinkObject::ResolveAction()" />*/
	resolveAction: function () {
		return "/ShareLink?@a1=" + $.ig.SharePointFile.prototype.extractListId(this.pathIdentifier()) + "&@a2=" + $.ig.SharePointFile.prototype.extractListItemId(this.pathIdentifier());
	}
	/*<EndMethod Name="System.String Infragistics.SharePointRemoveShareLinkObject::ResolveAction()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.SharePointRemoveShareLinkObject::ResolvePostContent()" />*/
	resolvePostContent: function () {
		return "{\"request\":{\"createLink\":true,\"settings\":{\"linkKind\":\"" + this.linkKind() + "\",\"expiration\":null,\"role\":\"" + this.role() + "\",\"restrictShareMembership\":true,\"shareId\":\"" + this.shareId() + "\",\"inviteesToRemove\":{\"results\":[{\"id\":\"" + this.id() + "\",\"loginName\":\"" + this.loginName() + "\",\"name\":\"" + this.name() + "\",\"isExternal\":\"" + this.isExternal() + "\",\"principalType\":" + this.principalType() + ",\"email\":\"" + this.email() + "\"}]}},\"emailData\":{\"body\":\"\"}}}";
	}
	/*<EndMethod Name="System.String Infragistics.SharePointRemoveShareLinkObject::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.SharePointRemoveShareLinkObject::ResolveResponseType()" />*/
	resolveResponseType: function () {
		return $.ig.SessionResponseType.prototype.sTRING;
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.SharePointRemoveShareLinkObject::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SharePointRemoveShareLinkObject::Error(Infragistics.CloudError)" />*/
	error: function (message) {
		$.ig.SharePointRequestBase.prototype.error.call(this, message);
	}
	/*<EndMethod Name="System.Void Infragistics.SharePointRemoveShareLinkObject::Error(Infragistics.CloudError)" />*/
	,
	$type: new $.ig.Type('SharePointRemoveShareLinkObject', $.ig.SharePointRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SharePointRemoveShareLinkObject" />*/

/*<BeginType Name="Infragistics.SPPermissions" />*/

$.ig.util.defType('SPPermissions', 'CloudFilePermissions', {
	__high: 0,
	__low: 0,
	/*<BeginProperty Name="System.Boolean Infragistics.SPPermissions::Share()" />*/
	share: function () {
		return this.has($.ig.PermissionKind.prototype.managePermissions) || this.has($.ig.PermissionKind.prototype.editListItems);
	}
	/*<EndProperty Name="System.Boolean Infragistics.SPPermissions::Share()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SPPermissions::View()" />*/
	view: function () {
		return this.has($.ig.PermissionKind.prototype.viewListItems);
	}
	/*<EndProperty Name="System.Boolean Infragistics.SPPermissions::View()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SPPermissions::Edit()" />*/
	edit: function () {
		return this.has($.ig.PermissionKind.prototype.editListItems);
	}
	/*<EndProperty Name="System.Boolean Infragistics.SPPermissions::Edit()" />*/
	,
	init: function (high, low) {
		$.ig.CloudFilePermissions.prototype.init.call(this, 0);
		this.__high = high;
		this.__low = low;
	},
	/*<BeginMethod Name="System.Boolean Infragistics.SPPermissions::Has(Infragistics.PermissionKind)" />*/
	has: function (permission) {
		if (permission == $.ig.PermissionKind.prototype.emptyMask) {
			return true;
		}
		if (permission == $.ig.PermissionKind.prototype.fullMask) {
			return (this.__high & 32767) == 32767 && this.__low == 65535;
		}
		var p = permission;
		p = (p - 1);
		var r = 1;
		if (p >= 0 && p < 32) {
			r = r << p;
			return 0 != (this.__low & r);
		} else if (p >= 32 && p < 64) {
			r = r << p - 32;
			return 0 != (this.__high & r);
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.SPPermissions::Has(Infragistics.PermissionKind)" />*/
	,
	$type: new $.ig.Type('SPPermissions', $.ig.CloudFilePermissions.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SPPermissions" />*/

/*<BeginType Name="Infragistics.SPSharingInfoPermissions" />*/

$.ig.util.defType('SPSharingInfoPermissions', 'CloudFilePermissions', {
	__sharingInformation: null,
	__email: null,
	__userId: null,
	init: function (json, email, name, userId) {
		$.ig.CloudFilePermissions.prototype.init.call(this, 0);
		this.__sharingInformation = json;
		this.__email = email;
		this.__userId = userId;
		if (this.__sharingInformation != null) {
			var myRole = this.__sharingInformation.resolveIntegerForKey("currentRole");
			this.createMemberPermissions(myRole, email, name, userId, email, false, true);
			this.setMembers();
		}
	},
	/*<BeginMethod Name="System.Void Infragistics.SPSharingInfoPermissions::SetMembers()" />*/
	setMembers: function () {
		var principals = this.__sharingInformation.resolveListForKeyPath((function () {
			var $ret = new $.ig.Array();
			$ret.add("permissionsInformation");
			$ret.add("principals");
			return $ret;
		}()));
		for (var i = 0; i < principals.length; i++) {
			var permission = $.ig.CPJSONObject.prototype.createFromJSONObject(principals[i]);
			var email = permission.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("principal");
				$ret.add("email");
				return $ret;
			}()));
			var name = permission.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("principal");
				$ret.add("name");
				return $ret;
			}()));
			var id = permission.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("principal");
				$ret.add("userId");
				return $ret;
			}()));
			var loginName = permission.resolveStringForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("principal");
				$ret.add("loginName");
				return $ret;
			}()));
			var principalType = permission.resolveIntegerForKeyPath((function () {
				var $ret = new $.ig.Array();
				$ret.add("principal");
				$ret.add("principalType");
				return $ret;
			}()));
			var role = permission.resolveIntegerForKey("role");
			if (!$.ig.CPStringUtility.prototype.isNullOrEmpty(email) && !$.ig.CPStringUtility.prototype.isNullOrEmpty(loginName) && principalType == 1) {
				this.createMemberPermissions(role, email, name, id, loginName, false, true);
			}
		}
		var links = this.__sharingInformation.resolveListForKeyPath((function () {
			var $ret = new $.ig.Array();
			$ret.add("permissionsInformation");
			$ret.add("links");
			return $ret;
		}()));
		for (var i1 = 0; i1 < links.length; i1++) {
			var permission1 = $.ig.CPJSONObject.prototype.createFromJSONObject(links[i1]);
			var linkDetails = permission1.resolveJSONForKey("linkDetails");
			var invitations = linkDetails.resolveListForKey("Invitations");
			var isEditLink = linkDetails.resolveBoolForKey("IsEditLink");
			var url = linkDetails.resolveStringForKey("Url");
			var shareId = linkDetails.resolveStringForKey("ShareId");
			var linkKind = linkDetails.resolveIntegerForKey("LinkKind");
			for (var j = 0; j < invitations.length; j++) {
				var inviteeObj = $.ig.CPJSONObject.prototype.createFromJSONObject(invitations[j]);
				var invitee = inviteeObj.resolveJSONForKey("invitee");
				if (invitee != null && !$.ig.CPStringUtility.prototype.isNullOrEmpty(shareId)) {
					var email1 = invitee.resolveStringForKey("email");
					var name1 = invitee.resolveStringForKey("name");
					var loginName1 = invitee.resolveStringForKey("loginName");
					var id1 = invitee.resolveIntegerForKey("id");
					var principalType1 = invitee.resolveIntegerForKey("principalType");
					if (!$.ig.CPStringUtility.prototype.isNullOrEmpty(email1)) {
						if (isEditLink) {
							if ($.ig.CPStringUtility.prototype.isNullOrEmpty(this.__editAccessLink) && email1.toLowerCase().equals(this.__email.toLowerCase())) {
								this.__editAccessLink = url;
							}
							var permissions = this.createMemberPermissions(2, email1, name1, null, loginName1, true, false);
							if (permissions != null) {
								permissions.addExternalUserInfo(shareId, id1, linkKind, principalType1);
								this.setMemberPermissions(permissions);
							}
						} else {
							if ($.ig.CPStringUtility.prototype.isNullOrEmpty(this.__viewAccessLink) && email1.toLowerCase().equals(this.__email.toLowerCase())) {
								this.__viewAccessLink = url;
							}
							var permissions1 = this.createMemberPermissions(1, email1, name1, null, loginName1, true, false);
							if (permissions1 != null) {
								permissions1.addExternalUserInfo(shareId, id1, linkKind, principalType1);
								this.setMemberPermissions(permissions1);
							}
						}
					}
				}
			}
		}
		var uniquelyPermissionedUsers = this.__sharingInformation.resolveListForKey("UniquelyPermissionedUsers");
		for (var i2 = 0; i2 < uniquelyPermissionedUsers.length; i2++) {
			var user = $.ig.CPJSONObject.prototype.createFromJSONObject(uniquelyPermissionedUsers[i2]);
			var email2 = user.resolveStringForKey("Email");
			var name2 = user.resolveStringForKey("DisplayName");
			var id2 = user.resolveStringForKey("Id");
			this.createMemberPermissions(1, email2, name2, id2, email2, false, true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.SPSharingInfoPermissions::SetMembers()" />*/
	,
	/*<BeginMethod Name="Infragistics.SPCloudFileMemberPermissions Infragistics.SPSharingInfoPermissions::CreateMemberPermissions(System.Int32, System.String, System.String, System.String, System.String, System.Boolean, System.Boolean)" />*/
	createMemberPermissions: function (role, email, name, id, login, isExternal, update) {
		var permissions = null;
		if (role == 1) {
			permissions = new $.ig.SPCloudFileMemberPermissions(role, email, name, id, login, false, false, true, isExternal);
		} else if (role == 2) {
			permissions = new $.ig.SPCloudFileMemberPermissions(role, email, name, id, login, false, true, false, isExternal);
		} else if (role == 3) {
			permissions = new $.ig.SPCloudFileMemberPermissions(role, email, name, id, login, true, true, true, isExternal);
		}
		if (update && permissions != null) {
			this.setMemberPermissions(permissions);
		}
		return permissions;
	}
	/*<EndMethod Name="Infragistics.SPCloudFileMemberPermissions Infragistics.SPSharingInfoPermissions::CreateMemberPermissions(System.Int32, System.String, System.String, System.String, System.String, System.Boolean, System.Boolean)" />*/
	,
	__viewAccessLink: null,
	/*<BeginProperty Name="System.String Infragistics.SPSharingInfoPermissions::ViewAccessLink()" />*/
	viewAccessLink: function () {
		return this.__viewAccessLink;
	}
	/*<EndProperty Name="System.String Infragistics.SPSharingInfoPermissions::ViewAccessLink()" />*/
	,
	__editAccessLink: null,
	/*<BeginProperty Name="System.String Infragistics.SPSharingInfoPermissions::EditAccessLink()" />*/
	editAccessLink: function () {
		return this.__editAccessLink;
	}
	/*<EndProperty Name="System.String Infragistics.SPSharingInfoPermissions::EditAccessLink()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SPSharingInfoPermissions::Share()" />*/
	share: function () {
		return this.hasRole($.ig.PermissionKind.prototype.managePermissions) || this.hasRole($.ig.PermissionKind.prototype.editListItems);
	}
	/*<EndProperty Name="System.Boolean Infragistics.SPSharingInfoPermissions::Share()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SPSharingInfoPermissions::View()" />*/
	view: function () {
		return this.hasRole($.ig.PermissionKind.prototype.viewListItems);
	}
	/*<EndProperty Name="System.Boolean Infragistics.SPSharingInfoPermissions::View()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.SPSharingInfoPermissions::Edit()" />*/
	edit: function () {
		return this.hasRole($.ig.PermissionKind.prototype.editListItems);
	}
	/*<EndProperty Name="System.Boolean Infragistics.SPSharingInfoPermissions::Edit()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SPSharingInfoPermissions::HasRole(Infragistics.PermissionKind)" />*/
	hasRole: function (role) {
		var permissions = this.resolveMemberForEmail(this.__email);
		if (this.foundRoleForPermission(role, permissions)) {
			return true;
		}
		permissions = this.resolveMemberForUserId(this.__userId);
		return this.foundRoleForPermission(role, permissions);
	}
	/*<EndMethod Name="System.Boolean Infragistics.SPSharingInfoPermissions::HasRole(Infragistics.PermissionKind)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.SPSharingInfoPermissions::FoundRoleForPermission(Infragistics.PermissionKind, Infragistics.SPCloudFileMemberPermissions)" />*/
	foundRoleForPermission: function (role, permissions) {
		if (permissions != null) {
			if (role == $.ig.PermissionKind.prototype.managePermissions || role == $.ig.PermissionKind.prototype.editListItems) {
				return permissions.isOwner();
			} else if (role == $.ig.PermissionKind.prototype.viewListItems) {
				return permissions.isViewer();
			} else if (role == $.ig.PermissionKind.prototype.editListItems) {
				return permissions.isEditor();
			}
		}
		return false;
	}
	/*<EndMethod Name="System.Boolean Infragistics.SPSharingInfoPermissions::FoundRoleForPermission(Infragistics.PermissionKind, Infragistics.SPCloudFileMemberPermissions)" />*/
	,
	$type: new $.ig.Type('SPSharingInfoPermissions', $.ig.CloudFilePermissions.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SPSharingInfoPermissions" />*/

/*<BeginType Name="Infragistics.SPCloudFileMemberPermissions" />*/

$.ig.util.defType('SPCloudFileMemberPermissions', 'CloudFileMemberPermissions', {
	init: function (role, email, name, id, loginName, isOwner, isEditor, isViewer, isExternal) {
		$.ig.CloudFileMemberPermissions.prototype.init1.call(this, 1, email, name, id, loginName, isOwner, isEditor, isViewer, isExternal);
		this.role(role);
		this.loginName(loginName);
	},
	/*<BeginMethod Name="System.Void Infragistics.SPCloudFileMemberPermissions::AddExternalUserInfo(System.String, System.Int32, System.Int32, System.Int32)" />*/
	addExternalUserInfo: function (shareId, id, linkKind, principalType) {
		this.shareId(shareId);
		this.id(id);
		this.linkKind(linkKind);
		this.principalType(principalType);
	}
	/*<EndMethod Name="System.Void Infragistics.SPCloudFileMemberPermissions::AddExternalUserInfo(System.String, System.Int32, System.Int32, System.Int32)" />*/
	,
	_role: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.SPCloudFileMemberPermissions::Role()" />*/
	role: function (value) {
		if (arguments.length === 1) {
			this._role = value;
			return value;
		} else {
			return this._role;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.SPCloudFileMemberPermissions::Role()" />*/
	,
	_shareId: null,
	/*<BeginProperty Name="System.String Infragistics.SPCloudFileMemberPermissions::ShareId()" />*/
	shareId: function (value) {
		if (arguments.length === 1) {
			this._shareId = value;
			return value;
		} else {
			return this._shareId;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SPCloudFileMemberPermissions::ShareId()" />*/
	,
	_id: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.SPCloudFileMemberPermissions::Id()" />*/
	id: function (value) {
		if (arguments.length === 1) {
			this._id = value;
			return value;
		} else {
			return this._id;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.SPCloudFileMemberPermissions::Id()" />*/
	,
	_loginName: null,
	/*<BeginProperty Name="System.String Infragistics.SPCloudFileMemberPermissions::LoginName()" />*/
	loginName: function (value) {
		if (arguments.length === 1) {
			this._loginName = value;
			return value;
		} else {
			return this._loginName;
		}
	}
	/*<EndProperty Name="System.String Infragistics.SPCloudFileMemberPermissions::LoginName()" />*/
	,
	_linkKind: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.SPCloudFileMemberPermissions::LinkKind()" />*/
	linkKind: function (value) {
		if (arguments.length === 1) {
			this._linkKind = value;
			return value;
		} else {
			return this._linkKind;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.SPCloudFileMemberPermissions::LinkKind()" />*/
	,
	_principalType: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.SPCloudFileMemberPermissions::PrincipalType()" />*/
	principalType: function (value) {
		if (arguments.length === 1) {
			this._principalType = value;
			return value;
		} else {
			return this._principalType;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.SPCloudFileMemberPermissions::PrincipalType()" />*/
	,
	$type: new $.ig.Type('SPCloudFileMemberPermissions', $.ig.CloudFileMemberPermissions.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SPCloudFileMemberPermissions" />*/

/*<BeginType Name="Infragistics.GenericRequest" />*/

$.ig.util.defType('GenericRequest', 'OAuthRequestBase', {
	__isDownload: false,
	__preExecuteTaskHandle: null,
	init: function (initNumber, token, name, success, error, progress, downloaded, headersHandler) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		this.__isDownload = false;
		$.ig.OAuthRequestBase.prototype.init1.call(this, 1, name, token, success, error, progress, downloaded);
		this.__isDownload = downloaded != null;
		this.headersHandler(headersHandler);
		this.timeout($.ig.GenericRequest.prototype._defaultTimeout);
	},
	init1: function (initNumber, token, name, success, error) {
		$.ig.GenericRequest.prototype.init.call(this, 0, token, name, success, error, null, null, null);
	},
	_responseHeaders: null,
	/*<BeginProperty Name="Infragistics.CPDictionary Infragistics.GenericRequest::ResponseHeaders()" />*/
	responseHeaders: function (value) {
		if (arguments.length === 1) {
			this._responseHeaders = value;
			return value;
		} else {
			return this._responseHeaders;
		}
	}
	/*<EndProperty Name="Infragistics.CPDictionary Infragistics.GenericRequest::ResponseHeaders()" />*/
	,
	_responseStatusCode: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.GenericRequest::ResponseStatusCode()" />*/
	responseStatusCode: function (value) {
		if (arguments.length === 1) {
			this._responseStatusCode = value;
			return value;
		} else {
			return this._responseStatusCode;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.GenericRequest::ResponseStatusCode()" />*/
	,
	_credentials: null,
	/*<BeginProperty Name="Infragistics.RQCredentials Infragistics.GenericRequest::Credentials()" />*/
	credentials: function (value) {
		if (arguments.length === 1) {
			this._credentials = value;
			return value;
		} else {
			return this._credentials;
		}
	}
	/*<EndProperty Name="Infragistics.RQCredentials Infragistics.GenericRequest::Credentials()" />*/
	,
	_oAuthProvider: null,
	/*<BeginProperty Name="Infragistics.OAuthProvider Infragistics.GenericRequest::OAuthProvider()" />*/
	oAuthProvider: function (value) {
		if (arguments.length === 1) {
			this._oAuthProvider = value;
			return value;
		} else {
			return this._oAuthProvider;
		}
	}
	/*<EndProperty Name="Infragistics.OAuthProvider Infragistics.GenericRequest::OAuthProvider()" />*/
	,
	_headersHandler: null,
	/*<BeginProperty Name="Infragistics.ProcessHeadersBlock Infragistics.GenericRequest::HeadersHandler()" />*/
	headersHandler: function (value) {
		if (arguments.length === 1) {
			this._headersHandler = value;
			return value;
		} else {
			return this._headersHandler;
		}
	}
	/*<EndProperty Name="Infragistics.ProcessHeadersBlock Infragistics.GenericRequest::HeadersHandler()" />*/
	,
	_baseURL: null,
	/*<BeginProperty Name="System.String Infragistics.GenericRequest::BaseURL()" />*/
	baseURL: function (value) {
		if (arguments.length === 1) {
			this._baseURL = value;
			return value;
		} else {
			return this._baseURL;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GenericRequest::BaseURL()" />*/
	,
	_action: null,
	/*<BeginProperty Name="System.String Infragistics.GenericRequest::Action()" />*/
	action: function (value) {
		if (arguments.length === 1) {
			this._action = value;
			return value;
		} else {
			return this._action;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GenericRequest::Action()" />*/
	,
	_params: null,
	/*<BeginProperty Name="Infragistics.CPDictionary Infragistics.GenericRequest::Params()" />*/
	params: function (value) {
		if (arguments.length === 1) {
			this._params = value;
			return value;
		} else {
			return this._params;
		}
	}
	/*<EndProperty Name="Infragistics.CPDictionary Infragistics.GenericRequest::Params()" />*/
	,
	_method: 0,
	/*<BeginProperty Name="Infragistics.SessionHTTPMethod Infragistics.GenericRequest::Method()" />*/
	method: function (value) {
		if (arguments.length === 1) {
			this._method = value;
			return value;
		} else {
			return this._method;
		}
	}
	/*<EndProperty Name="Infragistics.SessionHTTPMethod Infragistics.GenericRequest::Method()" />*/
	,
	_contentType: null,
	/*<BeginProperty Name="System.String Infragistics.GenericRequest::ContentType()" />*/
	contentType: function (value) {
		if (arguments.length === 1) {
			this._contentType = value;
			return value;
		} else {
			return this._contentType;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GenericRequest::ContentType()" />*/
	,
	_accept: null,
	/*<BeginProperty Name="System.String Infragistics.GenericRequest::Accept()" />*/
	accept: function (value) {
		if (arguments.length === 1) {
			this._accept = value;
			return value;
		} else {
			return this._accept;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GenericRequest::Accept()" />*/
	,
	_timeout: 0,
	/*<BeginProperty Name="System.Int32 Infragistics.GenericRequest::Timeout()" />*/
	timeout: function (value) {
		if (arguments.length === 1) {
			this._timeout = value;
			return value;
		} else {
			return this._timeout;
		}
	}
	/*<EndProperty Name="System.Int32 Infragistics.GenericRequest::Timeout()" />*/
	,
	_cookieStorageMode: 0,
	/*<BeginProperty Name="Infragistics.CookieStorageMode Infragistics.GenericRequest::CookieStorageMode()" />*/
	cookieStorageMode: function (value) {
		if (arguments.length === 1) {
			this._cookieStorageMode = value;
			return value;
		} else {
			return this._cookieStorageMode;
		}
	}
	/*<EndProperty Name="Infragistics.CookieStorageMode Infragistics.GenericRequest::CookieStorageMode()" />*/
	,
	_forceSessionContentTypeToNone: false,
	/*<BeginProperty Name="System.Boolean Infragistics.GenericRequest::ForceSessionContentTypeToNone()" />*/
	forceSessionContentTypeToNone: function (value) {
		if (arguments.length === 1) {
			this._forceSessionContentTypeToNone = value;
			return value;
		} else {
			return this._forceSessionContentTypeToNone;
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.GenericRequest::ForceSessionContentTypeToNone()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GenericRequest::ResolveBaseURL()" />*/
	resolveBaseURL: function () {
		return this.baseURL();
	}
	/*<EndMethod Name="System.String Infragistics.GenericRequest::ResolveBaseURL()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GenericRequest::ResolveAction()" />*/
	resolveAction: function () {
		return this.action();
	}
	/*<EndMethod Name="System.String Infragistics.GenericRequest::ResolveAction()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GenericRequest::ResolveParams()" />*/
	resolveParams: function () {
		return this.params();
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GenericRequest::ResolveParams()" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.GenericRequest::URLEncodeParams()" />*/
	uRLEncodeParams: function () {
		return true;
	}
	/*<EndMethod Name="System.Boolean Infragistics.GenericRequest::URLEncodeParams()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionHTTPMethod Infragistics.GenericRequest::ResolveHTTPMethod()" />*/
	resolveHTTPMethod: function () {
		return this.method();
	}
	/*<EndMethod Name="Infragistics.SessionHTTPMethod Infragistics.GenericRequest::ResolveHTTPMethod()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GenericRequest::ResolveChallengeUsername()" />*/
	resolveChallengeUsername: function () {
		return this.credentials() != null ? this.credentials().username() : $.ig.OAuthRequestBase.prototype.resolveChallengeUsername.call(this);
	}
	/*<EndMethod Name="System.String Infragistics.GenericRequest::ResolveChallengeUsername()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GenericRequest::ResolveChallengePassword()" />*/
	resolveChallengePassword: function () {
		return this.credentials() != null ? this.credentials().password() : $.ig.OAuthRequestBase.prototype.resolveChallengePassword.call(this);
	}
	/*<EndMethod Name="System.String Infragistics.GenericRequest::ResolveChallengePassword()" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GenericRequest::ResolveChallengeDomain()" />*/
	resolveChallengeDomain: function () {
		return this.credentials() != null ? this.credentials().domain() : $.ig.OAuthRequestBase.prototype.resolveChallengeDomain.call(this);
	}
	/*<EndMethod Name="System.String Infragistics.GenericRequest::ResolveChallengeDomain()" />*/
	,
	/*<BeginMethod Name="System.Int32 Infragistics.GenericRequest::ResolveTimeout()" />*/
	resolveTimeout: function () {
		return this.timeout();
	}
	/*<EndMethod Name="System.Int32 Infragistics.GenericRequest::ResolveTimeout()" />*/
	,
	/*<BeginMethod Name="Infragistics.CookieStorageMode Infragistics.GenericRequest::ResolveCookieStorageMode()" />*/
	resolveCookieStorageMode: function () {
		return this.cookieStorageMode();
	}
	/*<EndMethod Name="Infragistics.CookieStorageMode Infragistics.GenericRequest::ResolveCookieStorageMode()" />*/
	,
	_additionalRequestHeaders: null,
	/*<BeginProperty Name="Infragistics.CPDictionary Infragistics.GenericRequest::AdditionalRequestHeaders()" />*/
	additionalRequestHeaders: function (value) {
		if (arguments.length === 1) {
			this._additionalRequestHeaders = value;
			return value;
		} else {
			return this._additionalRequestHeaders;
		}
	}
	/*<EndProperty Name="Infragistics.CPDictionary Infragistics.GenericRequest::AdditionalRequestHeaders()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GenericRequest::AddHeader(System.String, System.String)" />*/
	addHeader: function (name, value) {
		if (this.additionalRequestHeaders() == null) {
			this.additionalRequestHeaders(new $.ig.Dictionary(0));
		}
		this.additionalRequestHeaders().item(name, value);
	}
	/*<EndMethod Name="System.Void Infragistics.GenericRequest::AddHeader(System.String, System.String)" />*/
	,
	_body: null,
	/*<BeginProperty Name="System.String Infragistics.GenericRequest::Body()" />*/
	body: function (value) {
		if (arguments.length === 1) {
			this._body = value;
			return value;
		} else {
			return this._body;
		}
	}
	/*<EndProperty Name="System.String Infragistics.GenericRequest::Body()" />*/
	,
	_bodyData: null,
	/*<BeginProperty Name="System.Array Infragistics.GenericRequest::BodyData()" />*/
	bodyData: function (value) {
		if (arguments.length === 1) {
			this._bodyData = value;
			return value;
		} else {
			return this._bodyData;
		}
	}
	/*<EndProperty Name="System.Array Infragistics.GenericRequest::BodyData()" />*/
	,
	_preExecuteBlock: null,
	/*<BeginProperty Name="Infragistics.RequestPreExecuteBlock Infragistics.GenericRequest::PreExecuteBlock()" />*/
	preExecuteBlock: function (value) {
		if (arguments.length === 1) {
			this._preExecuteBlock = value;
			return value;
		} else {
			return this._preExecuteBlock;
		}
	}
	/*<EndProperty Name="Infragistics.RequestPreExecuteBlock Infragistics.GenericRequest::PreExecuteBlock()" />*/
	,
	_jsonPushEventHandler: null,
	/*<BeginProperty Name="Infragistics.JsonPushEventHandler Infragistics.GenericRequest::JsonPushEventHandler()" />*/
	jsonPushEventHandler: function (value) {
		if (arguments.length === 1) {
			this._jsonPushEventHandler = value;
			return value;
		} else {
			return this._jsonPushEventHandler;
		}
	}
	/*<EndProperty Name="Infragistics.JsonPushEventHandler Infragistics.GenericRequest::JsonPushEventHandler()" />*/
	,
	_responseType: 0,
	/*<BeginProperty Name="Infragistics.SessionResponseType Infragistics.GenericRequest::ResponseType()" />*/
	responseType: function (value) {
		if (arguments.length === 1) {
			this._responseType = value;
			return value;
		} else {
			return this._responseType;
		}
	}
	/*<EndProperty Name="Infragistics.SessionResponseType Infragistics.GenericRequest::ResponseType()" />*/
	,
	_processResponseStreamBlock: null,
	/*<BeginProperty Name="Infragistics.ProcessResponseStreamBlock Infragistics.GenericRequest::ProcessResponseStreamBlock()" />*/
	processResponseStreamBlock: function (value) {
		if (arguments.length === 1) {
			this._processResponseStreamBlock = value;
			return value;
		} else {
			return this._processResponseStreamBlock;
		}
	}
	/*<EndProperty Name="Infragistics.ProcessResponseStreamBlock Infragistics.GenericRequest::ProcessResponseStreamBlock()" />*/
	,
	/*<BeginMethod Name="Infragistics.CPDictionary Infragistics.GenericRequest::ResolveAdditionalHeaderFields()" />*/
	resolveAdditionalHeaderFields: function () {
		var hs = new $.ig.Dictionary(0);
		if (this.accept() != null) {
			hs.item("Accept", this.accept());
		}
		if (this.contentType() != null) {
			hs.item("Content-Type", this.contentType());
		}
		if (this.additionalRequestHeaders() != null) {
			hs.addAll(this.additionalRequestHeaders());
		}
		return hs.count() > 0 ? hs : null;
	}
	/*<EndMethod Name="Infragistics.CPDictionary Infragistics.GenericRequest::ResolveAdditionalHeaderFields()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionResponseType Infragistics.GenericRequest::ResolveResponseType()" />*/
	resolveResponseType: function () {
		if (this.jsonPushEventHandler() != null) {
			return $.ig.SessionResponseType.prototype.jSON_STREAMING;
		} else if (this.processResponseStreamBlock() != null) {
			return $.ig.SessionResponseType.prototype.sTREAM;
		} else {
			return this.responseType();
		}
	}
	/*<EndMethod Name="Infragistics.SessionResponseType Infragistics.GenericRequest::ResolveResponseType()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GenericRequest::ReceivedResponse(System.Int32, Infragistics.CPDictionary)" />*/
	receivedResponse: function (statusCode, headers) {
		this.responseStatusCode(statusCode);
		this.responseHeaders(headers != null ? $.ig.NativeDictionaryUtility.prototype.copyDictionary(headers) : null);
	}
	/*<EndMethod Name="System.Void Infragistics.GenericRequest::ReceivedResponse(System.Int32, Infragistics.CPDictionary)" />*/
	,
	/*<BeginMethod Name="System.Boolean Infragistics.GenericRequest::ProcessHeaders(System.Int32, Infragistics.CPDictionary)" />*/
	processHeaders: function (statusCode, response) {
		if (this.headersHandler() != null) {
			return this.headersHandler()(statusCode, response);
		}
		return $.ig.OAuthRequestBase.prototype.processHeaders.call(this, statusCode, response);
	}
	/*<EndMethod Name="System.Boolean Infragistics.GenericRequest::ProcessHeaders(System.Int32, Infragistics.CPDictionary)" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionContentType Infragistics.GenericRequest::ResolveContentType()" />*/
	resolveContentType: function () {
		if (this.forceSessionContentTypeToNone()) {
			return $.ig.SessionContentType.prototype.none;
		}
		return $.ig.OAuthRequestBase.prototype.resolveContentType.call(this);
	}
	/*<EndMethod Name="Infragistics.SessionContentType Infragistics.GenericRequest::ResolveContentType()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GenericRequest::ProcessResponseStream(System.Object, Infragistics.ExecutionBlock)" />*/
	processResponseStream: function (stream, block) {
		this.processResponseStreamBlock()(this, stream, block);
	}
	/*<EndMethod Name="System.Void Infragistics.GenericRequest::ProcessResponseStream(System.Object, Infragistics.ExecutionBlock)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GenericRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	processJSONResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.GenericRequest::ProcessJSONResponse(Infragistics.CPJSONObject)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GenericRequest::ProcessStringResponse(System.String)" />*/
	processStringResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.GenericRequest::ProcessStringResponse(System.String)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GenericRequest::ProcessDataResponse(System.Array)" />*/
	processDataResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.GenericRequest::ProcessDataResponse(System.Array)" />*/
	,
	/*<BeginMethod Name="System.Object Infragistics.GenericRequest::ProcessXMLResponse(Infragistics.NativeXmlProxy)" />*/
	processXMLResponse: function (response) {
		return response;
	}
	/*<EndMethod Name="System.Object Infragistics.GenericRequest::ProcessXMLResponse(Infragistics.NativeXmlProxy)" />*/
	,
	/*<BeginMethod Name="Infragistics.JsonPushEventHandler Infragistics.GenericRequest::ResolveJsonPushEventHandler()" />*/
	resolveJsonPushEventHandler: function () {
		return this.jsonPushEventHandler();
	}
	/*<EndMethod Name="Infragistics.JsonPushEventHandler Infragistics.GenericRequest::ResolveJsonPushEventHandler()" />*/
	,
	/*<BeginMethod Name="Infragistics.SessionTaskType Infragistics.GenericRequest::ResolveTaskType()" />*/
	resolveTaskType: function () {
		if (this.__isDownload) {
			return $.ig.SessionTaskType.prototype.download;
		} else {
			return $.ig.OAuthRequestBase.prototype.resolveTaskType.call(this);
		}
	}
	/*<EndMethod Name="Infragistics.SessionTaskType Infragistics.GenericRequest::ResolveTaskType()" />*/
	,
	/*<BeginMethod Name="Infragistics.OAuthProvider Infragistics.GenericRequest::ResolveProvider(Infragistics.TokenState)" />*/
	resolveProvider: function (token) {
		return this.oAuthProvider();
	}
	/*<EndMethod Name="Infragistics.OAuthProvider Infragistics.GenericRequest::ResolveProvider(Infragistics.TokenState)" />*/
	,
	/*<BeginMethod Name="System.String Infragistics.GenericRequest::ResolvePostContent()" />*/
	resolvePostContent: function () {
		return this.body();
	}
	/*<EndMethod Name="System.String Infragistics.GenericRequest::ResolvePostContent()" />*/
	,
	/*<BeginMethod Name="System.Array Infragistics.GenericRequest::ResolvePostContentData()" />*/
	resolvePostContentData: function () {
		return this.bodyData();
	}
	/*<EndMethod Name="System.Array Infragistics.GenericRequest::ResolvePostContentData()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GenericRequest::Execute()" />*/
	execute: function () {
		var $self = this;
		if (this.preExecuteBlock() != null) {
			this.__preExecuteTaskHandle = this.preExecuteBlock()(this, function () {
				$self.baseExecute();
			});
		} else {
			$.ig.OAuthRequestBase.prototype.execute.call(this);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.GenericRequest::Execute()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GenericRequest::BaseExecute()" />*/
	baseExecute: function () {
		$.ig.OAuthRequestBase.prototype.execute.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.GenericRequest::BaseExecute()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.GenericRequest::Cancel()" />*/
	cancel: function () {
		if (this.__preExecuteTaskHandle != null) {
			this.__preExecuteTaskHandle.cancel();
		}
		$.ig.OAuthRequestBase.prototype.cancel.call(this);
	}
	/*<EndMethod Name="System.Void Infragistics.GenericRequest::Cancel()" />*/
	,
	$type: new $.ig.Type('GenericRequest', $.ig.OAuthRequestBase.prototype.$type)
}, true);

/*<EndType Name="Infragistics.GenericRequest" />*/

/*<BeginType Name="Infragistics.HttpRequestBuilder" />*/

$.ig.util.defType('HttpRequestBuilder', 'Object', {
	__oauthProvider: null,
	__tokenState: null,
	__url: null,
	__urlAppend: null,
	__urlParameters: null,
	__method: 0,
	__contentType: null,
	__accept: null,
	__body: null,
	__bodyData: null,
	__formValues: null,
	__timeout: 0,
	__errorHandler: null,
	__progressFileHandler: null,
	__fileDownloadedHandler: null,
	__successHandler: null,
	__credentials: null,
	__additionalHeaders: null,
	__chainedSuccessHandlers: null,
	__preExecuteBlock: null,
	__requestSuccessBlock: null,
	__requestErrorBlock: null,
	__requestErrorInterceptorBlock: null,
	__jsonPushEventHandler: null,
	__responseType: 0,
	__disableCallbacksOnMainThread: false,
	__headersHandler: null,
	__cookieStorageMode: 0,
	__processResponseStreamBlock: null,
	__maxDownloadSize: $.ig.util.toNullable($.ig.Number.prototype.$type, null),
	__postBuildBlock: null,
	__retainRequest: false,
	init: function (initNumber, oauthProvider, tokenState) {
		if (initNumber > 0) {
			switch (initNumber) {
				case 1:
					this.init1.apply(this, arguments);
					break;
			}
			return;
		}
		$.ig.HttpRequestBuilder.prototype.init1.call(this, 1);
		this.__oauthProvider = oauthProvider;
		this.__tokenState = tokenState;
	},
	init1: function (initNumber) {
		this.__cookieStorageMode = $.ig.CookieStorageMode.prototype.undefined;
		this.__retainRequest = true;
		$.ig.Object.prototype.init.call(this);
		this.__timeout = $.ig.SessionRequestBase.prototype.dEFAULT_TIMEOUT;
		this.__responseType = $.ig.SessionResponseType.prototype.jSON;
		this.__method = $.ig.SessionHTTPMethod.prototype.gET;
	},
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::Create(Infragistics.OAuthProvider, Infragistics.TokenState)" />*/
	create1: function (oauthProvider, tokenState) {
		return new $.ig.HttpRequestBuilder(0, oauthProvider, tokenState);
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::Create(Infragistics.OAuthProvider, Infragistics.TokenState)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::Create()" />*/
	create: function () {
		return new $.ig.HttpRequestBuilder(1);
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::Create()" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetHttpMethod(Infragistics.SessionHTTPMethod)" />*/
	setHttpMethod: function (method) {
		this.__method = method;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetHttpMethod(Infragistics.SessionHTTPMethod)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetURL(System.String)" />*/
	setURL: function (url) {
		this.__url = url;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetURL(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::AppendStringToURL(System.String)" />*/
	appendStringToURL: function (urlAppend) {
		if (urlAppend == null) {
			return this;
		}
		if (this.__urlAppend == null) {
			this.__urlAppend = "";
		}
		this.__urlAppend = this.__urlAppend + urlAppend;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::AppendStringToURL(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetQueryParametersToURL(Infragistics.CPDictionary)" />*/
	setQueryParametersToURL: function (parameters) {
		this.__urlParameters = parameters;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetQueryParametersToURL(Infragistics.CPDictionary)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetCredentials(Infragistics.RQCredentials)" />*/
	setCredentials: function (credentials) {
		this.__credentials = credentials;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetCredentials(Infragistics.RQCredentials)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetContentType(System.String)" />*/
	setContentType: function (contentType) {
		this.__contentType = contentType;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetContentType(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetAccept(System.String)" />*/
	setAccept: function (accept) {
		this.__accept = accept;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetAccept(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetResponseType(Infragistics.SessionResponseType)" />*/
	setResponseType: function (responseType) {
		this.__responseType = responseType;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetResponseType(Infragistics.SessionResponseType)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::AddHeader(System.String, System.String)" />*/
	addHeader: function (key, value) {
		if (this.__additionalHeaders == null) {
			this.__additionalHeaders = new $.ig.Dictionary(0);
		}
		this.__additionalHeaders.item(key, value);
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::AddHeader(System.String, System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetBody(System.String)" />*/
	setBody: function (body) {
		this.__body = body;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetBody(System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetBodyData(System.Array)" />*/
	setBodyData: function (data) {
		this.__bodyData = data;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetBodyData(System.Array)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::AddFormAttribute(System.String, System.String)" />*/
	addFormAttribute: function (name, value) {
		if (value == null) {
			return this;
		}
		if (this.__formValues == null) {
			this.__formValues = new $.ig.Dictionary(0);
		}
		this.__formValues.item(name, value);
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::AddFormAttribute(System.String, System.String)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetTimeout(System.Int32)" />*/
	setTimeout: function (timeout) {
		this.__timeout = timeout;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetTimeout(System.Int32)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetCookieStorageMode(Infragistics.CookieStorageMode)" />*/
	setCookieStorageMode: function (mode) {
		this.__cookieStorageMode = mode;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetCookieStorageMode(Infragistics.CookieStorageMode)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetMaxDownloadSize(System.Nullable)" />*/
	setMaxDownloadSize: function (maxDownloadSize) {
		this.__maxDownloadSize = maxDownloadSize;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetMaxDownloadSize(System.Nullable)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetErrorHandler(Infragistics.CloudErrorBlock)" />*/
	setErrorHandler: function (errorHandler) {
		this.__errorHandler = errorHandler;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetErrorHandler(Infragistics.CloudErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetProgressHandler(Infragistics.ProgressFileBlock)" />*/
	setProgressHandler: function (handler) {
		this.__progressFileHandler = handler;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetProgressHandler(Infragistics.ProgressFileBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetFileDownloadedHandler(Infragistics.FileDownloadedBlock)" />*/
	setFileDownloadedHandler: function (handler) {
		this.__fileDownloadedHandler = handler;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetFileDownloadedHandler(Infragistics.FileDownloadedBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetSuccessHandler(Infragistics.ObjectBlock)" />*/
	setSuccessHandler: function (handler) {
		this.__successHandler = handler;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetSuccessHandler(Infragistics.ObjectBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetRequestSuccessBlock(Infragistics.RequestSuccessBlock)" />*/
	setRequestSuccessBlock: function (block) {
		this.__requestSuccessBlock = block;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetRequestSuccessBlock(Infragistics.RequestSuccessBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetRequestErrorInterceptorBlock(Infragistics.RequestErrorInterceptorBlock)" />*/
	setRequestErrorInterceptorBlock: function (block) {
		this.__requestErrorInterceptorBlock = block;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetRequestErrorInterceptorBlock(Infragistics.RequestErrorInterceptorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetRequestErrorBlock(Infragistics.RequestErrorBlock)" />*/
	setRequestErrorBlock: function (block) {
		this.__requestErrorBlock = block;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetRequestErrorBlock(Infragistics.RequestErrorBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::ChainSuccessHandler(Infragistics.ProcessObjectBlock)" />*/
	chainSuccessHandler: function (handler) {
		if (this.__chainedSuccessHandlers == null) {
			this.__chainedSuccessHandlers = new $.ig.Array();
		}
		this.__chainedSuccessHandlers.add(handler);
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::ChainSuccessHandler(Infragistics.ProcessObjectBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetPreExecuteBlock(Infragistics.RequestPreExecuteBlock)" />*/
	setPreExecuteBlock: function (block) {
		this.__preExecuteBlock = block;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetPreExecuteBlock(Infragistics.RequestPreExecuteBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::DisableCallbacksOnMainThread()" />*/
	disableCallbacksOnMainThread: function () {
		this.__disableCallbacksOnMainThread = true;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::DisableCallbacksOnMainThread()" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetHeadersHandler(Infragistics.ProcessHeadersBlock)" />*/
	setHeadersHandler: function (headersHandler) {
		this.__headersHandler = headersHandler;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetHeadersHandler(Infragistics.ProcessHeadersBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetPostBuildBlock(Infragistics.ObjectBlock)" />*/
	setPostBuildBlock: function (postBuildBlock) {
		this.__postBuildBlock = postBuildBlock;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetPostBuildBlock(Infragistics.ObjectBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetRetainRequest(System.Boolean)" />*/
	setRetainRequest: function (v) {
		this.__retainRequest = v;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::SetRetainRequest(System.Boolean)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.HttpRequestBuilder::Build()" />*/
	build: function () {
		var requestProgressHandler = null;
		if (this.__progressFileHandler != null) {
			var progressFileHandler = this.__progressFileHandler;
			requestProgressHandler = function (r, b, t) {
				progressFileHandler(b, t);
			};
		}
		var requestFileDownloadedHandler = null;
		if (this.__fileDownloadedHandler != null) {
			var fileDownloadedHandler = this.__fileDownloadedHandler;
			requestFileDownloadedHandler = function (r, path) {
				fileDownloadedHandler(path);
			};
		}
		var requestSuccessHandler = this.__requestSuccessBlock;
		if (this.__successHandler != null) {
			var successHandler = this.__successHandler;
			requestSuccessHandler = function (r, o) {
				successHandler(o);
			};
		}
		if (this.__chainedSuccessHandlers != null) {
			var chainedSuccessHandlers = this.__chainedSuccessHandlers;
			requestSuccessHandler = function (r, o) {
				var currentO = o;
				var i = 0;
				var max = chainedSuccessHandlers.length;
				while (i < max) {
					var h = chainedSuccessHandlers[i];
					currentO = h(currentO);
					i++;
				}
			};
		}
		var requestErrorHandler = this.__requestErrorBlock;
		if (this.__errorHandler != null) {
			var errorHandler = this.__errorHandler;
			requestErrorHandler = function (r, e) {
				errorHandler(e);
			};
		}
		if (this.__requestErrorInterceptorBlock != null) {
			var requestErrorInterceptorBlock = this.__requestErrorInterceptorBlock;
			var originalErrorHandler = requestErrorHandler;
			requestErrorHandler = function (r, e) {
				var shouldInvokeCallback = requestErrorInterceptorBlock(r, e);
				if (shouldInvokeCallback && originalErrorHandler != null) {
					originalErrorHandler(r, e);
				}
			};
		}
		var body = this.__body;
		if (this.__formValues != null) {
			body = $.ig.RQHTTPUtils.prototype.buildQueryString(this.__formValues, true);
		}
		var request;
		var retainingSuccessBlock = null;
		var retainingErrorBlock = null;
		request = new $.ig.GenericRequest(0, this.__tokenState, null, retainingSuccessBlock != null ? retainingSuccessBlock : requestSuccessHandler, retainingErrorBlock != null ? retainingErrorBlock : requestErrorHandler, requestProgressHandler, requestFileDownloadedHandler, this.__headersHandler);
		request.oAuthProvider(this.__oauthProvider);
		request.baseURL(this.__url);
		request.params(this.__urlParameters);
		request.action(this.__urlAppend);
		request.method(this.__method);
		request.contentType(this.__contentType);
		request.accept(this.__accept);
		request.body(body);
		request.bodyData(this.__bodyData);
		request.timeout(this.__timeout);
		request.credentials(this.__credentials);
		request.additionalRequestHeaders(this.__additionalHeaders);
		request.preExecuteBlock(this.__preExecuteBlock);
		request.jsonPushEventHandler(this.__jsonPushEventHandler);
		request.responseType(this.__responseType);
		request.cookieStorageMode(this.__cookieStorageMode);
		request.maxDownloadSize(this.__maxDownloadSize);
		request.processResponseStreamBlock(this.__processResponseStreamBlock);
		if (this.__method == $.ig.SessionHTTPMethod.prototype.gET) {
			request.forceSessionContentTypeToNone(true);
		}
		if (this.__disableCallbacksOnMainThread) {
			request.executeCallbacksOnMainThread(false);
		}
		if (this.__postBuildBlock != null) {
			this.__postBuildBlock(request);
		}
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.HttpRequestBuilder::Build()" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::ProcessResponseStream(Infragistics.ProcessResponseStreamBlock)" />*/
	processResponseStream: function (block) {
		this.__processResponseStreamBlock = block;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::ProcessResponseStream(Infragistics.ProcessResponseStreamBlock)" />*/
	,
	/*<BeginMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::ExpectJSONAndStreamParse(Infragistics.JsonPushEventHandler)" />*/
	expectJSONAndStreamParse: function (jsonPushEventHandler) {
		this.__jsonPushEventHandler = jsonPushEventHandler;
		return this;
	}
	/*<EndMethod Name="Infragistics.HttpRequestBuilder Infragistics.HttpRequestBuilder::ExpectJSONAndStreamParse(Infragistics.JsonPushEventHandler)" />*/
	,
	/*<BeginMethod Name="Infragistics.Request Infragistics.HttpRequestBuilder::BuildAndExecute()" />*/
	buildAndExecute: function () {
		var request = this.build();
		request.execute();
		return request;
	}
	/*<EndMethod Name="Infragistics.Request Infragistics.HttpRequestBuilder::BuildAndExecute()" />*/
	,
	$type: new $.ig.Type('HttpRequestBuilder', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.HttpRequestBuilder" />*/

/*<BeginType Name="Infragistics.JsonPushEventHandler" />*/

$.ig.util.defType('JsonPushEventHandler', 'Object', {
	$type: new $.ig.Type('JsonPushEventHandler', null)
}, true);

/*<EndType Name="Infragistics.JsonPushEventHandler" />*/

/*<BeginType Name="Infragistics.PendingRequestsManager" />*/

$.ig.util.defType('PendingRequestsManager', 'Object', {
	_requests: null,
	/*<BeginMethod Name="Infragistics.PendingRequestsManager Infragistics.PendingRequestsManager::Instance()" />*/
	instance: function () {
		if ($.ig.PendingRequestsManager.prototype.__instance == null) {
			$.ig.PendingRequestsManager.prototype.__instance = new $.ig.PendingRequestsManager();
		}
		return $.ig.PendingRequestsManager.prototype.__instance;
	}
	/*<EndMethod Name="Infragistics.PendingRequestsManager Infragistics.PendingRequestsManager::Instance()" />*/
	,
	init: function () {
		$.ig.Object.prototype.init.call(this);
		this._requests = new $.ig.Dictionary(0);
	},
	/*<BeginMethod Name="System.Void Infragistics.PendingRequestsManager::AddPendingRequest(System.String, Infragistics.IRequest)" />*/
	addPendingRequest: function (trackingId, request) {
		var requestsForId;
		requestsForId = $.ig.NativeDictionaryUtility.prototype.containsKey(this._requests, trackingId) ? this._requests.item(trackingId) : null;
		if (requestsForId == null) {
			requestsForId = new $.ig.Array();
			this._requests.item(trackingId, requestsForId);
		}
		requestsForId.add(request);
	}
	/*<EndMethod Name="System.Void Infragistics.PendingRequestsManager::AddPendingRequest(System.String, Infragistics.IRequest)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.PendingRequestsManager::ExecuteAllRequests(System.String)" />*/
	executeAllRequests: function (trackingId) {
		var requestsForId;
		if ($.ig.NativeDictionaryUtility.prototype.containsKey(this._requests, trackingId)) {
			requestsForId = this._requests.item(trackingId);
			this._requests.remove(trackingId);
		} else {
			requestsForId = null;
		}
		if (requestsForId == null) {
			return;
		}
		var count = requestsForId.length;
		for (var i = 0; i < count; i++) {
			(requestsForId[i]).execute();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.PendingRequestsManager::ExecuteAllRequests(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.PendingRequestsManager::CancelAllRequests(System.String)" />*/
	cancelAllRequests: function (trackingId) {
		var requestsForId;
		if ($.ig.NativeDictionaryUtility.prototype.containsKey(this._requests, trackingId)) {
			requestsForId = this._requests.item(trackingId);
			this._requests.remove(trackingId);
		} else {
			requestsForId = null;
		}
		if (requestsForId == null) {
			return;
		}
		var count = requestsForId.length;
		for (var i = 0; i < count; i++) {
			(requestsForId[i]).cancel();
		}
	}
	/*<EndMethod Name="System.Void Infragistics.PendingRequestsManager::CancelAllRequests(System.String)" />*/
	,
	$type: new $.ig.Type('PendingRequestsManager', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.PendingRequestsManager" />*/

/*<BeginType Name="Infragistics.RequestDelegateManager" />*/

$.ig.util.defType('RequestDelegateManager', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	/*<BeginMethod Name="Infragistics.RequestDelegateManager Infragistics.RequestDelegateManager::Utility()" />*/
	utility: function () {
		if ($.ig.RequestDelegateManager.prototype.__utility == null) {
			$.ig.RequestDelegateManager.prototype.__utility = new $.ig.RequestDelegateManager();
		}
		return $.ig.RequestDelegateManager.prototype.__utility;
	}
	/*<EndMethod Name="Infragistics.RequestDelegateManager Infragistics.RequestDelegateManager::Utility()" />*/
	,
	__oAuthDelegate: null,
	/*<BeginProperty Name="Infragistics.OAuthDelegate Infragistics.RequestDelegateManager::OAuthDelegate()" />*/
	oAuthDelegate: function (value) {
		if (arguments.length === 1) {
			this.__oAuthDelegate = value;
			return value;
		} else {
			return this.__oAuthDelegate;
		}
	}
	/*<EndProperty Name="Infragistics.OAuthDelegate Infragistics.RequestDelegateManager::OAuthDelegate()" />*/
	,
	$type: new $.ig.Type('RequestDelegateManager', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.RequestDelegateManager" />*/

/*<BeginType Name="Infragistics.OAuthDelegate" />*/

$.ig.util.defType('OAuthDelegate', 'Object', {
	$type: new $.ig.Type('OAuthDelegate', null)
}, true);

/*<EndType Name="Infragistics.OAuthDelegate" />*/

/*<BeginType Name="Infragistics.RequestsLocalizationKeys" />*/

$.ig.util.defType('RequestsLocalizationKeys', 'Object', {
	init: function () {
		$.ig.Object.prototype.init.call(this);
	},
	$type: new $.ig.Type('RequestsLocalizationKeys', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.RequestsLocalizationKeys" />*/

/*<BeginType Name="Infragistics.RequestWrapper" />*/

$.ig.util.defType('RequestWrapper', 'Request', {
	init: function () {
		$.ig.Request.prototype.init.call(this, 0, null, null);
	},
	_request: null,
	/*<BeginProperty Name="Infragistics.Request Infragistics.RequestWrapper::Request()" />*/
	request: function (value) {
		if (arguments.length === 1) {
			this._request = value;
			return value;
		} else {
			return this._request;
		}
	}
	/*<EndProperty Name="Infragistics.Request Infragistics.RequestWrapper::Request()" />*/
	,
	/*<BeginProperty Name="System.Boolean Infragistics.RequestWrapper::IsCanceled()" />*/
	isCanceled: function (value) {
		if (arguments.length === 1) {
			$.ig.Request.prototype.isCanceled.call(this, value);
			return value;
		} else {
			return this.request().isCanceled();
		}
	}
	/*<EndProperty Name="System.Boolean Infragistics.RequestWrapper::IsCanceled()" />*/
	,
	/*<BeginProperty Name="Infragistics.RequestSuccessBlock Infragistics.RequestWrapper::SuccessBlock()" />*/
	successBlock: function () {
		return this.request().successBlock();
	}
	/*<EndProperty Name="Infragistics.RequestSuccessBlock Infragistics.RequestWrapper::SuccessBlock()" />*/
	,
	/*<BeginProperty Name="Infragistics.RequestErrorBlock Infragistics.RequestWrapper::ErrorBlock()" />*/
	errorBlock: function () {
		return this.request().errorBlock();
	}
	/*<EndProperty Name="Infragistics.RequestErrorBlock Infragistics.RequestWrapper::ErrorBlock()" />*/
	,
	/*<BeginProperty Name="Infragistics.SessionRequestFileDownloadedBlock Infragistics.RequestWrapper::DownloadBlock()" />*/
	downloadBlock: function () {
		return this.request().downloadBlock();
	}
	/*<EndProperty Name="Infragistics.SessionRequestFileDownloadedBlock Infragistics.RequestWrapper::DownloadBlock()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.RequestWrapper::SetBlocks(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock, Infragistics.SessionRequestFileDownloadedBlock)" />*/
	setBlocks: function (success, error, downloaded) {
		this.request().setBlocks(success, error, downloaded);
	}
	/*<EndMethod Name="System.Void Infragistics.RequestWrapper::SetBlocks(Infragistics.RequestSuccessBlock, Infragistics.RequestErrorBlock, Infragistics.SessionRequestFileDownloadedBlock)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.RequestWrapper::Execute()" />*/
	execute: function () {
		this.request().execute();
	}
	/*<EndMethod Name="System.Void Infragistics.RequestWrapper::Execute()" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.RequestWrapper::Cancel()" />*/
	cancel: function () {
		this.request().cancel();
	}
	/*<EndMethod Name="System.Void Infragistics.RequestWrapper::Cancel()" />*/
	,
	$type: new $.ig.Type('RequestWrapper', $.ig.Request.prototype.$type)
}, true);

/*<EndType Name="Infragistics.RequestWrapper" />*/

/*<BeginType Name="Infragistics.SimpleRequestManager" />*/

$.ig.util.defType('SimpleRequestManager', 'Object', {
	/*<BeginMethod Name="Infragistics.SimpleRequestManager Infragistics.SimpleRequestManager::GlobalStaticManager()" />*/
	globalStaticManager: function () {
		if ($.ig.SimpleRequestManager.prototype.__manager == null) {
			$.ig.SimpleRequestManager.prototype.__manager = new $.ig.SimpleRequestManager();
		}
		return $.ig.SimpleRequestManager.prototype.__manager;
	}
	/*<EndMethod Name="Infragistics.SimpleRequestManager Infragistics.SimpleRequestManager::GlobalStaticManager()" />*/
	,
	__currentActiveRequests: null,
	__successBlocksLookup: null,
	__errorBlocksLookup: null,
	__downloadedBlocksLookup: null,
	init: function () {
		$.ig.Object.prototype.init.call(this);
		this.__currentActiveRequests = new $.ig.Dictionary(0);
		this.__successBlocksLookup = new $.ig.Dictionary(0);
		this.__downloadedBlocksLookup = new $.ig.Dictionary(0);
		this.__errorBlocksLookup = new $.ig.Dictionary(0);
	},
	/*<BeginMethod Name="System.String Infragistics.SimpleRequestManager::ExecuteAndManage(Infragistics.Request)" />*/
	executeAndManage: function (request) {
		var $self = this;
		var key = $.ig.NativeStringUtility.prototype.generateUID();
		request._identifier = key;
		if (request.successBlock() != null) {
			this.__successBlocksLookup.item(key, request.successBlock());
		}
		if (request.errorBlock() != null) {
			this.__errorBlocksLookup.item(key, request.errorBlock());
		}
		if (request.downloadBlock() != null) {
			this.__downloadedBlocksLookup.item(key, request.downloadBlock());
		}
		request.setBlocks(function (r, o) {
			$self.handleRequestSuccess(r, o, key);
		}, function (r, e) {
			$self.handleRequestError(r, e, key);
		}, function (r, path) {
			$self.handleRequestDownloaded(r, path, key);
		});
		this.__currentActiveRequests.item(key, request);
		request.execute();
		return key;
	}
	/*<EndMethod Name="System.String Infragistics.SimpleRequestManager::ExecuteAndManage(Infragistics.Request)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SimpleRequestManager::HandleRequestSuccess(Infragistics.Request, System.Object, System.String)" />*/
	handleRequestSuccess: function (r, o, key) {
		if (this.__successBlocksLookup != null && $.ig.NativeDictionaryUtility.prototype.containsKey(this.__successBlocksLookup, key)) {
			var block = this.__successBlocksLookup.item(key);
			block(r, o);
		}
		this.cleanupRequest(key, false);
	}
	/*<EndMethod Name="System.Void Infragistics.SimpleRequestManager::HandleRequestSuccess(Infragistics.Request, System.Object, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SimpleRequestManager::HandleRequestError(Infragistics.Request, Infragistics.CloudError, System.String)" />*/
	handleRequestError: function (r, e, key) {
		if (this.__errorBlocksLookup != null && $.ig.NativeDictionaryUtility.prototype.containsKey(this.__errorBlocksLookup, key)) {
			var block = this.__errorBlocksLookup.item(key);
			block(r, e);
		}
		this.cleanupRequest(key, false);
	}
	/*<EndMethod Name="System.Void Infragistics.SimpleRequestManager::HandleRequestError(Infragistics.Request, Infragistics.CloudError, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SimpleRequestManager::HandleRequestDownloaded(Infragistics.Request, System.String, System.String)" />*/
	handleRequestDownloaded: function (r, path, key) {
		if (this.__downloadedBlocksLookup != null && $.ig.NativeDictionaryUtility.prototype.containsKey(this.__downloadedBlocksLookup, key)) {
			var block = this.__downloadedBlocksLookup.item(key);
			block(r, path);
		}
		this.cleanupRequest(key, false);
	}
	/*<EndMethod Name="System.Void Infragistics.SimpleRequestManager::HandleRequestDownloaded(Infragistics.Request, System.String, System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SimpleRequestManager::CleanupRequest(System.String, System.Boolean)" />*/
	cleanupRequest: function (key, cancel) {
		if (this.__currentActiveRequests != null && $.ig.NativeDictionaryUtility.prototype.containsKey(this.__currentActiveRequests, key)) {
			if (cancel) {
				var req = this.__currentActiveRequests.item(key);
				req.cancel();
			}
			$.ig.NativeDictionaryUtility.prototype.removeValue(this.__currentActiveRequests, key);
			if ($.ig.NativeDictionaryUtility.prototype.containsKey(this.__successBlocksLookup, key)) {
				$.ig.NativeDictionaryUtility.prototype.removeValue(this.__successBlocksLookup, key);
			}
			if ($.ig.NativeDictionaryUtility.prototype.containsKey(this.__errorBlocksLookup, key)) {
				$.ig.NativeDictionaryUtility.prototype.removeValue(this.__errorBlocksLookup, key);
			}
			if ($.ig.NativeDictionaryUtility.prototype.containsKey(this.__downloadedBlocksLookup, key)) {
				$.ig.NativeDictionaryUtility.prototype.removeValue(this.__downloadedBlocksLookup, key);
			}
		}
	}
	/*<EndMethod Name="System.Void Infragistics.SimpleRequestManager::CleanupRequest(System.String, System.Boolean)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SimpleRequestManager::CancelRequest(System.String)" />*/
	cancelRequest: function (key) {
		this.cleanupRequest(key, true);
	}
	/*<EndMethod Name="System.Void Infragistics.SimpleRequestManager::CancelRequest(System.String)" />*/
	,
	/*<BeginMethod Name="System.Void Infragistics.SimpleRequestManager::Reset()" />*/
	reset: function () {
		var keys = $.ig.NativeDictionaryUtility.prototype.getKeys(this.__currentActiveRequests);
		for (var i = 0; i < keys.length; i++) {
			var key = keys[i];
			this.cleanupRequest(key, true);
		}
	}
	/*<EndMethod Name="System.Void Infragistics.SimpleRequestManager::Reset()" />*/
	,
	$type: new $.ig.Type('SimpleRequestManager', $.ig.Object.prototype.$type)
}, true);

/*<EndType Name="Infragistics.SimpleRequestManager" />*/

/*<BeginStatics Name="Infragistics.PermissionKind" />*/

$.ig.PermissionKind.prototype.emptyMask = 0;
$.ig.PermissionKind.prototype.viewListItems = 1;
$.ig.PermissionKind.prototype.addListItems = 2;
$.ig.PermissionKind.prototype.editListItems = 3;
$.ig.PermissionKind.prototype.deleteListItems = 4;
$.ig.PermissionKind.prototype.approveItems = 5;
$.ig.PermissionKind.prototype.openItems = 6;
$.ig.PermissionKind.prototype.viewVersions = 7;
$.ig.PermissionKind.prototype.deleteVersions = 8;
$.ig.PermissionKind.prototype.cancelCheckout = 9;
$.ig.PermissionKind.prototype.managePersonalViews = 10;
$.ig.PermissionKind.prototype.manageLists = 12;
$.ig.PermissionKind.prototype.viewFormPages = 13;
$.ig.PermissionKind.prototype.anonymousSearchAccessList = 14;
$.ig.PermissionKind.prototype.open = 17;
$.ig.PermissionKind.prototype.viewPages = 18;
$.ig.PermissionKind.prototype.addAndCustomizePages = 19;
$.ig.PermissionKind.prototype.applyThemeAndBorder = 20;
$.ig.PermissionKind.prototype.applyStyleSheets = 21;
$.ig.PermissionKind.prototype.viewUsageData = 22;
$.ig.PermissionKind.prototype.createSSCSite = 23;
$.ig.PermissionKind.prototype.manageSubwebs = 24;
$.ig.PermissionKind.prototype.createGroups = 25;
$.ig.PermissionKind.prototype.managePermissions = 26;
$.ig.PermissionKind.prototype.browseDirectories = 27;
$.ig.PermissionKind.prototype.browseUserInfo = 28;
$.ig.PermissionKind.prototype.addDelPrivateWebParts = 29;
$.ig.PermissionKind.prototype.updatePersonalWebParts = 30;
$.ig.PermissionKind.prototype.manageWeb = 31;
$.ig.PermissionKind.prototype.anonymousSearchAccessWebLists = 32;
$.ig.PermissionKind.prototype.useClientIntegration = 37;
$.ig.PermissionKind.prototype.useRemoteAPIs = 38;
$.ig.PermissionKind.prototype.manageAlerts = 39;
$.ig.PermissionKind.prototype.createAlerts = 40;
$.ig.PermissionKind.prototype.editMyUserInfo = 41;
$.ig.PermissionKind.prototype.enumeratePermissions = 63;
$.ig.PermissionKind.prototype.fullMask = 65;
/*<EndStatics Name="Infragistics.PermissionKind" />*/

/*<BeginStatics Name="Infragistics.ReportPlusSharePermission" />*/

$.ig.ReportPlusSharePermission.prototype.view = 0;
$.ig.ReportPlusSharePermission.prototype.viewShare = 1;
$.ig.ReportPlusSharePermission.prototype.editShare = 2;
$.ig.ReportPlusSharePermission.prototype.forbidden = 3;
/*<EndStatics Name="Infragistics.ReportPlusSharePermission" />*/

/*<BeginStatics Name="Infragistics.ReportPlusShareUserType" />*/

$.ig.ReportPlusShareUserType.prototype.user = 0;
$.ig.ReportPlusShareUserType.prototype.team = 1;
$.ig.ReportPlusShareUserType.prototype.organization = 2;
$.ig.ReportPlusShareUserType.prototype.email = 3;
/*<EndStatics Name="Infragistics.ReportPlusShareUserType" />*/

/*<BeginStatics Name="Infragistics.ReportPlusLocationType" />*/

$.ig.ReportPlusLocationType.prototype.direct = 0;
$.ig.ReportPlusLocationType.prototype.shared = 1;
$.ig.ReportPlusLocationType.prototype.forbidden = 2;
$.ig.ReportPlusLocationType.prototype.notFound = 3;
/*<EndStatics Name="Infragistics.ReportPlusLocationType" />*/

/*<BeginStatics Name="Infragistics.ContentPropertyType" />*/

$.ig.ContentPropertyType.prototype.owner = 0;
$.ig.ContentPropertyType.prototype.fileType = 1;
$.ig.ContentPropertyType.prototype.folderType = 2;
$.ig.ContentPropertyType.prototype.contentLocation = 3;
$.ig.ContentPropertyType.prototype.locationPath = 4;
/*<EndStatics Name="Infragistics.ContentPropertyType" />*/

/*<BeginStatics Name="Infragistics.CloudProviderType" />*/

$.ig.CloudProviderType.prototype.notSet = 0;
$.ig.CloudProviderType.prototype.microsoft = 1;
$.ig.CloudProviderType.prototype.google = 2;
$.ig.CloudProviderType.prototype.box = 3;
$.ig.CloudProviderType.prototype.dropbox = 4;
$.ig.CloudProviderType.prototype.sharePoint = 5;
$.ig.CloudProviderType.prototype.infragistics = 6;
$.ig.CloudProviderType.prototype.googleAnalytics = 7;
$.ig.CloudProviderType.prototype.microsoftProvider = 8;
$.ig.CloudProviderType.prototype.googleProvider = 9;
$.ig.CloudProviderType.prototype.facebook = 10;
$.ig.CloudProviderType.prototype.reportPlus = 11;
$.ig.CloudProviderType.prototype.windows = 12;
$.ig.CloudProviderType.prototype.salesForce = 13;
$.ig.CloudProviderType.prototype.local = 14;
$.ig.CloudProviderType.prototype.appFigures = 15;
$.ig.CloudProviderType.prototype.restApi = 16;
$.ig.CloudProviderType.prototype.demo = 17;
$.ig.CloudProviderType.prototype.bigQuery = 18;
$.ig.CloudProviderType.prototype.dataDotWorld = 19;
$.ig.CloudProviderType.prototype.test = 20;
$.ig.CloudProviderType.prototype.azureAnalysisServices = 21;
$.ig.CloudProviderType.prototype.apple = 22;
$.ig.CloudProviderType.prototype.hubSpot = 23;
$.ig.CloudProviderType.prototype.quickBooks = 24;
$.ig.CloudProviderType.prototype.marketo = 25;
$.ig.CloudProviderType.prototype.s3 = 26;
$.ig.CloudProviderType.prototype.googleAds = 27;
/*<EndStatics Name="Infragistics.CloudProviderType" />*/

/*<BeginStatics Name="Infragistics.CloudErrorType" />*/

$.ig.CloudErrorType.prototype.noType = 0;
$.ig.CloudErrorType.prototype.iGRefreshToken = 1;
$.ig.CloudErrorType.prototype.needsOAuthorize = 2;
$.ig.CloudErrorType.prototype.needsPermission = 3;
/*<EndStatics Name="Infragistics.CloudErrorType" />*/

/*<BeginStatics Name="Infragistics.MicrosoftRole" />*/

$.ig.MicrosoftRole.prototype.read = 0;
$.ig.MicrosoftRole.prototype.write = 1;
/*<EndStatics Name="Infragistics.MicrosoftRole" />*/

/*<BeginStatics Name="Infragistics.GoogleAnalyticsResourceType" />*/

$.ig.GoogleAnalyticsResourceType.prototype.pROFILES = 0;
$.ig.GoogleAnalyticsResourceType.prototype.rEPORT = 1;
/*<EndStatics Name="Infragistics.GoogleAnalyticsResourceType" />*/

/*<BeginStatics Name="Infragistics.GoogleAnalyticsSortDirection" />*/

$.ig.GoogleAnalyticsSortDirection.prototype.aSCENDING = 0;
$.ig.GoogleAnalyticsSortDirection.prototype.dESCENDING = 1;
$.ig.GoogleAnalyticsSortDirection.prototype.nONE = 2;
/*<EndStatics Name="Infragistics.GoogleAnalyticsSortDirection" />*/

/*<BeginStatics Name="Infragistics.DropboxFolderAction" />*/

$.ig.DropboxFolderAction.prototype.changeOptions = 0;
$.ig.DropboxFolderAction.prototype.disableViewerInfo = 1;
$.ig.DropboxFolderAction.prototype.editContents = 2;
$.ig.DropboxFolderAction.prototype.enableViewerInfo = 3;
$.ig.DropboxFolderAction.prototype.inviteEditor = 4;
$.ig.DropboxFolderAction.prototype.inviteViewer = 5;
$.ig.DropboxFolderAction.prototype.inviteViewerNoComment = 6;
$.ig.DropboxFolderAction.prototype.relinquishMembership = 7;
$.ig.DropboxFolderAction.prototype.unmount = 8;
$.ig.DropboxFolderAction.prototype.unshare = 9;
$.ig.DropboxFolderAction.prototype.leaveACopy = 10;
$.ig.DropboxFolderAction.prototype.createLink = 11;
$.ig.DropboxFolderAction.prototype.setAccessInheritance = 12;
/*<EndStatics Name="Infragistics.DropboxFolderAction" />*/

/*<BeginStatics Name="Infragistics.DropboxAccessLevel" />*/

$.ig.DropboxAccessLevel.prototype.owner = 0;
$.ig.DropboxAccessLevel.prototype.editor = 1;
$.ig.DropboxAccessLevel.prototype.viewer = 2;
$.ig.DropboxAccessLevel.prototype.viewerNoComment = 3;
/*<EndStatics Name="Infragistics.DropboxAccessLevel" />*/

/*<BeginStatics Name="Infragistics.DropboxFileAction" />*/

$.ig.DropboxFileAction.prototype.disableViewerInfo = 0;
$.ig.DropboxFileAction.prototype.editContents = 1;
$.ig.DropboxFileAction.prototype.enableViewerInfo = 2;
$.ig.DropboxFileAction.prototype.inviteViewer = 3;
$.ig.DropboxFileAction.prototype.inviteViewerNoComment = 4;
$.ig.DropboxFileAction.prototype.unshare = 5;
$.ig.DropboxFileAction.prototype.relinquishMembership = 6;
$.ig.DropboxFileAction.prototype.createLink = 7;
/*<EndStatics Name="Infragistics.DropboxFileAction" />*/

/*<BeginStatics Name="Infragistics.DropboxWriteMode" />*/

$.ig.DropboxWriteMode.prototype.add = 0;
$.ig.DropboxWriteMode.prototype.overwrite = 1;
/*<EndStatics Name="Infragistics.DropboxWriteMode" />*/

/*<BeginStatics Name="Infragistics.AccountType" />*/

$.ig.AccountType.prototype.generic = 0;
$.ig.AccountType.prototype.oAuth = 1;
$.ig.AccountType.prototype.empty = 2;
$.ig.AccountType.prototype.aws = 3;
/*<EndStatics Name="Infragistics.AccountType" />*/

/*<BeginStatics Name="Infragistics.CookieStorageMode" />*/

$.ig.CookieStorageMode.prototype.undefined = 0;
$.ig.CookieStorageMode.prototype.request = 1;
/*<EndStatics Name="Infragistics.CookieStorageMode" />*/

/*<BeginStatics Name="Infragistics.SessionType" />*/

$.ig.SessionType.prototype.normal = 0;
$.ig.SessionType.prototype.background = 1;
/*<EndStatics Name="Infragistics.SessionType" />*/

/*<BeginStatics Name="Infragistics.SessionTaskType" />*/

$.ig.SessionTaskType.prototype.data = 0;
$.ig.SessionTaskType.prototype.download = 1;
/*<EndStatics Name="Infragistics.SessionTaskType" />*/

/*<BeginStatics Name="Infragistics.SessionContentType" />*/

$.ig.SessionContentType.prototype.jSON = 0;
$.ig.SessionContentType.prototype.xML = 1;
$.ig.SessionContentType.prototype.soapXML = 2;
$.ig.SessionContentType.prototype.uRLEncodeForm = 3;
$.ig.SessionContentType.prototype.amazonJSON = 4;
$.ig.SessionContentType.prototype.multipartFormData = 5;
$.ig.SessionContentType.prototype.none = 6;
/*<EndStatics Name="Infragistics.SessionContentType" />*/

/*<BeginStatics Name="Infragistics.SessionHTTPMethod" />*/

$.ig.SessionHTTPMethod.prototype.gET = 0;
$.ig.SessionHTTPMethod.prototype.pOST = 1;
$.ig.SessionHTTPMethod.prototype.dELETE = 2;
$.ig.SessionHTTPMethod.prototype.pUT = 3;
$.ig.SessionHTTPMethod.prototype.pATCH = 4;
$.ig.SessionHTTPMethod.prototype.hEAD = 5;
/*<EndStatics Name="Infragistics.SessionHTTPMethod" />*/

/*<BeginStatics Name="Infragistics.SessionResponseType" />*/

$.ig.SessionResponseType.prototype.sTRING = 0;
$.ig.SessionResponseType.prototype.xML = 1;
$.ig.SessionResponseType.prototype.jSON = 2;
$.ig.SessionResponseType.prototype.dATA = 3;
$.ig.SessionResponseType.prototype.jSON_STREAMING = 4;
$.ig.SessionResponseType.prototype.sTREAM = 5;
/*<EndStatics Name="Infragistics.SessionResponseType" />*/

/*<BeginStatics Name="Infragistics.SearchCapabilities" />*/

$.ig.SearchCapabilities.prototype.searchUnsupported = 0;
$.ig.SearchCapabilities.prototype.searchByText = 1;
$.ig.SearchCapabilities.prototype.searchByFileExtensions = 2;
$.ig.SearchCapabilities.prototype.searchByMimeTypes = 4;
$.ig.SearchCapabilities.prototype.searchByModifiedDateTime = 8;
$.ig.SearchCapabilities.prototype.searchByAuthor = 16;
$.ig.SearchCapabilities.prototype.searchByEmptyText = 32;
/*<EndStatics Name="Infragistics.SearchCapabilities" />*/

/*<BeginStatics Name="Infragistics.NativeRequestUtility" />*/

$.ig.NativeRequestUtility.prototype.__utility = null;
/*<EndStatics Name="Infragistics.NativeRequestUtility" />*/

/*<BeginStatics Name="Infragistics.OAuthProvider" />*/

$.ig.OAuthProvider.prototype.tokenAction = "token";
/*<EndStatics Name="Infragistics.OAuthProvider" />*/

/*<BeginStatics Name="Infragistics.SessionRequestBase" />*/

$.ig.SessionRequestBase.prototype.dEFAULT_TIMEOUT = -1;
/*<EndStatics Name="Infragistics.SessionRequestBase" />*/

/*<BeginStatics Name="Infragistics.BoxFilePermissions" />*/

$.ig.BoxFilePermissions.prototype._ownerKey = "owner";
$.ig.BoxFilePermissions.prototype._editorKey = "editor";
$.ig.BoxFilePermissions.prototype._viewerKey = "viewer";
/*<EndStatics Name="Infragistics.BoxFilePermissions" />*/

/*<BeginStatics Name="Infragistics.InfragisticsAPIRequestBase" />*/

$.ig.InfragisticsAPIRequestBase.prototype.currentConfiguration = null;
/*<EndStatics Name="Infragistics.InfragisticsAPIRequestBase" />*/

/*<BeginStatics Name="Infragistics.DropboxFileManager" />*/

$.ig.DropboxFileManager.prototype._cHUNK_SIZE = 1048576;
/*<EndStatics Name="Infragistics.DropboxFileManager" />*/

/*<BeginStatics Name="Infragistics.MicrosoftRequestBase" />*/

$.ig.MicrosoftRequestBase.prototype._bETA = "BETA";
$.ig.MicrosoftRequestBase.prototype.graphURL = "https://graph.microsoft.com/";
/*<EndStatics Name="Infragistics.MicrosoftRequestBase" />*/

/*<BeginStatics Name="Infragistics.DropboxFilePermissions" />*/

$.ig.DropboxFilePermissions.prototype._ownerKey = "owner";
$.ig.DropboxFilePermissions.prototype._editorKey = "editor";
$.ig.DropboxFilePermissions.prototype._viewerKey = "viewer";
/*<EndStatics Name="Infragistics.DropboxFilePermissions" />*/

/*<BeginStatics Name="Infragistics.GoogleAdsRequestBase" />*/

$.ig.GoogleAdsRequestBase.prototype.dEVELOPER_TOKEN = "f-s3pX3Frf_UJCekhzP5iw";
/*<EndStatics Name="Infragistics.GoogleAdsRequestBase" />*/

/*<BeginStatics Name="Infragistics.GoogleOAuthProvider" />*/

$.ig.GoogleOAuthProvider.prototype.authURL = "https://accounts.google.com/o/oauth2/v2/";
$.ig.GoogleOAuthProvider.prototype.authAction = "auth";
$.ig.GoogleOAuthProvider.prototype.tokenUrl = "https://www.googleapis.com/oauth2/v4/";
/*<EndStatics Name="Infragistics.GoogleOAuthProvider" />*/

/*<BeginStatics Name="Infragistics.GoogleFileManager" />*/

$.ig.GoogleFileManager.prototype._cHUNK_SIZE = 1048576;
/*<EndStatics Name="Infragistics.GoogleFileManager" />*/

/*<BeginStatics Name="Infragistics.GoogleFilePermissions" />*/

$.ig.GoogleFilePermissions.prototype._ownerKey = "owner";
$.ig.GoogleFilePermissions.prototype._editorKey = "writer";
$.ig.GoogleFilePermissions.prototype._viewerKey = "reader";
/*<EndStatics Name="Infragistics.GoogleFilePermissions" />*/

/*<BeginStatics Name="Infragistics.GoogleTeamManager" />*/

$.ig.GoogleTeamManager.prototype._cachedMembers = null;
$.ig.GoogleTeamManager.prototype._requestsHandlers = null;
/*<EndStatics Name="Infragistics.GoogleTeamManager" />*/

/*<BeginStatics Name="Infragistics.MicrosoftFileManager" />*/

$.ig.MicrosoftFileManager.prototype._cHUNK_SIZE = 1310720;
/*<EndStatics Name="Infragistics.MicrosoftFileManager" />*/

/*<BeginStatics Name="Infragistics.MicrosoftItemPermissions" />*/

$.ig.MicrosoftItemPermissions.prototype._ownerKey = "owner";
$.ig.MicrosoftItemPermissions.prototype._editorKey = "write";
$.ig.MicrosoftItemPermissions.prototype._viewerKey = "read";
/*<EndStatics Name="Infragistics.MicrosoftItemPermissions" />*/

/*<BeginStatics Name="Infragistics.Token" />*/

$.ig.Token.prototype._aCCESS_TOKEN_KEY = "access_token";
$.ig.Token.prototype._eXPIRATION_TIME_KEY = "expirationTime";
/*<EndStatics Name="Infragistics.Token" />*/

/*<BeginStatics Name="Infragistics.LinkedDocument" />*/

$.ig.LinkedDocument.prototype.documentTypeKey = "documentType";
$.ig.LinkedDocument.prototype.archiveAction = "archive";
$.ig.LinkedDocument.prototype.deleteAction = "delete";
$.ig.LinkedDocument.prototype.deletePermanentAction = "deletePermanent";
$.ig.LinkedDocument.prototype.validateAction = "validate";
$.ig.LinkedDocument.prototype.notifyActionSelf = "notifyself";
$.ig.LinkedDocument.prototype.notifyActionParents = "notifyparents";
$.ig.LinkedDocument.prototype.notifyActionAncestors = "notifyancestors";
/*<EndStatics Name="Infragistics.LinkedDocument" />*/

/*<BeginStatics Name="Infragistics.CloudFile" />*/

$.ig.CloudFile.prototype.pATH_SEPARATOR = "__";
$.ig.CloudFile.prototype.sharePointSiteSectionKey = "aSite";
$.ig.CloudFile.prototype.sharePointLibrarySectionKey = "bLibrary";
$.ig.CloudFile.prototype.sharePointListSectionKey = "cList";
$.ig.CloudFile.prototype.notificationInfoKey = "n_info";
$.ig.CloudFile.prototype.typeFolder = "aFolder";
$.ig.CloudFile.prototype.typeFile = "bFile";
$.ig.CloudFile.prototype.typeDashboards = "bDashboards";
$.ig.CloudFile.prototype.typeExcel = "Excel";
$.ig.CloudFile.prototype.typePowerPoint = "PowerPoint";
$.ig.CloudFile.prototype.typeWord = "Word";
$.ig.CloudFile.prototype.typePDF = "PDF";
$.ig.CloudFile.prototype.typeZIP = "ZIP";
$.ig.CloudFile.prototype.typeCSV = "CSV";
$.ig.CloudFile.prototype.typeJson = "Json";
$.ig.CloudFile.prototype.sPTypeSite = "Site";
$.ig.CloudFile.prototype.sPTypeListItem = "ListItem";
$.ig.CloudFile.prototype.sPTypeAnnouncements = "Announcements";
$.ig.CloudFile.prototype.sPTypeAssetLibrary = "AssetLibrary";
$.ig.CloudFile.prototype.sPTypeBlogCategories = "BlogCategories";
$.ig.CloudFile.prototype.sPTypeBlogComments = "BlogComments";
$.ig.CloudFile.prototype.sPTypeBlogPosts = "BlogPosts";
$.ig.CloudFile.prototype.sPTypeContacts = "Contacts";
$.ig.CloudFile.prototype.sPTypeDiscussionBoard = "DiscussionBoard";
$.ig.CloudFile.prototype.sPTypeDocumentLibrary = "DocumentLibrary";
$.ig.CloudFile.prototype.sPTypeEvents = "Events";
$.ig.CloudFile.prototype.sPTypeGeneric = "Generic";
$.ig.CloudFile.prototype.sPTypeIssueTracking = "IssueTracking";
$.ig.CloudFile.prototype.sPTypeLinks = "Links";
$.ig.CloudFile.prototype.sPTypePersonalDocumentLibrary = "PersonalDocumentLibrary";
$.ig.CloudFile.prototype.sPTypePictureLibrary = "PictureLibrary";
$.ig.CloudFile.prototype.sPTypePrivateDocumentLibrary = "PrivateDocumentLibrary";
$.ig.CloudFile.prototype.sPTypeProjectTasks = "ProjectTasks";
$.ig.CloudFile.prototype.sPTypeSurvey = "Survey";
$.ig.CloudFile.prototype.sPTypeTasks = "Tasks";
$.ig.CloudFile.prototype.sPTypeWikiPageLibrary = "WikiPageLibrary";
$.ig.CloudFile.prototype.sPTypeXMLFormLibrary = "XMLFormLibrary";
$.ig.CloudFile.prototype.sPTypeExternalList = "ExternalList";
$.ig.CloudFile.prototype.sPTypeListPageLibrary = "ListPageLibrary";
$.ig.CloudFile.prototype.sPTypeCustomList = "CustomList";
$.ig.CloudFile.prototype.sPTypeGanttTasks = "GanttTasks";
$.ig.CloudFile.prototype.sPTypeSurveys = "Surveys";
$.ig.CloudFile.prototype.sPTypeItem = "Item";
$.ig.CloudFile.prototype.sPTypeEvent = "Event";
$.ig.CloudFile.prototype.sPTypeReservations = "Reservations";
$.ig.CloudFile.prototype.sPTypeScheduleAndReservations = "Schedule and Reservations";
$.ig.CloudFile.prototype.sPTypeSchedule = "Schedule";
$.ig.CloudFile.prototype.sPTypeIssue = "Issue";
$.ig.CloudFile.prototype.sPTypeAnnouncement = "Announcement";
$.ig.CloudFile.prototype.sPTypeLink = "Link";
$.ig.CloudFile.prototype.sPTypeContact = "Contact";
$.ig.CloudFile.prototype.sPTypeMessage = "Message";
$.ig.CloudFile.prototype.sPTypeTask = "Task";
$.ig.CloudFile.prototype.sPTypePost = "Post";
$.ig.CloudFile.prototype.sPTypeComment = "Comment";
$.ig.CloudFile.prototype.sPTypeListPageLibraryItem = "ListPageLibraryItem";
$.ig.CloudFile.prototype.sPTypeCustomListItem = "CustomListItem";
$.ig.CloudFile.prototype.sPTypeDiscussion = "Discussion";
$.ig.CloudFile.prototype.sPTypeGanttTask = "GantTask";
$.ig.CloudFile.prototype.sPTypePictureLibraryItem = "PictureLibraryItem";
$.ig.CloudFile.prototype.sPTypeWikiPageLibraryItem = "PageLibraryItem";
$.ig.CloudFile.prototype.sPTypeXMLFormLibraryItem = "XMLFormLibraryItem";
$.ig.CloudFile.prototype.sPTypeBlogCategory = "BlogCategory";
$.ig.CloudFile.prototype.googleTypeSpreadSheet = "GoogleSpreadSheet";
$.ig.CloudFile.prototype.googleTypeDoc = "GoogleDoc";
$.ig.CloudFile.prototype.googleTypeSlides = "GoogleSlides";
$.ig.CloudFile.prototype.googleDriveMyDrive = "GoogleDriveMyDrive";
$.ig.CloudFile.prototype.googleDriveSharedWithMe = "GoogleDriveSharedWithMe";
$.ig.CloudFile.prototype.googleDriveStarred = "GoogleDriveStarred";
$.ig.CloudFile.prototype.googleDriveTrash = "GoogleDriveTrash";
$.ig.CloudFile.prototype.typeImage = "Image";
$.ig.CloudFile.prototype.typeEmail = "Email";
$.ig.CloudFile.prototype.typeTextFile = "TextFile";
$.ig.CloudFile.prototype.typeAttachment = "Attachment";
$.ig.CloudFile.prototype.typeVideo = "Video";
$.ig.CloudFile.prototype.typeAudio = "Audio";
$.ig.CloudFile.prototype.typeASP = "ASP";
$.ig.CloudFile.prototype.typeHTML = "HTML";
$.ig.CloudFile.prototype.typeWiki = "Wiki";
$.ig.CloudFile.prototype.typeRTF = "RTF";
$.ig.CloudFile.prototype.typeRDL = "RDL";
$.ig.CloudFile.prototype.typeOneNote = "OneNote";
$.ig.CloudFile.prototype.typeOneNoteTableOfContents = "OneNote Table Of Contents";
$.ig.CloudFile.prototype.typeVisio = "Visio";
$.ig.CloudFile.prototype.typeInfoPath = "InfoPath";
$.ig.CloudFile.prototype.typeURLLink = "URLLink";
$.ig.CloudFile.prototype.typeRPlus = "RPlus";
$.ig.CloudFile.prototype.typeDashboard = "dashboard";
$.ig.CloudFile.prototype._pendingMembersKey = "pendingMembers";
$.ig.CloudFile.prototype._oldPendingMemberIdsKey = "pendingMemberIds";
/*<EndStatics Name="Infragistics.CloudFile" />*/

/*<BeginStatics Name="Infragistics.CloudError" />*/

$.ig.CloudError.prototype.errorCannotSearchByEmptyText = 1011;
$.ig.CloudError.prototype.errorCanceled = 1012;
$.ig.CloudError.prototype.errorNoInternetConnection = 1013;
$.ig.CloudError.prototype.errorSoftwareCausedConnectionAbort = 1014;
$.ig.CloudError.prototype.errorMaxDownloadSize = 1015;
$.ig.CloudError.prototype.aDDITIONAL_INFO_CLOUD_PROVIDER_ID = "cloud-prov-id";
$.ig.CloudError.prototype.aDDITIONAL_INFO_CLOUD_PROVIDER_MISSING_SCOPES = "cloud-prov-scopes";
/*<EndStatics Name="Infragistics.CloudError" />*/

/*<BeginStatics Name="Infragistics.DocumentLink" />*/

$.ig.DocumentLink.prototype.linkTypeParent = "parent";
$.ig.DocumentLink.prototype.linkTypeChild = "child";
$.ig.DocumentLink.prototype.linkTypeSibling = "sibling";
$.ig.DocumentLink.prototype.documentTypeUserFile = "UserFile";
$.ig.DocumentLink.prototype.documentTypeTeam = "Team";
$.ig.DocumentLink.prototype.documentTypeBoard = "Board";
$.ig.DocumentLink.prototype.documentTypeTask = "Task";
$.ig.DocumentLink.prototype.documentTypeCloudFile = "CloudFile";
$.ig.DocumentLink.prototype.documentTypeChat = "Chat";
$.ig.DocumentLink.prototype.documentTypeTaskGroup = "TasksGroup";
$.ig.DocumentLink.prototype.documentTypeTasksFilter = "TasksFilter";
$.ig.DocumentLink.prototype.documentTypeDiscussion = "Discussion";
$.ig.DocumentLink.prototype.documentTypeTopic = "Chat";
$.ig.DocumentLink.prototype.documentTypeDashboardFile = "RevealFile";
$.ig.DocumentLink.prototype.documentTypeRevealDataCatalogItem = "RevealDataCatalogItem";
$.ig.DocumentLink.prototype.documentTypeOverview = "Overview";
$.ig.DocumentLink.prototype.documentTypeChatLog = "ChatLog";
$.ig.DocumentLink.prototype.documentTypeChatMessage = "ChatMessage";
$.ig.DocumentLink.prototype.documentTypeBoardSection = "BoardSection";
$.ig.DocumentLink.prototype.documentTypeBoardSectionWidget = "BoardSectionWidget";
$.ig.DocumentLink.prototype.kindTypeTeam = "Team";
$.ig.DocumentLink.prototype.kindTypeOrg = "Org";
$.ig.DocumentLink.prototype.kindTypeProject = "Project";
$.ig.DocumentLink.prototype.revealFileCollectionKey = "revealFiles";
$.ig.DocumentLink.prototype.revealDataCatalogItemCollectionKey = "revealDataCatalogItems";
$.ig.DocumentLink.prototype.taskGroupCollectionKey = "tasksGroups";
$.ig.DocumentLink.prototype.boardCollectionKey = "boards";
$.ig.DocumentLink.prototype.teamCollectionKey = "teams";
$.ig.DocumentLink.prototype.fullTeamCollectionKey = "fullTeams";
$.ig.DocumentLink.prototype.fullOverviewsCollectionKey = "fullOverviews";
$.ig.DocumentLink.prototype.dicussionCollectionKey = "discussions";
$.ig.DocumentLink.prototype.taskCollectionKey = "tasks";
$.ig.DocumentLink.prototype.taskFilterCollectionKey = "tasksFilters";
$.ig.DocumentLink.prototype.chatCollectionKey = "chats";
$.ig.DocumentLink.prototype.chatLogCollectionKey = "logs";
$.ig.DocumentLink.prototype.filesCollectionKey = "files";
$.ig.DocumentLink.prototype.fileIdsCollectionKey = "filesIds";
$.ig.DocumentLink.prototype.overviewCollectionKey = "overviews";
$.ig.DocumentLink.prototype.membersCollectionKey = "members";
$.ig.DocumentLink.prototype.chatMessageCollectionKey = "messageIds";
$.ig.DocumentLink.prototype.modiferKey = "modifier";
$.ig.DocumentLink.prototype.modifierLite = "lite";
$.ig.DocumentLink.prototype.modifierAllProps = "allProperties";
$.ig.DocumentLink.prototype.modifierFillItems = "fillItems";
$.ig.DocumentLink.prototype.modifierUserState = "userState";
$.ig.DocumentLink.prototype.selectKey = "select";
$.ig.DocumentLink.prototype.selectPageSize = "pageSize";
$.ig.DocumentLink.prototype.selectStartIndex = "startIndex";
$.ig.DocumentLink.prototype.excludeKey = "exclude";
$.ig.DocumentLink.prototype.filterKey = "filter";
$.ig.DocumentLink.prototype.orderByKey = "orderBy";
$.ig.DocumentLink.prototype.orderDirectionKey = "orderDirection";
$.ig.DocumentLink.prototype.queryKey = "q";
$.ig.DocumentLink.prototype.groupByKey = "groupBy";
$.ig.DocumentLink.prototype.sharedPermissionTypeOwner = "owner";
$.ig.DocumentLink.prototype.sharedPermissionTypeModify = "modify";
$.ig.DocumentLink.prototype.sharedPermissionTypeView = "view";
$.ig.DocumentLink.prototype.sharedPermissionTypeExternalModify = "externalModify";
$.ig.DocumentLink.prototype.sharedPermissionTypeExternalView = "externalView";
$.ig.DocumentLink.prototype.sharedPermissionTypeNewOwner = "newOwner";
$.ig.DocumentLink.prototype.sharedPermissionTypeNewModify = "newModify";
$.ig.DocumentLink.prototype.sharedPermissionTypeNewView = "newView";
$.ig.DocumentLink.prototype.sharedPermissionTypePending = "pending";
$.ig.DocumentLink.prototype.sharedPermissionTypePreApproved = "preapproved";
$.ig.DocumentLink.prototype.sharedKey = "shared";
$.ig.DocumentLink.prototype.bookmarksCollectionProperty = "bookmarks";
$.ig.DocumentLink.prototype.documentTypeKey = "documentType";
$.ig.DocumentLink.prototype.startShareKey = "startShare";
$.ig.DocumentLink.prototype.stopShareKey = "stopShare";
$.ig.DocumentLink.prototype.skipInviteKey = "si";
$.ig.DocumentLink.prototype.permissionKey = "permission";
$.ig.DocumentLink.prototype.nameKey = "name";
$.ig.DocumentLink.prototype.oneWayKey = "oneWay";
$.ig.DocumentLink.prototype._nEXTLINK_ID = "nextLinkId";
$.ig.DocumentLink.prototype.lASTLINK_ID = "LAST";
$.ig.DocumentLink.prototype.identifierKey = "id";
/*<EndStatics Name="Infragistics.DocumentLink" />*/

/*<BeginStatics Name="Infragistics.TokenState" />*/

$.ig.TokenState.prototype.dataSourcesKey = "dataSources";
$.ig.TokenState.prototype._isLoginKey = "isLogin";
/*<EndStatics Name="Infragistics.TokenState" />*/

/*<BeginStatics Name="Infragistics.EMTokenStateRefreshFactory" />*/

$.ig.EMTokenStateRefreshFactory.prototype.__instance = null;
/*<EndStatics Name="Infragistics.EMTokenStateRefreshFactory" />*/

/*<BeginStatics Name="Infragistics.GoogleFile" />*/

$.ig.GoogleFile.prototype.googleDriveRootId = "root";
$.ig.GoogleFile.prototype.googleDriveSharedDrivesId = "fp_sharedDrives";
$.ig.GoogleFile.prototype.googleMimeTypeDriveRoot = "application/vnd.infragistics-file-providers.googleDriveRoot";
$.ig.GoogleFile.prototype.googleMimeTypeSharedWithMe = "application/vnd.infragistics-file-providers.sharedWithMeFolder";
$.ig.GoogleFile.prototype.googleMimeTypeStarred = "application/vnd.infragistics-file-providers.starredFolder";
$.ig.GoogleFile.prototype.googleMimeTypeTrash = "application/vnd.infragistics-file-providers.trashFolder";
$.ig.GoogleFile.prototype.googleMimeTypeSharedDrives = "application/vnd.infragistics-file-providers.sharedDrives";
$.ig.GoogleFile.prototype.rootKey = $.ig.GoogleFile.prototype.googleDriveRootId;
$.ig.GoogleFile.prototype.__specialFoldersLookup = null;
$.ig.GoogleFile.prototype.__specialFolders = null;
/*<EndStatics Name="Infragistics.GoogleFile" />*/

/*<BeginStatics Name="Infragistics.LinkedDocumentChildPagingInfo" />*/

$.ig.LinkedDocumentChildPagingInfo.prototype.dEFAULT_PAGE_SIZE = 15;
/*<EndStatics Name="Infragistics.LinkedDocumentChildPagingInfo" />*/

/*<BeginStatics Name="Infragistics.MicrosoftAccountUserInfo" />*/

$.ig.MicrosoftAccountUserInfo.prototype._eMAIL = "mail";
$.ig.MicrosoftAccountUserInfo.prototype._uSER_ID = "id";
/*<EndStatics Name="Infragistics.MicrosoftAccountUserInfo" />*/

/*<BeginStatics Name="Infragistics.ProviderBase" />*/

$.ig.ProviderBase.prototype._collectionPropertyName = "subsites";
/*<EndStatics Name="Infragistics.ProviderBase" />*/

/*<BeginStatics Name="Infragistics.ProviderTokenState" />*/

$.ig.ProviderTokenState.prototype.typeName = "TokenState";
/*<EndStatics Name="Infragistics.ProviderTokenState" />*/

/*<BeginStatics Name="Infragistics.ProviderLocal" />*/

$.ig.ProviderLocal.prototype.typeName = "Local";
/*<EndStatics Name="Infragistics.ProviderLocal" />*/

/*<BeginStatics Name="Infragistics.ProviderReportPlus" />*/

$.ig.ProviderReportPlus.prototype.oAUTH_PROVIDERS_KEY = "oauthProviders";
$.ig.ProviderReportPlus.prototype.typeName = "ReportPlus";
/*<EndStatics Name="Infragistics.ProviderReportPlus" />*/

/*<BeginStatics Name="Infragistics.ProviderInfragisticsWebProxy" />*/

$.ig.ProviderInfragisticsWebProxy.prototype.typeName = "InfragisticsWebProxy";
/*<EndStatics Name="Infragistics.ProviderInfragisticsWebProxy" />*/

/*<BeginStatics Name="Infragistics.ProviderGenericOAuth" />*/

$.ig.ProviderGenericOAuth.prototype.typeName1 = "GenericOAuth";
/*<EndStatics Name="Infragistics.ProviderGenericOAuth" />*/

/*<BeginStatics Name="Infragistics.SharePointListBase" />*/

$.ig.SharePointListBase.prototype.baseTypeList = "0";
$.ig.SharePointListBase.prototype.baseTypeLibrary = "1";
/*<EndStatics Name="Infragistics.SharePointListBase" />*/

/*<BeginStatics Name="Infragistics.SharePointOnPremSessionInfo" />*/

$.ig.SharePointOnPremSessionInfo.prototype.hTTP_HEADER_NAME = "X-RequestDigest";
/*<EndStatics Name="Infragistics.SharePointOnPremSessionInfo" />*/

/*<BeginStatics Name="Infragistics.SharePointProviderUtility" />*/

$.ig.SharePointProviderUtility.prototype.discoveryResource = "https://graph.microsoft.com";
/*<EndStatics Name="Infragistics.SharePointProviderUtility" />*/

/*<BeginStatics Name="Infragistics.WindowsAuthProvider" />*/

$.ig.WindowsAuthProvider.prototype.typeName = "WindowsAuth";
/*<EndStatics Name="Infragistics.WindowsAuthProvider" />*/

/*<BeginStatics Name="Infragistics.GenericOAuthProvider" />*/

$.ig.GenericOAuthProvider.prototype.clientIdKey = "ClientId";
$.ig.GenericOAuthProvider.prototype.clientSecretKey = "ClientSecret";
$.ig.GenericOAuthProvider.prototype.authenticateUrlKey = "AuthenticateUrl";
$.ig.GenericOAuthProvider.prototype.tokenUrlKey = "TokenUrl";
$.ig.GenericOAuthProvider.prototype.logoutUrlKey = "LogoutUrl";
$.ig.GenericOAuthProvider.prototype.scopeKey = "Scope";
$.ig.GenericOAuthProvider.prototype.resourceKey = "Resource";
$.ig.GenericOAuthProvider.prototype.additionalParametersKey = "AdditionalParameters";
$.ig.GenericOAuthProvider.prototype.redirectUriKey = "RedirectUri";
/*<EndStatics Name="Infragistics.GenericOAuthProvider" />*/

/*<BeginStatics Name="Infragistics.QuickBooksOAuthProvider" />*/

$.ig.QuickBooksOAuthProvider.prototype.environmentProperty = "environment";
$.ig.QuickBooksOAuthProvider.prototype.environmentSandbox = "sandbox";
$.ig.QuickBooksOAuthProvider.prototype.environmentProduction = "production";
$.ig.QuickBooksOAuthProvider.prototype._useSandbox = false;
/*<EndStatics Name="Infragistics.QuickBooksOAuthProvider" />*/

/*<BeginStatics Name="Infragistics.QuickBooksUserInfo" />*/

$.ig.QuickBooksUserInfo.prototype.userIdProperty = "userid";
/*<EndStatics Name="Infragistics.QuickBooksUserInfo" />*/

/*<BeginStatics Name="Infragistics.ReportPlusFile" />*/

$.ig.ReportPlusFile.prototype.rootType = "root";
$.ig.ReportPlusFile.prototype.folderType = "folder";
/*<EndStatics Name="Infragistics.ReportPlusFile" />*/

/*<BeginStatics Name="Infragistics.GenericRequest" />*/

$.ig.GenericRequest.prototype._defaultTimeout = -1;
/*<EndStatics Name="Infragistics.GenericRequest" />*/

/*<BeginStatics Name="Infragistics.PendingRequestsManager" />*/

$.ig.PendingRequestsManager.prototype.__instance = null;
/*<EndStatics Name="Infragistics.PendingRequestsManager" />*/

/*<BeginStatics Name="Infragistics.RequestDelegateManager" />*/

$.ig.RequestDelegateManager.prototype.__utility = null;
/*<EndStatics Name="Infragistics.RequestDelegateManager" />*/

/*<BeginStatics Name="Infragistics.RequestsLocalizationKeys" />*/

$.ig.RequestsLocalizationKeys.prototype.myDrive = "MyDrive";
$.ig.RequestsLocalizationKeys.prototype.sharedWithMe = "SharedWithMe";
$.ig.RequestsLocalizationKeys.prototype.starred = "Starred";
$.ig.RequestsLocalizationKeys.prototype.trash = "Trash";
$.ig.RequestsLocalizationKeys.prototype.sharedDrives = "SharedDrives";
$.ig.RequestsLocalizationKeys.prototype.myDriveFolderName = "My Drive";
$.ig.RequestsLocalizationKeys.prototype.sharedWithMeFolderName = "Shared With Me";
$.ig.RequestsLocalizationKeys.prototype.openInWord = "Open in Word ";
$.ig.RequestsLocalizationKeys.prototype.openInExcel = "Open in Excel ";
$.ig.RequestsLocalizationKeys.prototype.openInPowerPoint = "Open in PowerPoint ";
$.ig.RequestsLocalizationKeys.prototype.openInDocs = "Open in Docs ";
$.ig.RequestsLocalizationKeys.prototype.openInSheets = "Open in Sheets ";
$.ig.RequestsLocalizationKeys.prototype.openInSlides = "Open in Slides ";
$.ig.RequestsLocalizationKeys.prototype.openInOneNote = "Open in OneNote ";
$.ig.RequestsLocalizationKeys.prototype.editInWord = "Edit in Word ";
$.ig.RequestsLocalizationKeys.prototype.editInExcel = "Edit in Excel ";
$.ig.RequestsLocalizationKeys.prototype.editInPowerPoint = "Edit in PowerPoint ";
$.ig.RequestsLocalizationKeys.prototype.editInDocs = "Edit in Docs ";
$.ig.RequestsLocalizationKeys.prototype.editInSheets = "Edit in Sheets ";
$.ig.RequestsLocalizationKeys.prototype.editInSlides = "Edit in Slides ";
$.ig.RequestsLocalizationKeys.prototype.editInOneNote = "Edit in OneNote ";
$.ig.RequestsLocalizationKeys.prototype.online = "Online";
$.ig.RequestsLocalizationKeys.prototype.googleDoc = "Google Doc";
$.ig.RequestsLocalizationKeys.prototype.googleSheet = "Google Sheet";
$.ig.RequestsLocalizationKeys.prototype.googleSlide = "Google Slide";
$.ig.RequestsLocalizationKeys.prototype.owner = "Owner";
$.ig.RequestsLocalizationKeys.prototype.type = "Type";
$.ig.RequestsLocalizationKeys.prototype.fileType = "File Type";
$.ig.RequestsLocalizationKeys.prototype.folder = "Folder";
$.ig.RequestsLocalizationKeys.prototype.filePath = "File Path";
$.ig.RequestsLocalizationKeys.prototype.folderPath = "Folder Path";
$.ig.RequestsLocalizationKeys.prototype.fileLocation = "File Location";
$.ig.RequestsLocalizationKeys.prototype.locationPath = "Location Path";
$.ig.RequestsLocalizationKeys.prototype.oneDriveAccount = "OneDrive Account";
$.ig.RequestsLocalizationKeys.prototype.sharePointAccount = "SharePoint Account";
$.ig.RequestsLocalizationKeys.prototype.dropboxAccount = "Dropbox Account";
$.ig.RequestsLocalizationKeys.prototype.boxAccount = "Box Account";
$.ig.RequestsLocalizationKeys.prototype.googleAccount = "Google Account";
$.ig.RequestsLocalizationKeys.prototype.oneDrive = "OneDrive";
$.ig.RequestsLocalizationKeys.prototype.oneDriveForBusiness = "OneDrive For Business";
$.ig.RequestsLocalizationKeys.prototype.sharePoint = "SharePoint";
$.ig.RequestsLocalizationKeys.prototype.dropbox = "Dropbox";
$.ig.RequestsLocalizationKeys.prototype.box = "Box";
$.ig.RequestsLocalizationKeys.prototype.google = "Google";
$.ig.RequestsLocalizationKeys.prototype.pathNotFound = "Path not found";
$.ig.RequestsLocalizationKeys.prototype.searchingForPath = "Searching for path ...";
$.ig.RequestsLocalizationKeys.prototype.showProgressIcon = "ShowProgressIcon";
/*<EndStatics Name="Infragistics.RequestsLocalizationKeys" />*/

/*<BeginStatics Name="Infragistics.SimpleRequestManager" />*/

$.ig.SimpleRequestManager.prototype.__manager = null;
/*<EndStatics Name="Infragistics.SimpleRequestManager" />*/


} (jQuery));

